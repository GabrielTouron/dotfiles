{"version":3,"file":"popup/main.js","mappings":"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,iBE1CW,MAAMsB,GASnBzlJ,YAAY0lJ,GARZ,KAAAC,OAAqB,GACrB,KAAAD,aAAoB,CAAC,EACrB,KAAAE,WAAkB,CAAC,EACnB,KAAA9gI,QAAe,CAAC,EAChB,KAAA4zG,SAAgB,CAAC,EACjB,KAAAmtB,WAAkB,KAIhB3iJ,KAAKwiJ,aAAeA,CACtB,ECXK,MAAMI,IACK,GAAAC,mBAA+B,CAE7C,WACA,YACA,QACA,gBACA,SACA,iBACA,SACA,UACA,cACA,WAEA,eACA,gBACA,gBACA,iBACA,aACA,eAGc,GAAAC,wBAAoC,CAClD,kBACA,UACA,eACA,UAGc,GAAAC,sBAAkC,CAChD,QACA,WACA,SACA,OACA,SACA,QACA,QACA,UAIG,MAAMC,IACK,GAAAC,eAA2B,CACzC,mBACA,cACA,WACA,SACA,YACA,cACA,aACA,YACA,gBAGc,GAAAC,uBAAmC,IAC9CF,GAA4BC,eAC/B,eAGc,GAAAE,qBAAiC,CAC/C,UACA,YACA,kBACA,aACA,OACA,OAGc,GAAAC,0BAAsC,CACpD,UACA,YACA,kBACA,aACA,UAGc,GAAAC,qBAAiC,CAC/C,YACA,SACA,cACA,WACA,SACA,KACA,QACA,UACA,cACA,eACA,QACA,eACA,YACA,UAGc,GAAAC,0BAAsC,CACpD,YACA,SACA,cACA,WACA,QACA,UACA,eACA,YACA,UAGc,GAAAC,qBAAiC,CAC/C,SACA,WACA,gBACA,kBACA,QACA,UACA,cACA,cACA,WACA,aACA,SACA,QACA,UACA,QACA,UACA,kBACA,0BACA,mBAGc,GAAAC,0BAAsC,CACpD,QACA,UACA,QACA,UACA,kBACA,2BAGc,GAAAC,sBAAkC,CAChD,YACA,eACA,WACA,aACA,QACA,UACA,SACA,cACA,YACA,wBACA,mBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,eACA,YACA,eACA,YACA,oBACA,iBACA,oBACA,iBACA,gBACA,kBACA,aACA,eACA,0BACA,wBACA,qBACA,UACA,cACA,cACA,eACA,UAGc,GAAAC,qBAAiC,CAC/C,WACA,cACA,UACA,YACA,QACA,UACA,SACA,cACA,YACA,uBACA,kBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,UACA,YACA,gBACA,cACA,cACA,YACA,cACA,YACA,mBACA,iBACA,mBACA,iBACA,cACA,gBACA,iBACA,mBACA,yBACA,uBACA,cACA,qBACA,uBACA,gBACA,gBACA,UAGc,GAAAC,cAA0B,CACxC,MACA,MACA,OACA,SACA,SACA,WACA,WACA,MACA,MACA,OACA,MACA,OACA,UACA,YACA,gBACA,gBACA,SACA,aACA,oBACA,MACA,OAGc,GAAAC,oBAAgC,CAC9C,UACA,YACA,aACA,WACA,WAKc,GAAAC,UAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,GAAAC,cAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/C,GAAAC,aAAe,CAAC,OAAQ,OAAQ,OAAQ,KAAM,OAAQ,QAGjE,MAAMC,IACK,GAAAC,mBAA+B,CAC7C,mBACA,cACA,WACA,SACA,YACA,cACA,aACA,YACA,gBAGc,GAAAC,mBAA+B,CAAC,OAAQ,YAAa,aAErD,GAAAC,wBAAoC,CAAC,YAAa,aAElD,GAAAC,gBAA4B,CAAC,mBAAoB,SAAU,SAE3D,GAAAC,oBAAgC,CAE9C,SACA,aACA,aACA,UAEA,WAGc,GAAAC,qBAAiC,CAC/C,SACA,cACA,kBACA,iBACA,WACA,YAGc,GAAAC,mBAA+B,CAE7C,SACA,YACA,SACA,UACA,cACA,WACA,SAEA,WACA,gBAGc,GAAAC,gBAA4B,CAAC,SAAU,iBAEvC,GAAAC,kBAA8B,CAC5C,UACA,iBACA,OACA,SACA,eACA,eACA,YACA,aAGc,GAAAC,uBAAmC,CACjD,eACA,eACA,YACA,aAGc,GAAAC,mBAA+B,CAC7C,YACA,iBACA,SACA,YAGc,GAAAC,mBAA+B,CAC7C,YACA,iBACA,SACA,YAGc,GAAAC,mBAA+B,CAC7C,YACA,iBACA,SACA,YAGc,GAAAC,qBAAiC,CAC/C,SACA,MACA,OACA,WACA,cACA,YACA,cACA,iBACA,eACA,sBACA,oBAGc,GAAAC,eAA2B,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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///../../libs/angular/src/components/toastr.component.ts","webpack:///../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack:///../../libs/common/src/abstractions/i18n.service.ts","webpack:///../../libs/angular/src/pipes/i18n.pipe.ts","webpack:///../../libs/angular/src/pipes/search.pipe.ts","webpack:///../../libs/angular/src/pipes/user-name.pipe.ts","webpack:///../../libs/angular/src/jslib.module.ts","webpack:///../../libs/common/src/enums/authenticationStatus.ts","webpack:///../../libs/common/src/abstractions/auth.service.ts","webpack:///../../libs/common/src/abstractions/messaging.service.ts","webpack:///../../libs/common/src/abstractions/keyConnector.service.ts","webpack:///../../libs/angular/src/guards/auth.guard.ts","webpack:///../../libs/angular/src/guards/lock.guard.ts","webpack:///../../libs/angular/src/guards/unauth.guard.ts","webpack:///../../libs/common/src/abstractions/platformUtils.service.ts","webpack:///../../libs/common/src/abstractions/environment.service.ts","webpack:///../../libs/angular/src/components/environment.component.ts","webpack:///../../libs/common/src/models/domain/environment-urls.ts","webpack:///../../libs/common/src/services/environment.service.ts","webpack:///../../libs/common/src/misc/flags.ts","webpack:///./src/flags.ts","webpack:///../../libs/common/src/enums/encryptionType.ts","webpack:///./src/services/browser-environment.service.ts","webpack:///../../libs/angular/src/directives/box-row.directive.ts","webpack:///../../libs/common/src/misc/utils.ts","webpack:///../../libs/common/src/models/domain/enc-string.ts","webpack:///../../libs/common/src/models/domain/domain-base.ts","webpack:///../../libs/common/src/models/domain/master-password-policy-options.ts","webpack:///../../libs/angular/src/components/callout.component.html","webpack:///../../libs/angular/src/components/callout.component.ts","webpack:///../../libs/angular/src/directives/input-verbatim.directive.ts","webpack:///../../libs/angular/src/directives/stop-click.directive.ts","webpack:///./src/popup/accounts/environment.component.html","webpack:///./src/popup/accounts/environment.component.ts","webpack:///../../libs/common/src/models/request/password-hint.request.ts","webpack:///../../libs/common/src/abstractions/api.service.ts","webpack:///../../libs/common/src/abstractions/log.service.ts","webpack:///../../libs/common/src/abstractions/login.service.ts","webpack:///../../libs/angular/src/components/hint.component.ts","webpack:///../../libs/common/src/abstractions/validation.service.ts","webpack:///../../libs/angular/src/directives/api-action.directive.ts","webpack:///../../libs/angular/src/directives/autofocus.directive.ts","webpack:///./src/popup/accounts/hint.component.ts","webpack:///./src/popup/accounts/hint.component.html","webpack:///../../libs/common/src/abstractions/state.service.ts","webpack:///./src/popup/accounts/home.component.html","webpack:///./src/popup/accounts/home.component.ts","webpack:///../../libs/common/src/enums/hashPurpose.ts","webpack:///../../libs/common/src/enums/keySuffixOptions.ts","webpack:///../../libs/common/src/models/request/secret-verification.request.ts","webpack:///../../libs/common/src/abstractions/crypto.service.ts","webpack:///../../libs/common/src/abstractions/vaultTimeout/vaultTimeout.service.ts","webpack:///../../libs/common/src/abstractions/vaultTimeout/vaultTimeoutSettings.service.ts","webpack:///../../libs/angular/src/components/lock.component.ts","webpack:///./src/models/biometricErrors.ts","webpack:///../../libs/angular/src/directives/a11y-title.directive.ts","webpack:///../../libs/common/src/enums/clientType.ts","webpack:///../../libs/common/src/enums/deviceType.ts","webpack:///./src/browser/safariApp.ts","webpack:///./src/services/browserPlatformUtils.service.ts","webpack:///./src/browser/browserApi.ts","webpack:///./src/popup/services/popup-utils.service.ts","webpack:///./src/popup/components/private-mode-warning.component.html","webpack:///./src/popup/components/private-mode-warning.component.ts","webpack:///./src/popup/accounts/lock.component.html","webpack:///./src/popup/accounts/lock.component.ts","webpack:///../../libs/common/src/enums/authenticationType.ts","webpack:///../../libs/common/src/models/domain/log-in-credentials.ts","webpack:///../../libs/common/src/misc/captcha_iframe.ts","webpack:///../../libs/common/src/misc/iframe_component.ts","webpack:///../../libs/angular/src/components/captchaProtected.component.ts","webpack:///../../libs/common/src/abstractions/appId.service.ts","webpack:///../../libs/common/src/abstractions/passwordGeneration.service.ts","webpack:///../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack:///../../libs/common/src/abstractions/formValidationErrors.service.ts","webpack:///../../libs/angular/src/components/login.component.ts","webpack:///../../libs/common/src/abstractions/sync/sync.service.abstraction.ts","webpack:///./src/popup/accounts/login.component.ts","webpack:///../../libs/common/src/enums/kdfType.ts","webpack:///./src/popup/accounts/login.component.html","webpack:///../../libs/common/src/models/request/keys.request.ts","webpack:///../../libs/common/src/models/request/register.request.ts","webpack:///../../libs/angular/src/validators/inputsFieldMatch.validator.ts","webpack:///../../libs/angular/src/components/register.component.ts","webpack:///../../libs/angular/src/shared/components/password-strength/password-strength.component.html","webpack:///../../libs/angular/src/shared/components/password-strength/password-strength.component.ts","webpack:///./src/popup/accounts/register.component.html","webpack:///./src/popup/accounts/register.component.ts","webpack:///../../libs/common/src/abstractions/organization/organization-api.service.abstraction.ts","webpack:///../../libs/angular/src/components/remove-password.component.ts","webpack:///./src/popup/accounts/remove-password.component.html","webpack:///./src/popup/accounts/remove-password.component.ts","webpack:///../../libs/common/src/models/request/organization-user-reset-password-enrollment.request.ts","webpack:///../../libs/common/src/models/request/set-password.request.ts","webpack:///../../libs/common/src/abstractions/policy/policy.service.abstraction.ts","webpack:///../../libs/angular/src/components/change-password.component.ts","webpack:///../../libs/common/src/abstractions/policy/policy-api.service.abstraction.ts","webpack:///../../libs/angular/src/components/set-password.component.ts","webpack:///./src/popup/accounts/set-password.component.html","webpack:///./src/popup/accounts/set-password.component.ts","webpack:///../../libs/angular/src/components/sso.component.ts","webpack:///./src/popup/accounts/sso.component.ts","webpack:///../../libs/common/src/abstractions/twoFactor.service.ts","webpack:///../../libs/angular/src/components/two-factor-options.component.ts","webpack:///./src/popup/accounts/two-factor-options.component.html","webpack:///./src/popup/accounts/two-factor-options.component.ts","webpack:///../../libs/common/src/enums/twoFactorProviderType.ts","webpack:///../../libs/common/src/misc/webauthn_iframe.ts","webpack:///../../libs/common/src/models/request/identity-token/token-two-factor.request.ts","webpack:///../../libs/common/src/models/request/two-factor-email.request.ts","webpack:///../../libs/common/src/services/twoFactor.service.ts","webpack:///../../libs/angular/src/components/two-factor.component.ts","webpack:///../../libs/common/src/abstractions/broadcaster.service.ts","webpack:///./src/popup/accounts/two-factor.component.html","webpack:///./src/popup/accounts/two-factor.component.ts","webpack:///../../libs/common/src/models/request/update-temp-password.request.ts","webpack:///../../libs/common/src/models/request/organization-user-reset-password.request.ts","webpack:///../../libs/angular/src/components/update-temp-password.component.ts","webpack:///./src/popup/accounts/update-temp-password.component.html","webpack:///./src/popup/accounts/update-temp-password.component.ts","webpack:///../../libs/common/src/abstractions/usernameGeneration.service.ts","webpack:///../../libs/angular/src/components/generator.component.ts","webpack:///../../libs/angular/src/directives/select-copy.directive.ts","webpack:///./src/popup/components/pop-out.component.html","webpack:///./src/popup/components/pop-out.component.ts","webpack:///../../libs/angular/src/pipes/color-password.pipe.ts","webpack:///./src/popup/generator/generator.component.html","webpack:///./src/popup/generator/generator.component.ts","webpack:///../../libs/common/src/enums/policyType.ts","webpack:///../../libs/common/src/enums/sendType.ts","webpack:///../../libs/angular/src/components/password-generator-history.component.ts","webpack:///./src/popup/generator/password-generator-history.component.html","webpack:///./src/popup/generator/password-generator-history.component.ts","webpack:///../../libs/common/src/models/view/send-file.view.ts","webpack:///../../libs/common/src/models/view/send-text.view.ts","webpack:///../../libs/common/src/models/domain/symmetric-crypto-key.ts","webpack:///../../libs/common/src/models/view/send.view.ts","webpack:///../../libs/common/src/abstractions/send.service.ts","webpack:///../../libs/angular/src/components/send/efflux-dates.component.ts","webpack:///../../libs/angular/src/components/send/add-edit.component.ts","webpack:///./src/services/abstractions/browser-state.service.ts","webpack:///./src/popup/send/efflux-dates.component.html","webpack:///./src/popup/send/efflux-dates.component.ts","webpack:///./src/popup/send/send-add-edit.component.html","webpack:///./src/popup/send/send-add-edit.component.ts","webpack:///../../libs/common/src/abstractions/search.service.ts","webpack:///../../libs/angular/src/components/send/send.component.ts","webpack:///./src/models/browserComponentState.ts","webpack:///./src/models/browserSendComponentState.ts","webpack:///../../libs/angular/src/directives/stop-prop.directive.ts","webpack:///./src/popup/components/send-list.component.html","webpack:///./src/popup/components/send-list.component.ts","webpack:///./src/popup/send/send-groupings.component.html","webpack:///./src/popup/send/send-groupings.component.ts","webpack:///./src/popup/send/send-type.component.html","webpack:///./src/popup/send/send-type.component.ts","webpack:///./src/popup/services/debounceNavigationService.ts","webpack:///./src/popup/settings/excluded-domains.component.html","webpack:///./src/popup/settings/excluded-domains.component.ts","webpack:///../../libs/common/src/enums/encryptedExportType.ts","webpack:///../../libs/common/src/enums/eventType.ts","webpack:///../../libs/common/src/abstractions/export.service.ts","webpack:///../../libs/common/src/abstractions/event.service.ts","webpack:///../../libs/common/src/abstractions/userVerification/userVerification.service.abstraction.ts","webpack:///../../libs/common/src/abstractions/fileDownload/fileDownload.service.ts","webpack:///../../libs/angular/src/components/export.component.ts","webpack:///../../libs/common/src/abstractions/organization/organization.service.abstraction.ts","webpack:///../../libs/common/src/enums/verificationType.ts","webpack:///../../libs/angular/src/components/export-scope-callout.component.html","webpack:///../../libs/angular/src/components/export-scope-callout.component.ts","webpack:///../../libs/angular/src/components/user-verification.component.html","webpack:///../../libs/angular/src/components/user-verification.component.ts","webpack:///./src/popup/components/user-verification.component.html","webpack:///./src/popup/components/user-verification.component.ts","webpack:///./src/popup/settings/export.component.html","webpack:///./src/popup/settings/export.component.ts","webpack:///../../libs/common/src/models/view/folder.view.ts","webpack:///../../libs/common/src/abstractions/folder/folder.service.abstraction.ts","webpack:///../../libs/common/src/abstractions/folder/folder-api.service.abstraction.ts","webpack:///../../libs/angular/src/components/folder-add-edit.component.ts","webpack:///./src/popup/settings/folder-add-edit.component.html","webpack:///./src/popup/settings/folder-add-edit.component.ts","webpack:///../../libs/common/src/enums/themeType.ts","webpack:///../../libs/common/src/enums/uriMatchType.ts","webpack:///./src/popup/settings/folders.component.html","webpack:///./src/popup/settings/folders.component.ts","webpack:///../../libs/common/src/abstractions/totp.service.ts","webpack:///../../libs/angular/src/services/theming/theming.service.abstraction.ts","webpack:///./src/popup/settings/options.component.html","webpack:///./src/popup/settings/options.component.ts","webpack:///../../libs/angular/src/components/premium.component.ts","webpack:///./src/popup/settings/premium.component.html","webpack:///./src/popup/settings/premium.component.ts","webpack:///../../libs/angular/src/components/modal/modal.ref.ts","webpack:///../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack:///../../libs/angular/src/components/modal/modal-injector.ts","webpack:///../../libs/angular/src/services/modal.service.ts","webpack:///../../libs/angular/src/components/set-pin.component.ts","webpack:///./src/popup/components/set-pin.component.html","webpack:///./src/popup/components/set-pin.component.ts","webpack:///../../libs/common/src/abstractions/config/config.service.abstraction.ts","webpack:///./src/popup/settings/about.component.html","webpack:///./src/popup/settings/about.component.ts","webpack:///../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/vault-timeout-input.component.html","webpack:///./src/popup/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/settings.component.html","webpack:///./src/popup/settings/settings.component.ts","webpack:///../../libs/common/src/enums/cipherRepromptType.ts","webpack:///../../libs/common/src/enums/cipherType.ts","webpack:///../../libs/common/src/enums/organizationUserStatusType.ts","webpack:///../../libs/common/src/enums/secureNoteType.ts","webpack:///../../libs/common/src/enums/linkedIdType.ts","webpack:///./src/popup/settings/sync.component.ts","webpack:///./src/popup/tabs.component.html","webpack:///./src/popup/settings/sync.component.html","webpack:///./src/popup/tabs.component.ts","webpack:///../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack:///../../libs/common/src/models/view/item.view.ts","webpack:///../../libs/common/src/services/cryptography/initializer-key.ts","webpack:///../../libs/common/src/models/view/card.view.ts","webpack:///../../libs/common/src/models/view/attachment.view.ts","webpack:///../../libs/common/src/models/view/field.view.ts","webpack:///../../libs/common/src/models/view/identity.view.ts","webpack:///../../libs/common/src/models/view/login-uri.view.ts","webpack:///../../libs/common/src/models/view/login.view.ts","webpack:///../../libs/common/src/models/view/password-history.view.ts","webpack:///../../libs/common/src/models/view/secure-note.view.ts","webpack:///../../libs/common/src/models/view/cipher.view.ts","webpack:///../../libs/common/src/abstractions/cipher.service.ts","webpack:///../../libs/common/src/abstractions/audit.service.ts","webpack:///../../libs/common/src/abstractions/collection.service.ts","webpack:///../../libs/common/src/abstractions/passwordReprompt.service.ts","webpack:///../../libs/common/src/enums/fieldType.ts","webpack:///../../libs/angular/src/components/add-edit.component.ts","webpack:///../../libs/angular/src/components/add-edit-custom-fields.component.ts","webpack:///../../libs/angular/src/directives/true-false-value.directive.ts","webpack:///./src/popup/vault/add-edit-custom-fields.component.html","webpack:///./src/popup/vault/add-edit-custom-fields.component.ts","webpack:///./src/popup/vault/add-edit.component.html","webpack:///./src/popup/vault/add-edit.component.ts","webpack:///../../libs/common/src/models/domain/enc-array-buffer.ts","webpack:///../../libs/common/src/models/response/base.response.ts","webpack:///../../libs/common/src/models/response/error.response.ts","webpack:///../../libs/angular/src/components/attachments.component.ts","webpack:///./src/popup/vault/attachments.component.html","webpack:///./src/popup/vault/attachments.component.ts","webpack:///../../libs/angular/src/components/ciphers.component.ts","webpack:///../../libs/angular/src/vault/vault-filter/models/vault-filter.model.ts","webpack:///../../libs/common/src/models/domain/tree-node.ts","webpack:///../../libs/common/src/misc/serviceUtils.ts","webpack:///../../libs/angular/src/vault/vault-filter/models/dynamic-tree-node.model.ts","webpack:///../../libs/angular/src/vault/vault-filter/services/vault-filter.service.ts","webpack:///./src/services/vaultFilter.service.ts","webpack:///../../libs/angular/src/directives/fallback-src.directive.ts","webpack:///../../libs/angular/src/components/icon.component.html","webpack:///../../libs/angular/src/components/icon.component.ts","webpack:///./src/popup/components/action-buttons.component.html","webpack:///./src/popup/components/action-buttons.component.ts","webpack:///./src/popup/components/cipher-row.component.html","webpack:///./src/popup/components/cipher-row.component.ts","webpack:///../../libs/angular/src/pipes/ellipsis.pipe.ts","webpack:///./src/popup/vault/vault-select.component.html","webpack:///./src/popup/vault/vault-select.component.ts","webpack:///./src/popup/vault/ciphers.component.html","webpack:///./src/popup/vault/ciphers.component.ts","webpack:///../../libs/angular/src/components/collections.component.ts","webpack:///./src/popup/vault/collections.component.html","webpack:///./src/popup/vault/collections.component.ts","webpack:///./src/services/abstractions/autofill.service.ts","webpack:///./src/popup/vault/current-tab.component.html","webpack:///./src/popup/vault/current-tab.component.ts","webpack:///../../libs/angular/src/components/password-history.component.ts","webpack:///./src/popup/vault/password-history.component.html","webpack:///./src/popup/vault/password-history.component.ts","webpack:///../../libs/common/src/types/checkable.ts","webpack:///../../libs/angular/src/components/share.component.ts","webpack:///./src/popup/vault/share.component.html","webpack:///./src/popup/vault/share.component.ts","webpack:///./src/models/browserGroupingsComponentState.ts","webpack:///./src/popup/vault/vault-filter.component.html","webpack:///./src/popup/vault/vault-filter.component.ts","webpack:///../../libs/common/src/abstractions/token.service.ts","webpack:///../../libs/angular/src/components/view.component.ts","webpack:///../../libs/angular/src/components/view-custom-fields.component.ts","webpack:///../../libs/angular/src/pipes/color-password-count.pipe.ts","webpack:///./src/popup/vault/view-custom-fields.component.html","webpack:///./src/popup/vault/view-custom-fields.component.ts","webpack:///./src/popup/vault/view.component.html","webpack:///./src/popup/vault/view.component.ts","webpack:///./src/popup/app-routing.module.ts","webpack:///./src/popup/app-routing.animations.ts","webpack:///./src/popup/app.component.ts","webpack:///../../libs/angular/src/services/injection-tokens.ts","webpack:///../../libs/common/src/abstractions/account/account.service.ts","webpack:///../../libs/common/src/abstractions/config/config-api.service.abstraction.ts","webpack:///../../libs/common/src/abstractions/encrypt.service.ts","webpack:///../../libs/common/src/abstractions/fileUpload.service.ts","webpack:///../../libs/common/src/abstractions/notifications.service.ts","webpack:///../../libs/common/src/abstractions/provider.service.ts","webpack:///../../libs/common/src/abstractions/settings.service.ts","webpack:///../../libs/common/src/abstractions/stateMigration.service.ts","webpack:///../../libs/common/src/abstractions/storage.service.ts","webpack:///../../libs/common/src/abstractions/sync/syncNotifier.service.abstraction.ts","webpack:///../../libs/common/src/abstractions/userVerification/userVerification-api.service.abstraction.ts","webpack:///../../libs/common/src/factories/accountFactory.ts","webpack:///../../libs/common/src/factories/globalStateFactory.ts","webpack:///../../libs/common/src/factories/stateFactory.ts","webpack:///../../libs/common/src/models/data/server-config.data.ts","webpack:///../../libs/common/src/models/domain/account.ts","webpack:///../../libs/common/src/enums/stateVersion.ts","webpack:///../../libs/common/src/models/domain/window-state.ts","webpack:///../../libs/common/src/models/domain/global-state.ts","webpack:///../../libs/common/src/enums/notificationType.ts","webpack:///../../libs/common/src/models/response/notification.response.ts","webpack:///../../libs/common/src/services/anonymousHub.service.ts","webpack:///../../libs/common/src/models/request/device.request.ts","webpack:///../../libs/common/src/models/request/identity-token/token.request.ts","webpack:///../../libs/common/src/models/request/identity-token/api-token.request.ts","webpack:///../../libs/common/src/models/response/api-key.response.ts","webpack:///../../libs/common/src/models/api/card.api.ts","webpack:///../../libs/common/src/models/api/field.api.ts","webpack:///../../libs/common/src/models/api/identity.api.ts","webpack:///../../libs/common/src/models/api/login-uri.api.ts","webpack:///../../libs/common/src/models/api/login.api.ts","webpack:///../../libs/common/src/models/api/secure-note.api.ts","webpack:///../../libs/common/src/models/response/attachment.response.ts","webpack:///../../libs/common/src/models/response/password-history.response.ts","webpack:///../../libs/common/src/models/response/cipher.response.ts","webpack:///../../libs/common/src/models/response/attachment-upload-data.response.ts","webpack:///../../libs/common/src/models/response/auth-request.response.ts","webpack:///../../libs/common/src/models/response/authentication/register.response.ts","webpack:///../../libs/common/src/models/response/billing.response.ts","webpack:///../../libs/common/src/models/response/billing-history.response.ts","webpack:///../../libs/common/src/models/response/billing-payment.response.ts","webpack:///../../libs/common/src/models/response/breach-account.response.ts","webpack:///../../libs/common/src/models/response/selection-read-only.response.ts","webpack:///../../libs/common/src/models/response/collection.response.ts","webpack:///../../libs/common/src/models/response/device-verification.response.ts","webpack:///../../libs/common/src/models/response/global-domain.response.ts","webpack:///../../libs/common/src/models/response/domains.response.ts","webpack:///../../libs/common/src/models/response/emergency-access.response.ts","webpack:///../../libs/common/src/models/response/event.response.ts","webpack:///../../libs/common/src/models/response/group.response.ts","webpack:///../../libs/common/src/models/response/identity-captcha.response.ts","webpack:///../../libs/common/src/models/response/identity-token.response.ts","webpack:///../../libs/common/src/models/response/identity-two-factor.response.ts","webpack:///../../libs/common/src/models/response/key-connector-user-key.response.ts","webpack:///../../libs/common/src/models/response/list.response.ts","webpack:///../../libs/common/src/models/response/organization-connection.response.ts","webpack:///../../libs/common/src/models/response/organization-export.response.ts","webpack:///../../libs/common/src/models/response/organization-sponsorship-sync-status.response.ts","webpack:///../../libs/common/src/models/response/organization-user-bulk-public-key.response.ts","webpack:///../../libs/common/src/models/response/organization-user-bulk.response.ts","webpack:///../../libs/common/src/models/api/permissions.api.ts","webpack:///../../libs/common/src/models/response/organization-user.response.ts","webpack:///../../libs/common/src/models/response/profile-organization.response.ts","webpack:///../../libs/common/src/models/response/profile-provider-organization.response.ts","webpack:///../../libs/common/src/models/response/profile-provider.response.ts","webpack:///../../libs/common/src/models/response/profile.response.ts","webpack:///../../libs/common/src/models/response/payment.response.ts","webpack:///../../libs/common/src/models/response/plan.response.ts","webpack:///../../libs/common/src/models/response/policy.response.ts","webpack:///../../libs/common/src/models/response/prelogin.response.ts","webpack:///../../libs/common/src/models/response/provider/provider-organization.response.ts","webpack:///../../libs/common/src/models/response/provider/provider-user-bulk-public-key.response.ts","webpack:///../../libs/common/src/models/response/provider/provider-user-bulk.response.ts","webpack:///../../libs/common/src/models/response/provider/provider-user.response.ts","webpack:///../../libs/common/src/models/response/provider/provider.response.ts","webpack:///../../libs/common/src/models/api/send-file.api.ts","webpack:///../../libs/common/src/models/api/send-text.api.ts","webpack:///../../libs/common/src/models/response/send-access.response.ts","webpack:///../../libs/common/src/models/response/send-file-download-data.response.ts","webpack:///../../libs/common/src/models/response/send.response.ts","webpack:///../../libs/common/src/models/response/send-file-upload-data.response.ts","webpack:///../../libs/common/src/models/response/sso-pre-validate.response.ts","webpack:///../../libs/common/src/models/response/subscription.response.ts","webpack:///../../libs/common/src/models/response/folder.response.ts","webpack:///../../libs/common/src/models/response/sync.response.ts","webpack:///../../libs/common/src/models/response/tax-info.response.ts","webpack:///../../libs/common/src/models/response/tax-rate.response.ts","webpack:///../../libs/common/src/models/response/two-factor-authenticator.response.ts","webpack:///../../libs/common/src/models/response/two-factor-duo.response.ts","webpack:///../../libs/common/src/models/response/two-factor-email.response.ts","webpack:///../../libs/common/src/models/response/two-factor-provider.response.ts","webpack:///../../libs/common/src/models/response/two-factor-recover.response.ts","webpack:///../../libs/common/src/models/response/two-factor-web-authn.response.ts","webpack:///../../libs/common/src/models/response/two-factor-yubi-key.response.ts","webpack:///../../libs/common/src/models/response/user-key.response.ts","webpack:///../../libs/common/src/enums/htmlStorageLocation.ts","webpack:///../../libs/common/src/services/api.service.ts","webpack:///../../libs/common/src/services/appId.service.ts","webpack:///../../libs/common/src/services/audit.service.ts","webpack:///../../libs/common/src/misc/throttle.ts","webpack:///../../libs/common/src/models/domain/auth-result.ts","webpack:///../../libs/common/src/misc/logInStrategies/logIn.strategy.ts","webpack:///../../libs/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack:///../../libs/common/src/models/request/identity-token/password-token.request.ts","webpack:///../../libs/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack:///../../libs/common/src/misc/logInStrategies/passwordlessLogin.strategy.ts","webpack:///../../libs/common/src/models/request/identity-token/sso-token.request.ts","webpack:///../../libs/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack:///../../libs/common/src/models/request/prelogin.request.ts","webpack:///../../libs/common/src/services/auth.service.ts","webpack:///../../libs/common/src/misc/sequentialize.ts","webpack:///../../libs/common/src/models/data/attachment.data.ts","webpack:///../../libs/common/src/models/data/card.data.ts","webpack:///../../libs/common/src/models/data/field.data.ts","webpack:///../../libs/common/src/models/data/identity.data.ts","webpack:///../../libs/common/src/models/data/login-uri.data.ts","webpack:///../../libs/common/src/models/data/login.data.ts","webpack:///../../libs/common/src/models/data/password-history.data.ts","webpack:///../../libs/common/src/models/data/secure-note.data.ts","webpack:///../../libs/common/src/models/data/cipher.data.ts","webpack:///../../libs/common/src/models/domain/attachment.ts","webpack:///../../libs/common/src/models/domain/card.ts","webpack:///../../libs/common/src/models/domain/field.ts","webpack:///../../libs/common/src/models/domain/identity.ts","webpack:///../../libs/common/src/models/domain/login-uri.ts","webpack:///../../libs/common/src/models/domain/login.ts","webpack:///../../libs/common/src/models/domain/password.ts","webpack:///../../libs/common/src/models/domain/secure-note.ts","webpack:///../../libs/common/src/models/domain/cipher.ts","webpack:///../../libs/common/src/models/domain/sorted-ciphers-cache.ts","webpack:///../../libs/common/src/models/request/cipher-bulk-delete.request.ts","webpack:///../../libs/common/src/models/request/cipher-bulk-move.request.ts","webpack:///../../libs/common/src/models/request/cipher-bulk-restore.request.ts","webpack:///../../libs/common/src/models/request/attachment.request.ts","webpack:///../../libs/common/src/models/request/cipher.request.ts","webpack:///../../libs/common/src/models/request/cipher-with-id.request.ts","webpack:///../../libs/common/src/models/request/cipher-bulk-share.request.ts","webpack:///../../libs/common/src/models/request/cipher-collections.request.ts","webpack:///../../libs/common/src/models/request/cipher-create.request.ts","webpack:///../../libs/common/src/models/request/cipher-partial.request.ts","webpack:///../../libs/common/src/models/request/cipher-share.request.ts","webpack:///../../libs/common/src/services/cipher.service.ts","webpack:///../../libs/common/src/models/data/collection.data.ts","webpack:///../../libs/common/src/models/view/collection.view.ts","webpack:///../../libs/common/src/models/domain/collection.ts","webpack:///../../libs/common/src/services/collection.service.ts","webpack:///../../libs/common/src/models/response/server-config.response.ts","webpack:///../../libs/common/src/abstractions/config/server-config.ts","webpack:///../../libs/common/src/enums/logLevelType.ts","webpack:///../../libs/common/src/services/consoleLog.service.ts","webpack:///../../libs/common/src/misc/wordlist.ts","webpack:///../../libs/common/src/models/domain/encrypted-organization-key.ts","webpack:///../../libs/common/src/services/crypto.service.ts","webpack:///../../libs/common/src/models/domain/encrypted-object.ts","webpack:///../../libs/common/src/services/cryptography/encrypt.service.implementation.ts","webpack:///../../libs/common/src/services/cryptography/get-class-initializer.ts","webpack:///../../libs/common/src/services/cryptography/multithread-encrypt.service.implementation.ts","webpack:///../../libs/common/src/models/data/event.data.ts","webpack:///../../libs/common/src/models/request/event.request.ts","webpack:///../../libs/common/src/services/event.service.ts","webpack:///../../libs/common/src/models/export/card.export.ts","webpack:///../../libs/common/src/models/export/field.export.ts","webpack:///../../libs/common/src/models/export/identity.export.ts","webpack:///../../libs/common/src/models/export/login-uri.export.ts","webpack:///../../libs/common/src/models/export/login.export.ts","webpack:///../../libs/common/src/models/export/secure-note.export.ts","webpack:///../../libs/common/src/models/export/cipher.export.ts","webpack:///../../libs/common/src/models/export/cipher-with-ids.export.ts","webpack:///../../libs/common/src/models/export/collection.export.ts","webpack:///../../libs/common/src/models/export/collection-with-id.export.ts","webpack:///../../libs/common/src/models/export/event.export.ts","webpack:///../../libs/common/src/models/domain/folder.ts","webpack:///../../libs/common/src/models/export/folder.export.ts","webpack:///../../libs/common/src/models/export/folder-with-id.export.ts","webpack:///../../libs/common/src/enums/fileUploadType.ts","webpack:///../../libs/common/src/services/export.service.ts","webpack:///../../libs/common/src/services/azureFileUpload.service.ts","webpack:///../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack:///../../libs/common/src/services/fileUpload.service.ts","webpack:///../../libs/common/src/models/data/folder.data.ts","webpack:///../../libs/common/src/models/request/folder.request.ts","webpack:///../../libs/common/src/services/folder/folder-api.service.ts","webpack:///../../libs/common/src/enums/organizationUserType.ts","webpack:///../../libs/common/src/services/folder/folder.service.ts","webpack:///../../libs/common/src/models/request/account/set-key-connector-key.request.ts","webpack:///../../libs/common/src/models/request/key-connector-user-key.request.ts","webpack:///../../libs/common/src/services/keyConnector.service.ts","webpack:///../../libs/common/src/services/login.service.ts","webpack:///../../libs/common/src/enums/ssoEnums.ts","webpack:///../../libs/common/src/services/notifications.service.ts","webpack:///../../libs/common/src/models/response/organization-api-key-information.response.ts","webpack:///../../libs/common/src/models/response/organization-auto-enroll-status.response.ts","webpack:///../../libs/common/src/models/response/keys.response.ts","webpack:///../../libs/common/src/models/response/organization-keys.response.ts","webpack:///../../libs/common/src/models/response/organization.response.ts","webpack:///../../libs/common/src/models/response/organization-subscription.response.ts","webpack:///../../libs/common/src/models/api/sso-config.api.ts","webpack:///../../libs/common/src/models/response/organization/organization-sso.response.ts","webpack:///../../libs/common/src/models/domain/organization.ts","webpack:///../../libs/common/src/services/organization/organization.service.ts","webpack:///../../libs/common/src/models/domain/generated-password-history.ts","webpack:///../../libs/common/src/models/domain/password-generator-policy-options.ts","webpack:///../../libs/common/src/services/passwordGeneration.service.ts","webpack:///../../libs/common/src/models/data/policy.data.ts","webpack:///../../libs/common/src/services/policy/policy-api.service.ts","webpack:///../../libs/common/src/models/domain/policy.ts","webpack:///../../libs/common/src/models/domain/reset-password-policy-options.ts","webpack:///../../libs/common/src/enums/providerUserStatusType.ts","webpack:///../../libs/common/src/enums/providerUserType.ts","webpack:///../../libs/common/src/services/policy/policy.service.ts","webpack:///../../libs/common/src/models/domain/provider.ts","webpack:///../../libs/common/src/services/provider.service.ts","webpack:///../../libs/common/src/services/search.service.ts","webpack:///../../libs/common/src/models/data/send-file.data.ts","webpack:///../../libs/common/src/models/data/send-text.data.ts","webpack:///../../libs/common/src/models/data/send.data.ts","webpack:///../../libs/common/src/models/domain/send-file.ts","webpack:///../../libs/common/src/models/domain/send-text.ts","webpack:///../../libs/common/src/models/domain/send.ts","webpack:///../../libs/common/src/models/request/send.request.ts","webpack:///../../libs/common/src/services/send.service.ts","webpack:///../../libs/common/src/enums/storageLocation.ts","webpack:///../../libs/common/src/services/settings.service.ts","webpack:///../../libs/common/src/models/data/provider.data.ts","webpack:///../../libs/common/src/models/domain/state.ts","webpack:///../../libs/common/src/services/state.service.ts","webpack:///../../libs/common/src/services/token.service.ts","webpack:///../../libs/common/src/services/stateMigration.service.ts","webpack:///../../libs/common/src/models/data/organization.data.ts","webpack:///../../libs/common/src/services/sync/sync.service.ts","webpack:///../../libs/common/src/services/sync/syncNotifier.service.ts","webpack:///../../libs/common/src/services/totp.service.ts","webpack:///../../libs/common/src/services/userVerification/userVerification-api.service.ts","webpack:///../../libs/common/src/models/request/account/verify-otp.request.ts","webpack:///../../libs/common/src/services/userVerification/userVerification.service.ts","webpack:///../../libs/common/src/emailForwarders/anonAddyForwarder.ts","webpack:///../../libs/common/src/emailForwarders/duckDuckGoForwarder.ts","webpack:///../../libs/common/src/emailForwarders/fastmailForwarder.ts","webpack:///../../libs/common/src/emailForwarders/firefoxRelayForwarder.ts","webpack:///../../libs/common/src/emailForwarders/forwarderOptions.ts","webpack:///../../libs/common/src/emailForwarders/simpleLoginForwarder.ts","webpack:///../../libs/common/src/services/usernameGeneration.service.ts","webpack:///../../libs/common/src/services/vaultTimeout/vaultTimeout.service.ts","webpack:///../../libs/common/src/services/vaultTimeout/vaultTimeoutSettings.service.ts","webpack:///../../libs/common/src/models/domain/decrypt-parameters.ts","webpack:///../../libs/common/src/services/webCryptoFunction.service.ts","webpack:///../../libs/angular/src/services/broadcaster.service.ts","webpack:///../../libs/common/src/services/broadcaster.service.ts","webpack:///../../libs/angular/src/components/password-reprompt.component.ts","webpack:///../../libs/angular/src/services/passwordReprompt.service.ts","webpack:///../../libs/angular/src/services/theming/themeBuilder.ts","webpack:///../../libs/angular/src/services/theming/theming.service.ts","webpack:///../../libs/angular/src/services/jslib-services.module.ts","webpack:///../../libs/common/src/abstractions/account/account-api.service.ts","webpack:///../../libs/common/src/services/account/account-api.service.ts","webpack:///../../libs/common/src/services/account/account.service.ts","webpack:///../../libs/common/src/services/formValidationErrors.service.ts","webpack:///../../libs/common/src/services/organization/organization-api.service.ts","webpack:///../../libs/common/src/services/config/config.service.ts","webpack:///../../libs/common/src/services/config/config-api.service.ts","webpack:///../../libs/common/src/abstractions/anonymousHub.service.ts","webpack:///../../libs/common/src/services/validation.service.ts","webpack:///../../libs/common/src/services/container.service.ts","webpack:///../../libs/common/src/services/memoryStorage.service.ts","webpack:///../../libs/common/src/services/system.service.ts","webpack:///./src/background/service_factories/factory-options.ts","webpack:///./src/services/abstractChromeStorageApi.service.ts","webpack:///./src/services/browserLocalStorage.service.ts","webpack:///./src/services/browserMemoryStorage.service.ts","webpack:///./src/services/localBackedSessionStorage.service.ts","webpack:///./src/background/service_factories/crypto-function-service.factory.ts","webpack:///./src/background/service_factories/log-service.factory.ts","webpack:///./src/decorators/dev-flag.decorator.ts","webpack:///./src/background/service_factories/encrypt-service.factory.ts","webpack:///./src/services/keyGeneration.service.ts","webpack:///./src/background/service_factories/storage-service.factory.ts","webpack:///./src/background/service_factories/key-generation-service.factory.ts","webpack:///./src/background/service_factories/app-id-service.factory.ts","webpack:///./src/decorators/session-sync-observable/session-syncer.ts","webpack:///./src/decorators/session-sync-observable/sync-item-metadata.ts","webpack:///./src/decorators/session-sync-observable/browser-session.decorator.ts","webpack:///./src/decorators/session-sync-observable/session-sync.decorator.ts","webpack:///./src/models/account.ts","webpack:///./src/services/browser-state.service.ts","webpack:///./src/background/service_factories/state-service.factory.ts","webpack:///./src/background/service_factories/state-migration-service.factory.ts","webpack:///./src/background/service_factories/environment-service.factory.ts","webpack:///./src/services/browserMessaging.service.ts","webpack:///./src/background/service_factories/messaging-service.factory.ts","webpack:///./src/background/service_factories/platform-utils-service.factory.ts","webpack:///./src/background/service_factories/token-service.factory.ts","webpack:///./src/background/service_factories/api-service.factory.ts","webpack:///./src/services/browserCrypto.service.ts","webpack:///./src/background/service_factories/crypto-service.factory.ts","webpack:///./src/services/i18n.service.ts","webpack:///../../libs/common/src/services/i18n.service.ts","webpack:///./src/background/service_factories/i18n-service.factory.ts","webpack:///./src/services/browser-organization.service.ts","webpack:///./src/background/service_factories/key-connector-service.factory.ts","webpack:///./src/background/service_factories/organization-service.factory.ts","webpack:///./src/background/service_factories/auth-service.factory.ts","webpack:///./src/background/service_factories/two-factor-service.factory.ts","webpack:///./src/services/browser-settings.service.ts","webpack:///./src/background/service_factories/cipher-service.factory.ts","webpack:///./src/background/service_factories/settings-service.factory.ts","webpack:///./src/background/service_factories/file-upload-service.factory.ts","webpack:///./src/listeners/update-badge.ts","webpack:///./src/background/service_factories/search-service.factory.ts","webpack:///./src/models/autofillScript.ts","webpack:///./src/services/autofillConstants.ts","webpack:///./src/services/autofill.service.ts","webpack:///./src/services/browser-folder.service.ts","webpack:///./src/services/browser-policy.service.ts","webpack:///./src/services/browserMessagingPrivateModeBackground.service.ts","webpack:///./src/services/vaultTimeout/vaultTimeout.service.ts","webpack:///./src/background/commands.background.ts","webpack:///./src/background/contextMenus.background.ts","webpack:///./src/background/idle.background.ts","webpack:///./src/background/nativeMessaging.background.ts","webpack:///./src/background/models/notificationQueueMessageType.ts","webpack:///./src/background/notification.background.ts","webpack:///./src/background/runtime.background.ts","webpack:///./src/background/tabs.background.ts","webpack:///./src/background/webRequest.background.ts","webpack:///./src/background/main.background.ts","webpack:///../../libs/common/src/abstractions/fileDownload/fileDownloadBuilder.ts","webpack:///./src/services/browserFileDownloadService.ts","webpack:///./src/services/browserMessagingPrivateModePopup.service.ts","webpack:///./src/popup/services/init.service.ts","webpack:///./src/popup/services/lock-guard.service.ts","webpack:///./src/popup/components/password-reprompt.component.ts","webpack:///./src/popup/components/password-reprompt.component.html","webpack:///./src/popup/services/password-reprompt.service.ts","webpack:///./src/popup/services/popup-search.service.ts","webpack:///./src/popup/services/unauth-guard.service.ts","webpack:///./src/popup/services/services.module.ts","webpack:///./src/popup/app.module.ts","webpack:///./src/popup/main.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/get javascript chunk filename","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Mir: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 17, blocks: [5, 4, 4, 4] },\n    { cardLength: 18, blocks: [6, 4, 4, 4] },\n    { cardLength: 19, blocks: [7, 4, 4, 4] },\n  ],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","import { Observable } from \"rxjs\";\n\nexport abstract class I18nService {\n  locale$: Observable<string>;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { CopyClickDirective } from \"./directives/copy-click.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { LaunchClickDirective } from \"./directives/launch-click.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { ColorPasswordCountPipe } from \"./pipes/color-password-count.pipe\";\nimport { ColorPasswordPipe } from \"./pipes/color-password.pipe\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\nimport { PasswordStrengthComponent } from \"./shared/components/password-strength/password-strength.component\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    CopyClickDirective,\n    LaunchClickDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    BitwardenToastModule,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    CopyClickDirective,\n    LaunchClickDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe],\n})\nexport class JslibModule {}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","import { Observable } from \"rxjs\";\n\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { AuthRequestPushNotification } from \"../models/response/notification.response\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  accessCode: string;\n  authRequestId: string;\n\n  logIn: (\n    credentials:\n      | ApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  authingWithPasswordless: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n  authResponsePushNotifiction: (notification: AuthRequestPushNotification) => Promise<any>;\n\n  getPushNotifcationObs$: () => Observable<any>;\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  getApplicationVersion: () => Promise<string>;\n  getApplicationVersionNumber: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  supportsSecureStorage: () => boolean;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n  scim?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  getScimUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n  isCloud: () => boolean;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive()\nexport class EnvironmentComponent {\n  @Output() onSaved = new EventEmitter();\n\n  iconsUrl: string;\n  identityUrl: string;\n  apiUrl: string;\n  webVaultUrl: string;\n  notificationsUrl: string;\n  baseUrl: string;\n  showCustom = false;\n\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService\n  ) {\n    const urls = this.environmentService.getUrls();\n\n    this.baseUrl = urls.base || \"\";\n    this.webVaultUrl = urls.webVault || \"\";\n    this.apiUrl = urls.api || \"\";\n    this.identityUrl = urls.identity || \"\";\n    this.iconsUrl = urls.icons || \"\";\n    this.notificationsUrl = urls.notifications || \"\";\n  }\n\n  async submit() {\n    const resUrls = await this.environmentService.setUrls({\n      base: this.baseUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      webVault: this.webVaultUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n    });\n\n    // re-set urls since service can change them, ex: prefixing https://\n    this.baseUrl = resUrls.base;\n    this.apiUrl = resUrls.api;\n    this.identityUrl = resUrls.identity;\n    this.webVaultUrl = resUrls.webVault;\n    this.iconsUrl = resUrls.icons;\n    this.notificationsUrl = resUrls.notifications;\n\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"environmentSaved\"));\n    this.saved();\n  }\n\n  toggleCustom() {\n    this.showCustom = !this.showCustom;\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nexport class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n\n  static fromJSON(obj: Jsonify<EnvironmentUrls>): EnvironmentUrls {\n    return Object.assign(new EnvironmentUrls(), obj);\n  }\n}\n","import { concatMap, Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  protected baseUrl: string;\n  protected webVaultUrl: string;\n  protected apiUrl: string;\n  protected identityUrl: string;\n  protected iconsUrl: string;\n  protected notificationsUrl: string;\n  protected eventsUrl: string;\n  private keyConnectorUrl: string;\n  private scimUrl: string = null;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.setUrlsFromStorage();\n        })\n      )\n      .subscribe();\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  getScimUrl() {\n    if (this.scimUrl != null) {\n      return this.scimUrl + \"/v2\";\n    }\n\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://scim.bitwarden.com/v2\"\n      : this.getWebVaultUrl() + \"/scim/v2\";\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    // scimUrl is not saved to storage\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    // scimUrl cannot be cleared\n    urls.scim = this.formatUrl(urls.scim) ?? this.scimUrl;\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n      // scimUrl is not saved to storage\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    this.scimUrl = urls.scim;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n      scim: this.scimUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n\n  isCloud(): boolean {\n    return [\"https://api.bitwarden.com\", \"https://vault.bitwarden.com/api\"].includes(\n      this.getApiUrl()\n    );\n  }\n}\n","// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedFlags = {\n  multithreadDecryption: boolean;\n};\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedDevFlags = {};\n\nfunction getFlags<T>(envFlags: string | T): T {\n  if (typeof envFlags === \"string\") {\n    return JSON.parse(envFlags) as T;\n  } else {\n    return envFlags as T;\n  }\n}\n\n/**\n * Gets the value of a feature flag from environment.\n * All flags default to \"on\" (true).\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the feature flag to check\n * @returns The value of the flag\n */\nexport function flagEnabled<Flags extends SharedFlags>(flag: keyof Flags): boolean {\n  const flags = getFlags<Flags>(process.env.FLAGS);\n  return flags[flag] == null || !!flags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n */\nexport function devFlagEnabled<DevFlags extends SharedDevFlags>(flag: keyof DevFlags): boolean {\n  if (process.env.ENV !== \"development\") {\n    return false;\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag] == null || !!devFlags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n * @throws Error if the flag is not enabled\n */\nexport function devFlagValue<DevFlags extends SharedDevFlags>(\n  flag: keyof DevFlags\n): DevFlags[keyof DevFlags] {\n  if (!devFlagEnabled(flag)) {\n    throw new Error(`This method should not be called, it is protected by a disabled dev flag.`);\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag];\n}\n","import {\n  flagEnabled as baseFlagEnabled,\n  devFlagEnabled as baseDevFlagEnabled,\n  devFlagValue as baseDevFlagValue,\n  SharedFlags,\n  SharedDevFlags,\n} from \"@bitwarden/common/misc/flags\";\n\nimport { GroupPolicyEnvironment } from \"./types/group-policy-environment\";\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type Flags = {} & SharedFlags;\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type DevFlags = {\n  storeSessionDecrypted?: boolean;\n  managedEnvironment?: GroupPolicyEnvironment;\n} & SharedDevFlags;\n\nexport function flagEnabled(flag: keyof Flags): boolean {\n  return baseFlagEnabled<Flags>(flag);\n}\n\nexport function devFlagEnabled(flag: keyof DevFlags) {\n  return baseDevFlagEnabled<DevFlags>(flag);\n}\n\nexport function devFlagValue(flag: keyof DevFlags) {\n  return baseDevFlagValue(flag);\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","import { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\n\nimport { devFlagEnabled, devFlagValue } from \"../flags\";\nimport { GroupPolicyEnvironment } from \"../types/group-policy-environment\";\n\nexport class BrowserEnvironmentService extends EnvironmentService {\n  constructor(stateService: StateService, private logService: LogService) {\n    super(stateService);\n  }\n\n  async hasManagedEnvironment(): Promise<boolean> {\n    try {\n      return (await this.getManagedEnvironment()) != null;\n    } catch (e) {\n      this.logService.error(e);\n      return false;\n    }\n  }\n\n  async settingsHaveChanged() {\n    const env = await this.getManagedEnvironment();\n\n    return (\n      env.base != this.baseUrl ||\n      env.webVault != this.webVaultUrl ||\n      env.api != this.webVaultUrl ||\n      env.identity != this.identityUrl ||\n      env.icons != this.iconsUrl ||\n      env.notifications != this.notificationsUrl ||\n      env.events != this.eventsUrl\n    );\n  }\n\n  getManagedEnvironment(): Promise<GroupPolicyEnvironment> {\n    return devFlagEnabled(\"managedEnvironment\")\n      ? new Promise((resolve) => resolve(devFlagValue(\"managedEnvironment\")))\n      : new Promise((resolve, reject) => {\n          chrome.storage.managed.get(\"environment\", (result) => {\n            if (chrome.runtime.lastError) {\n              return reject(chrome.runtime.lastError);\n            }\n\n            resolve(result.environment);\n          });\n        });\n  }\n\n  async setUrlsToManagedEnvironment() {\n    const env = await this.getManagedEnvironment();\n    await this.setUrls({\n      base: env.base,\n      webVault: env.webVault,\n      api: env.api,\n      identity: env.identity,\n      icons: env.icons,\n      notifications: env.notifications,\n      events: env.events,\n    });\n  }\n}\n","import { Directive, ElementRef, HostListener, OnInit } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBoxRow]\",\n})\nexport class BoxRowDirective implements OnInit {\n  el: HTMLElement = null;\n  formEls: Element[];\n\n  constructor(elRef: ElementRef) {\n    this.el = elRef.nativeElement;\n  }\n\n  ngOnInit(): void {\n    this.formEls = Array.from(\n      this.el.querySelectorAll('input:not([type=\"hidden\"]), select, textarea')\n    );\n    this.formEls.forEach((formEl) => {\n      formEl.addEventListener(\n        \"focus\",\n        () => {\n          this.el.classList.add(\"active\");\n        },\n        false\n      );\n\n      formEl.addEventListener(\n        \"blur\",\n        () => {\n          this.el.classList.remove(\"active\");\n        },\n        false\n      );\n    });\n  }\n\n  @HostListener(\"click\", [\"$event\"]) onClick(event: Event) {\n    const target = event.target as HTMLElement;\n    if (\n      target !== this.el &&\n      !target.classList.contains(\"progress\") &&\n      !target.classList.contains(\"progress-bar\")\n    ) {\n      return;\n    }\n\n    if (this.formEls.length > 0) {\n      const formEl = this.formEls[0] as HTMLElement;\n      if (formEl.tagName.toLowerCase() === \"input\") {\n        const inputEl = formEl as HTMLInputElement;\n        if (inputEl.type != null && inputEl.type.toLowerCase() === \"checkbox\") {\n          inputEl.click();\n          return;\n        }\n      }\n      formEl.focus();\n    }\n  }\n}\n","/* eslint-disable no-useless-escape */\nimport { getHostname, parse } from \"tldts\";\nimport { Merge } from \"type-fest\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\ndeclare global {\n  /* eslint-disable-next-line no-var */\n  var bitwardenContainerService: BitwardenContainerService;\n}\n\ninterface BitwardenContainerService {\n  getCryptoService: () => CryptoService;\n  getEncryptService: () => EncryptService;\n}\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: typeof global = null;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n  static readonly validHosts: string[] = [\"localhost\"];\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n\n    if (Utils.isNode) {\n      Utils.global = global;\n    } else if (Utils.isBrowser) {\n      Utils.global = window;\n    } else {\n      // If it's not browser or node then it must be a service worker\n      Utils.global = self;\n    }\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = Utils.global.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (buffer == null) {\n      return null;\n    }\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return Utils.global.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"file:\")) {\n      return null;\n    }\n\n    // Does uriString contain invalid characters\n    // TODO Needs to possibly be extended, although '!' is a reserved character\n    if (uriString.indexOf(\"!\") > 0) {\n      return null;\n    }\n\n    try {\n      const hostname = getHostname(uriString, { validHosts: this.validHosts });\n      if (hostname != null) {\n        return hostname;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    try {\n      const parseResult = parse(uriString, { validHosts: this.validHosts });\n      if (parseResult != null && parseResult.hostname != null) {\n        if (parseResult.hostname === \"localhost\" || parseResult.isIp) {\n          return parseResult.hostname;\n        }\n\n        if (parseResult.domain != null) {\n          return parseResult.domain;\n        }\n        return null;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction<T>(\n    i18nService: I18nService,\n    prop: { [K in keyof T]: T[K] extends string ? K : never }[keyof T]\n  ): (a: T, b: T) => number {\n    return (a, b) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      // The `as unknown as string` here is unfortunate because typescript doesn't property understand that the return of T[prop] will be a string\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop] as unknown as string, b[prop] as unknown as string)\n        : (a[prop] as unknown as string).localeCompare(b[prop] as unknown as string);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static isPromise(obj: any): obj is Promise<unknown> {\n    return (\n      obj != undefined && typeof obj[\"then\"] === \"function\" && typeof obj[\"catch\"] === \"function\"\n    );\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (this.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  /**\n   * There are a few ways to calculate text color for contrast, this one seems to fit accessibility guidelines best.\n   * https://stackoverflow.com/a/3943023/6869691\n   *\n   * @param {string} bgColor\n   * @param {number} [threshold] see stackoverflow link above\n   * @param {boolean} [svgTextFill]\n   * Indicates if this method is performed on an SVG <text> 'fill' attribute (e.g. <text fill=\"black\"></text>).\n   * This check is necessary because the '!important' tag cannot be used in a 'fill' attribute.\n   */\n  static pickTextColorBasedOnBgColor(bgColor: string, threshold = 186, svgTextFill = false) {\n    const bgColorHexNums = bgColor.charAt(0) === \"#\" ? bgColor.substring(1, 7) : bgColor;\n    const r = parseInt(bgColorHexNums.substring(0, 2), 16); // hexToR\n    const g = parseInt(bgColorHexNums.substring(2, 4), 16); // hexToG\n    const b = parseInt(bgColorHexNums.substring(4, 6), 16); // hexToB\n    const blackColor = svgTextFill ? \"black\" : \"black !important\";\n    const whiteColor = svgTextFill ? \"white\" : \"white !important\";\n    return r * 0.299 + g * 0.587 + b * 0.114 > threshold ? blackColor : whiteColor;\n  }\n\n  static stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  /**\n   * @throws Will throw an error if the ContainerService has not been attached to the window object\n   */\n  static getContainerService(): BitwardenContainerService {\n    if (this.global.bitwardenContainerService == null) {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n    return this.global.bitwardenContainerService;\n  }\n\n  /**\n   * Converts map to a Record<string, V> with the same data. Inverse of recordToMap\n   * Useful in toJSON methods, since Maps are not serializable\n   * @param map\n   * @returns\n   */\n  static mapToRecord<K extends string | number, V>(map: Map<K, V>): Record<string, V> {\n    if (map == null) {\n      return null;\n    }\n    if (!(map instanceof Map)) {\n      return map;\n    }\n    return Object.fromEntries(map);\n  }\n\n  /**\n   * Converts record to a Map<string, V> with the same data. Inverse of mapToRecord\n   * Useful in fromJSON methods, since Maps are not serializable\n   *\n   * Warning: If the record has string keys that are numbers, they will be converted to numbers in the map\n   * @param record\n   * @returns\n   */\n  static recordToMap<K extends string | number, V>(record: Record<K, V>): Map<K, V> {\n    if (record == null) {\n      return null;\n    } else if (record instanceof Map) {\n      return record;\n    }\n\n    const entries = Object.entries(record);\n    if (entries.length === 0) {\n      return new Map();\n    }\n\n    if (isNaN(Number(entries[0][0]))) {\n      return new Map(entries) as Map<K, V>;\n    } else {\n      return new Map(entries.map((e) => [Number(e[0]), e[1]])) as Map<K, V>;\n    }\n  }\n\n  /** Applies Object.assign, but converts the type nicely using Type-Fest Merge<Destination, Source> */\n  static merge<Destination, Source>(\n    destination: Destination,\n    source: Source\n  ): Merge<Destination, Source> {\n    return Object.assign(destination, source) as unknown as Merge<Destination, Source>;\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (typeof window !== \"undefined\") {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncString implements IEncrypted {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      this.initFromData(encryptedStringOrType as EncryptionType, data, iv, mac);\n    } else {\n      this.initFromEncryptedString(encryptedStringOrType as string);\n    }\n  }\n\n  get ivBytes(): ArrayBuffer {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv).buffer;\n  }\n\n  get macBytes(): ArrayBuffer {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac).buffer;\n  }\n\n  get dataBytes(): ArrayBuffer {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data).buffer;\n  }\n\n  toJSON() {\n    return this.encryptedString;\n  }\n\n  static fromJSON(obj: Jsonify<EncString>): EncString {\n    if (obj == null) {\n      return null;\n    }\n\n    return new EncString(obj);\n  }\n\n  private initFromData(encType: EncryptionType, data: string, iv: string, mac: string) {\n    if (iv != null) {\n      this.encryptedString = encType + \".\" + iv + \"|\" + data;\n    } else {\n      this.encryptedString = encType + \".\" + data;\n    }\n\n    // mac\n    if (mac != null) {\n      this.encryptedString += \"|\" + mac;\n    }\n\n    this.encryptionType = encType;\n    this.data = data;\n    this.iv = iv;\n    this.mac = mac;\n  }\n\n  private initFromEncryptedString(encryptedString: string) {\n    this.encryptedString = encryptedString as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const { encType, encPieces } = this.parseEncryptedString(this.encryptedString);\n    this.encryptionType = encType;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  private parseEncryptedString(encryptedString: string): {\n    encType: EncryptionType;\n    encPieces: string[];\n  } {\n    const headerPieces = encryptedString.split(\".\");\n    let encType: EncryptionType;\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = encryptedString.split(\"|\");\n      encType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    return {\n      encType,\n      encPieces,\n    };\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    try {\n      if (key == null) {\n        key = await this.getKeyForDecryption(orgId);\n      }\n      if (key == null) {\n        throw new Error(\"No key to decrypt EncString with orgId \" + orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      this.decryptedValue = await encryptService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/home\">{{ \"close\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'settingsEdited' | i18n }}\"\n      *ngIf=\"showEditedManagedSettings\"\n    >\n      <a href=\"#\" appStopClick (click)=\"resetEnvironment()\">\n        {{ \"environmentEditedClick\" | i18n }}\n      </a>\n      {{ \"environmentEditedReset\" | i18n }}\n    </app-callout>\n\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"selfHostedEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"baseUrl\">{{ \"baseUrl\" | i18n }}</label>\n          <input\n            id=\"baseUrl\"\n            type=\"text\"\n            name=\"BaseUrl\"\n            [(ngModel)]=\"baseUrl\"\n            placeholder=\"ex. https://bitwarden.company.com\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"selfHostedEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"customEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\" [hidden]=\"!showCustom\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"webVaultUrl\">{{ \"webVaultUrl\" | i18n }}</label>\n          <input\n            id=\"webVaultUrl\"\n            type=\"text\"\n            name=\"WebVaultUrl\"\n            [(ngModel)]=\"webVaultUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"apiUrl\">{{ \"apiUrl\" | i18n }}</label>\n          <input\n            id=\"apiUrl\"\n            type=\"text\"\n            name=\"ApiUrl\"\n            [(ngModel)]=\"apiUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"identityUrl\">{{ \"identityUrl\" | i18n }}</label>\n          <input\n            id=\"identityUrl\"\n            type=\"text\"\n            name=\"IdentityUrl\"\n            [(ngModel)]=\"identityUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"notificationsUrl\">{{ \"notificationsUrl\" | i18n }}</label>\n          <input\n            id=\"notificationsUrl\"\n            type=\"text\"\n            name=\"NotificationsUrl\"\n            inputmode=\"url\"\n            [(ngModel)]=\"notificationsUrl\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"iconsUrl\">{{ \"iconsUrl\" | i18n }}</label>\n          <input\n            id=\"iconsUrl\"\n            type=\"text\"\n            name=\"IconsUrl\"\n            [(ngModel)]=\"iconsUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\" [hidden]=\"!showCustom\">\n        {{ \"customEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { EnvironmentComponent as BaseEnvironmentComponent } from \"@bitwarden/angular/components/environment.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { BrowserEnvironmentService } from \"../../services/browser-environment.service\";\n\n@Component({\n  selector: \"app-environment\",\n  templateUrl: \"environment.component.html\",\n})\nexport class EnvironmentComponent extends BaseEnvironmentComponent implements OnInit {\n  showEditedManagedSettings = false;\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    public environmentService: BrowserEnvironmentService,\n    i18nService: I18nService,\n    private router: Router\n  ) {\n    super(platformUtilsService, environmentService, i18nService);\n    this.showCustom = true;\n  }\n\n  async ngOnInit() {\n    this.showEditedManagedSettings = await this.environmentService.settingsHaveChanged();\n  }\n\n  async resetEnvironment() {\n    const urls = await this.environmentService.getManagedEnvironment();\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.iconsUrl = urls.icons;\n    this.identityUrl = urls.identity;\n    this.notificationsUrl = urls.notifications;\n    this.iconsUrl = urls.icons;\n  }\n\n  saved() {\n    super.saved();\n    this.router.navigate([\"\"]);\n  }\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { BitPayInvoiceRequest } from \"../models/request/bit-pay-invoice.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipher-bulk-restore.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CollectionRequest } from \"../models/request/collection.request\";\nimport { DeleteRecoverRequest } from \"../models/request/delete-recover.request\";\nimport { DeviceVerificationRequest } from \"../models/request/device-verification.request\";\nimport { EmailTokenRequest } from \"../models/request/email-token.request\";\nimport { EmailRequest } from \"../models/request/email.request\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergency-access-accept.request\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergency-access-confirm.request\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergency-access-invite.request\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergency-access-password.request\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergency-access-update.request\";\nimport { EventRequest } from \"../models/request/event.request\";\nimport { GroupRequest } from \"../models/request/group.request\";\nimport { IapCheckRequest } from \"../models/request/iap-check.request\";\nimport { ApiTokenRequest } from \"../models/request/identity-token/api-token.request\";\nimport { PasswordTokenRequest } from \"../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../models/request/identity-token/sso-token.request\";\nimport { ImportCiphersRequest } from \"../models/request/import-ciphers.request\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/import-organization-ciphers.request\";\nimport { KdfRequest } from \"../models/request/kdf.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { OrganizationConnectionRequest } from \"../models/request/organization-connection.request\";\nimport { OrganizationImportRequest } from \"../models/request/organization-import.request\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organization-user-accept.request\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organization-user-bulk-confirm.request\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organization-user-bulk.request\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organization-user-confirm.request\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organization-user-invite.request\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organization-user-reset-password-enrollment.request\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organization-user-reset-password.request\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organization-user-update-groups.request\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organization-user-update.request\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organization-sponsorship-create.request\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organization-sponsorship-redeem.request\";\nimport { PasswordHintRequest } from \"../models/request/password-hint.request\";\nimport { PasswordRequest } from \"../models/request/password.request\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordless-create-auth.request\";\nimport { PaymentRequest } from \"../models/request/payment.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/provider-add-organization.request\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/provider-organization-create.request\";\nimport { ProviderSetupRequest } from \"../models/request/provider/provider-setup.request\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/provider-update.request\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/provider-user-accept.request\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/provider-user-confirm.request\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/provider-user-update.request\";\nimport { RegisterRequest } from \"../models/request/register.request\";\nimport { SecretVerificationRequest } from \"../models/request/secret-verification.request\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selection-read-only.request\";\nimport { SendAccessRequest } from \"../models/request/send-access.request\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { SetPasswordRequest } from \"../models/request/set-password.request\";\nimport { StorageRequest } from \"../models/request/storage.request\";\nimport { TaxInfoUpdateRequest } from \"../models/request/tax-info-update.request\";\nimport { TwoFactorEmailRequest } from \"../models/request/two-factor-email.request\";\nimport { TwoFactorProviderRequest } from \"../models/request/two-factor-provider.request\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/two-factor-recovery.request\";\nimport { UpdateDomainsRequest } from \"../models/request/update-domains.request\";\nimport { UpdateKeyRequest } from \"../models/request/update-key.request\";\nimport { UpdateProfileRequest } from \"../models/request/update-profile.request\";\nimport { UpdateTempPasswordRequest } from \"../models/request/update-temp-password.request\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/update-two-factor-authenticator.request\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/update-two-factor-duo.request\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/update-two-factor-email.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/update-two-factor-web-authn.request\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/update-two-factor-yubio-otp.request\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verify-delete-recover.request\";\nimport { VerifyEmailRequest } from \"../models/request/verify-email.request\";\nimport { ApiKeyResponse } from \"../models/response/api-key.response\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { AttachmentResponse } from \"../models/response/attachment.response\";\nimport { AuthRequestResponse } from \"../models/response/auth-request.response\";\nimport { RegisterResponse } from \"../models/response/authentication/register.response\";\nimport { BillingHistoryResponse } from \"../models/response/billing-history.response\";\nimport { BillingPaymentResponse } from \"../models/response/billing-payment.response\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collection.response\";\nimport { DeviceVerificationResponse } from \"../models/response/device-verification.response\";\nimport { DomainsResponse } from \"../models/response/domains.response\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergency-access.response\";\nimport { EventResponse } from \"../models/response/event.response\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/group.response\";\nimport { IdentityCaptchaResponse } from \"../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/key-connector-user-key.response\";\nimport { ListResponse } from \"../models/response/list.response\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organization-connection.response\";\nimport { OrganizationExportResponse } from \"../models/response/organization-export.response\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organization-sponsorship-sync-status.response\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organization-user-bulk-public-key.response\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organization-user-bulk.response\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n} from \"../models/response/organization-user.response\";\nimport { PaymentResponse } from \"../models/response/payment.response\";\nimport { PlanResponse } from \"../models/response/plan.response\";\nimport { PolicyResponse } from \"../models/response/policy.response\";\nimport { PreloginResponse } from \"../models/response/prelogin.response\";\nimport { ProfileResponse } from \"../models/response/profile.response\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/provider-organization.response\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/provider-user-bulk-public-key.response\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/provider-user-bulk.response\";\nimport {\n  ProviderUserUserDetailsResponse,\n  ProviderUserResponse,\n} from \"../models/response/provider/provider-user.response\";\nimport { ProviderResponse } from \"../models/response/provider/provider.response\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selection-read-only.response\";\nimport { SendAccessResponse } from \"../models/response/send-access.response\";\nimport { SendFileDownloadDataResponse } from \"../models/response/send-file-download-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SsoPreValidateResponse } from \"../models/response/sso-pre-validate.response\";\nimport { SubscriptionResponse } from \"../models/response/subscription.response\";\nimport { SyncResponse } from \"../models/response/sync.response\";\nimport { TaxInfoResponse } from \"../models/response/tax-info.response\";\nimport { TaxRateResponse } from \"../models/response/tax-rate.response\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/two-factor-authenticator.response\";\nimport { TwoFactorDuoResponse } from \"../models/response/two-factor-duo.response\";\nimport { TwoFactorEmailResponse } from \"../models/response/two-factor-email.response\";\nimport { TwoFactorProviderResponse } from \"../models/response/two-factor-provider.response\";\nimport { TwoFactorRecoverResponse } from \"../models/response/two-factor-recover.response\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/two-factor-web-authn.response\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/two-factor-yubi-key.response\";\nimport { UserKeyResponse } from \"../models/response/user-key.response\";\nimport { SendAccessView } from \"../models/view/send-access.view\";\n\nexport abstract class ApiService {\n  send: (\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ) => Promise<any>;\n\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | ApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<RegisterResponse>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<void>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postConvertToKeyConnector: () => Promise<void>;\n  //passwordless\n  postAuthRequest: (request: PasswordlessCreateAuthRequest) => Promise<AuthRequestResponse>;\n  getAuthResponse: (id: string, accessCode: string) => Promise<AuthRequestResponse>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getFullCipherDetails: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putPartialCipher: (id: string, request: CipherPartialRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<void>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  revokeOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  revokeManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  restoreOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  restoreManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n  getKnownDevice: (email: string, deviceIdentifier: string) => Promise<boolean>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<void>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n  getOrganizationExport: (organizationId: string) => Promise<OrganizationExportResponse>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n}\n","export abstract class LoginService {\n  getEmail: () => string;\n  getRememberEmail: () => boolean;\n  setEmail: (value: string) => void;\n  setRememberEmail: (value: boolean) => void;\n  clearValues: () => void;\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"@bitwarden/common/models/request/password-hint.request\";\n\n@Directive()\nexport class HintComponent implements OnInit {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private loginService: LoginService\n  ) {}\n\n  ngOnInit(): void {\n    this.email = this.loginService.getEmail() ?? \"\";\n  }\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export abstract class ValidationService {\n  showError: (data: any) => string[];\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"@bitwarden/angular/components/hint.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    logService: LogService,\n    private route: ActivatedRoute,\n    loginService: LoginService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService, loginService);\n\n    super.onSuccessfulSubmit = async () => {\n      this.router.navigate([this.successRoute]);\n    };\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/login\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"passwordHint\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            appAutofocus\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enterEmailToGetHint\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { LocalData } from \"../models/data/local.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport { Account, AccountSettingsSettings } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { WindowState } from \"../models/domain/window-state\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount$: Observable<string>;\n  activeAccountUnlocked$: Observable<boolean>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDuckDuckGoSharedKey: (options?: StorageOptions) => Promise<string>;\n  setDuckDuckGoSharedKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableDuckDuckGoBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableDuckDuckGoBrowserIntegration: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<{ [orgId: string]: EncryptedOrganizationKeyData }>;\n  setEncryptedOrganizationKeys: (\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<{ [cipherId: string]: LocalData }>;\n  setLocalData: (\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  getSettings: (options?: StorageOptions) => Promise<AccountSettingsSettings>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  setSettings: (value: AccountSettingsSettings, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  getServerConfig: (options?: StorageOptions) => Promise<ServerConfigData>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  setServerConfig: (value: ServerConfigData, options?: StorageOptions) => Promise<void>;\n}\n","<div class=\"center-content\">\n  <div class=\"content login-page\">\n    <div class=\"logo-image\"></div>\n    <p class=\"lead text-center\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n    <form #form [formGroup]=\"formGroup\" (ngSubmit)=\"submit()\">\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input id=\"email\" type=\"email\" formControlName=\"email\" appInputVerbatim=\"false\" />\n          </div>\n        </div>\n        <div class=\"box-footer no-margin\" *ngIf=\"selfHostedDomain\">\n          {{ \"loggingInTo\" | i18n: selfHostedDomain }}\n        </div>\n      </div>\n      <div class=\"box\">\n        <button type=\"submit\" class=\"btn primary block\">\n          <b>{{ \"continue\" | i18n }}</b>\n        </button>\n      </div>\n    </form>\n    <p class=\"createAccountLink\">\n      {{ \"newAroundHere\" | i18n }}\n      <a routerLink=\"/register\">{{ \"createAccount\" | i18n }}</a>\n    </p>\n  </div>\n</div>\n<button type=\"button\" routerLink=\"/environment\" class=\"settings-icon\">\n  <i class=\"bwi bwi-cog-f bwi-lg\" aria-hidden=\"true\"></i><span>&nbsp;{{ \"settings\" | i18n }}</span>\n</button>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"home.component.html\",\n})\nexport class HomeComponent implements OnInit {\n  loginInitiated = false;\n\n  formGroup = this.formBuilder.group({\n    email: [\"\", [Validators.required, Validators.email]],\n  });\n\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    private stateService: StateService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private i18nService: I18nService,\n    private environmentService: EnvironmentService,\n    private route: ActivatedRoute\n  ) {}\n  async ngOnInit(): Promise<void> {\n    const rememberedEmail = await this.stateService.getRememberedEmail();\n    if (rememberedEmail != null) {\n      this.formGroup.patchValue({ email: await this.stateService.getRememberedEmail() });\n    }\n  }\n\n  submit() {\n    this.formGroup.markAllAsTouched();\n    if (this.formGroup.invalid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccured\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    this.stateService.setRememberedEmail(this.formGroup.value.email);\n\n    this.router.navigate([\"login\"], { queryParams: { email: this.formGroup.value.email } });\n  }\n\n  get selfHostedDomain() {\n    return this.environmentService.hasBaseUrl() ? this.environmentService.getWebVaultUrl() : null;\n  }\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n  authRequestAccessCode: string;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { ProfileOrganizationResponse } from \"../models/response/profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"../models/response/profile-provider.response\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  getKeyForUserEncryption: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuffer: EncArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n}\n","export abstract class VaultTimeoutSettingsService {\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: (userId?: string) => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<void>;\n}\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject } from \"rxjs\";\nimport { concatMap, take, takeUntil } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\n\n@Directive()\nexport class LockComponent implements OnInit, OnDestroy {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.load();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (this.pinLock) {\n      return await this.handlePinRequiredUnlock();\n    }\n\n    await this.handleMasterPasswordRequiredUnlock();\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async handlePinRequiredUnlock() {\n    if (this.pin == null || this.pin === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n\n    return await this.doUnlockWithPin();\n  }\n\n  private async doUnlockWithPin() {\n    let failed = true;\n    try {\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      if (this.pinSet[0]) {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations,\n          await this.stateService.getDecryptedPinProtected()\n        );\n        const encKey = await this.cryptoService.getEncKey(key);\n        const protectedPin = await this.stateService.getProtectedPin();\n        const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n        failed = decPin !== this.pin;\n        if (!failed) {\n          await this.setKeyAndContinue(key);\n        }\n      } else {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations\n        );\n        failed = false;\n        await this.setKeyAndContinue(key);\n      }\n    } catch {\n      failed = true;\n    }\n\n    if (failed) {\n      this.invalidPinAttempts++;\n      if (this.invalidPinAttempts >= 5) {\n        this.messagingService.send(\"logout\");\n        return;\n      }\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidPin\")\n      );\n    }\n  }\n\n  private async handleMasterPasswordRequiredUnlock() {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n    await this.doUnlockWithMasterPassword();\n  }\n\n  private async doUnlockWithMasterPassword() {\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const storedKeyHash = await this.cryptoService.getKeyHash();\n\n    let passwordValid = false;\n\n    if (storedKeyHash != null) {\n      passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n    } else {\n      const request = new SecretVerificationRequest();\n      const serverKeyHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      request.masterPasswordHash = serverKeyHash;\n      try {\n        this.formPromise = this.apiService.postAccountVerifyPassword(request);\n        await this.formPromise;\n        passwordValid = true;\n        const localKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.LocalAuthorization\n        );\n        await this.cryptoService.setKeyHash(localKeyHash);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (!passwordValid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    if (this.pinSet[0]) {\n      const protectedPin = await this.stateService.getProtectedPin();\n      const encKey = await this.cryptoService.getEncKey(key);\n      const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n      const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n      await this.stateService.setDecryptedPinProtected(\n        await this.cryptoService.encrypt(key.key, pinKey)\n      );\n    }\n    await this.setKeyAndContinue(key);\n  }\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutSettingsService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","type BiometricError = {\n  title: string;\n  description: string;\n};\n\nexport type BiometricErrorTypes = \"startDesktop\" | \"desktopIntegrationDisabled\";\n\nexport const BiometricErrors: Record<BiometricErrorTypes, BiometricError> = {\n  startDesktop: {\n    title: \"startDesktopTitle\",\n    description: \"startDesktopDesc\",\n  },\n  desktopIntegrationDisabled: {\n    title: \"desktopIntegrationDisabledTitle\",\n    description: \"desktopIntegrationDisabledDesc\",\n  },\n};\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import { BrowserApi } from \"./browserApi\";\n\nexport class SafariApp {\n  static sendMessageToApp(command: string, data: any = null, resolveNow = false): Promise<any> {\n    if (!BrowserApi.isSafariApi) {\n      return Promise.resolve(null);\n    }\n    return new Promise((resolve) => {\n      const now = new Date();\n      const messageId =\n        now.getTime().toString() + \"_\" + Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n      (browser as any).runtime.sendNativeMessage(\n        \"com.bitwarden.desktop\",\n        {\n          id: messageId,\n          command: command,\n          data: data,\n          responseData: null,\n        },\n        (response: any) => {\n          resolve(response);\n        }\n      );\n    });\n  }\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ClientType } from \"@bitwarden/common/enums/clientType\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\n\nconst DialogPromiseExpiration = 600000; // 10 minutes\n\nexport default class BrowserPlatformUtilsService implements PlatformUtilsService {\n  private showDialogResolves = new Map<number, { resolve: (value: boolean) => void; date: Date }>();\n  private passwordDialogResolves = new Map<\n    number,\n    { tryResolve: (canceled: boolean, password: string) => Promise<boolean>; date: Date }\n  >();\n  private deviceCache: DeviceType = null;\n\n  constructor(\n    private messagingService: MessagingService,\n    private clipboardWriteCallback: (clipboardValue: string, clearMs: number) => void,\n    private biometricCallback: () => Promise<boolean>,\n    private win: Window & typeof globalThis\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.deviceCache) {\n      return this.deviceCache;\n    }\n\n    if (BrowserPlatformUtilsService.isFirefox()) {\n      this.deviceCache = DeviceType.FirefoxExtension;\n    } else if (BrowserPlatformUtilsService.isOpera(this.win)) {\n      this.deviceCache = DeviceType.OperaExtension;\n    } else if (BrowserPlatformUtilsService.isEdge()) {\n      this.deviceCache = DeviceType.EdgeExtension;\n    } else if (BrowserPlatformUtilsService.isVivaldi()) {\n      this.deviceCache = DeviceType.VivaldiExtension;\n    } else if (BrowserPlatformUtilsService.isChrome(this.win)) {\n      this.deviceCache = DeviceType.ChromeExtension;\n    } else if (BrowserPlatformUtilsService.isSafari(this.win)) {\n      this.deviceCache = DeviceType.SafariExtension;\n    }\n\n    return this.deviceCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"extension\", \"\");\n  }\n\n  getClientType(): ClientType {\n    return ClientType.Browser;\n  }\n\n  static isFirefox(): boolean {\n    return (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    );\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxExtension;\n  }\n\n  static isChrome(win: Window & typeof globalThis): boolean {\n    return win.chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeExtension;\n  }\n\n  static isEdge(): boolean {\n    return navigator.userAgent.indexOf(\" Edg/\") !== -1;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeExtension;\n  }\n\n  static isOpera(win: Window & typeof globalThis): boolean {\n    return (\n      (!!win.opr && !!win.opr.addons) || !!win.opera || navigator.userAgent.indexOf(\" OPR/\") >= 0\n    );\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaExtension;\n  }\n\n  static isVivaldi(): boolean {\n    return navigator.userAgent.indexOf(\" Vivaldi/\") !== -1;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiExtension;\n  }\n\n  static isSafari(win: Window & typeof globalThis): boolean {\n    // Opera masquerades as Safari, so make sure we're not there first\n    return (\n      !BrowserPlatformUtilsService.isOpera(win) && navigator.userAgent.indexOf(\" Safari/\") !== -1\n    );\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariExtension;\n  }\n\n  isIE(): boolean {\n    return false;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  async isViewOpen(): Promise<boolean> {\n    if (await BrowserApi.isPopupOpen()) {\n      return true;\n    }\n\n    if (this.isSafari()) {\n      return false;\n    }\n\n    const sidebarView = this.sidebarViewName();\n    const sidebarOpen =\n      sidebarView != null && chrome.extension.getViews({ type: sidebarView }).length > 0;\n    if (sidebarOpen) {\n      return true;\n    }\n\n    const tabOpen = chrome.extension.getViews({ type: \"tab\" }).length > 0;\n    return tabOpen;\n  }\n\n  lockTimeout(): number {\n    return null;\n  }\n\n  launchUri(uri: string, options?: any): void {\n    BrowserApi.createNewTab(uri, options && options.extensionPage === true);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(BrowserApi.getApplicationVersion());\n  }\n\n  async getApplicationVersionNumber(): Promise<string> {\n    return (await this.getApplicationVersion()).split(RegExp(\"[+|-]\"))[0].trim();\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    const dialogId = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n    this.messagingService.send(\"showDialog\", {\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      title: title,\n      confirmText: confirmText,\n      cancelText: cancelText,\n      type: type,\n      dialogId: dialogId,\n    });\n    return new Promise<boolean>((resolve) => {\n      this.showDialogResolves.set(dialogId, { resolve: resolve, date: new Date() });\n    });\n  }\n\n  isDev(): boolean {\n    return process.env.ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return false;\n  }\n\n  copyToClipboard(text: string, options?: any): void {\n    let win = this.win;\n    let doc = this.win.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    const clearing = options ? !!options.clearing : false;\n    const clearMs: number = options && options.clearMs ? options.clearMs : null;\n\n    if (this.isSafari()) {\n      SafariApp.sendMessageToApp(\"copyToClipboard\", text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.writeText\n    ) {\n      (win as any).navigator.clipboard.writeText(text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n      if (!clearing && this.clipboardWriteCallback != null) {\n        this.clipboardWriteCallback(text, clearMs);\n      }\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      if (this.isChrome() && text === \"\") {\n        text = \"\\u0000\";\n      }\n\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text == null || text === \"\" ? \" \" : text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.select();\n\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"copy\") && !clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n  }\n\n  async readFromClipboard(options?: any): Promise<string> {\n    let win = this.win;\n    let doc = this.win.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n\n    if (this.isSafari()) {\n      return await SafariApp.sendMessageToApp(\"readFromClipboard\");\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.readText\n    ) {\n      return await (win as any).navigator.clipboard.readText();\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"paste\")) {\n      const textarea = doc.createElement(\"textarea\");\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.focus();\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"paste\")) {\n          return textarea.value;\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Read from clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n    return null;\n  }\n\n  resolveDialogPromise(dialogId: number, confirmed: boolean) {\n    if (this.showDialogResolves.has(dialogId)) {\n      const resolveObj = this.showDialogResolves.get(dialogId);\n      resolveObj.resolve(confirmed);\n      this.showDialogResolves.delete(dialogId);\n    }\n\n    // Clean up old promises\n    this.showDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.showDialogResolves.delete(key);\n      }\n    });\n  }\n\n  async resolvePasswordDialogPromise(\n    dialogId: number,\n    canceled: boolean,\n    password: string\n  ): Promise<boolean> {\n    let result = false;\n    if (this.passwordDialogResolves.has(dialogId)) {\n      const resolveObj = this.passwordDialogResolves.get(dialogId);\n      if (await resolveObj.tryResolve(canceled, password)) {\n        this.passwordDialogResolves.delete(dialogId);\n        result = true;\n      }\n    }\n\n    // Clean up old promises\n    this.passwordDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.passwordDialogResolves.delete(key);\n      }\n    });\n\n    return result;\n  }\n\n  async supportsBiometric() {\n    const platformInfo = await BrowserApi.getPlatformInfo();\n    if (platformInfo.os === \"android\") {\n      return false;\n    }\n\n    if (this.isFirefox()) {\n      return parseInt((await browser.runtime.getBrowserInfo()).version.split(\".\")[0], 10) >= 87;\n    }\n\n    return true;\n  }\n\n  authenticateBiometric() {\n    return this.biometricCallback();\n  }\n\n  sidebarViewName(): string {\n    if (this.win.chrome.sidebarAction && this.isFirefox()) {\n      return \"sidebar\";\n    } else if (this.isOpera() && typeof opr !== \"undefined\" && opr.sidebarAction) {\n      return \"sidebar_panel\";\n    }\n\n    return null;\n  }\n\n  supportsSecureStorage(): boolean {\n    return false;\n  }\n}\n","import BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\nimport { TabMessage } from \"../types/tab-messages\";\n\nexport class BrowserApi {\n  static isWebExtensionsApi: boolean = typeof browser !== \"undefined\";\n  static isSafariApi: boolean =\n    navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n    navigator.userAgent.indexOf(\" Chrome/\") === -1 &&\n    navigator.userAgent.indexOf(\" Chromium/\") === -1;\n  static isChromeApi: boolean = !BrowserApi.isSafariApi && typeof chrome !== \"undefined\";\n  static isFirefoxOnAndroid: boolean =\n    navigator.userAgent.indexOf(\"Firefox/\") !== -1 && navigator.userAgent.indexOf(\"Android\") !== -1;\n\n  static get manifestVersion() {\n    return chrome.runtime.getManifest().manifest_version;\n  }\n\n  static async getTabFromCurrentWindowId(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      windowId: chrome.windows.WINDOW_ID_CURRENT,\n    });\n  }\n\n  static async getTab(tabId: number) {\n    if (tabId == null) {\n      return null;\n    }\n    return await chrome.tabs.get(tabId);\n  }\n\n  static async getTabFromCurrentWindow(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      currentWindow: true,\n    });\n  }\n\n  static async getActiveTabs(): Promise<chrome.tabs.Tab[]> {\n    return await BrowserApi.tabsQuery({\n      active: true,\n    });\n  }\n\n  static async tabsQuery(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab[]> {\n    return new Promise((resolve) => {\n      chrome.tabs.query(options, (tabs: any[]) => {\n        resolve(tabs);\n      });\n    });\n  }\n\n  static async tabsQueryFirst(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab> | null {\n    const tabs = await BrowserApi.tabsQuery(options);\n    if (tabs.length > 0) {\n      return tabs[0];\n    }\n\n    return null;\n  }\n\n  static tabSendMessageData(\n    tab: chrome.tabs.Tab,\n    command: string,\n    data: any = null\n  ): Promise<any[]> {\n    const obj: any = {\n      command: command,\n    };\n\n    if (data != null) {\n      obj.data = data;\n    }\n\n    return BrowserApi.tabSendMessage(tab, obj);\n  }\n\n  static async tabSendMessage(\n    tab: chrome.tabs.Tab,\n    obj: any,\n    options: chrome.tabs.MessageSendOptions = null\n  ): Promise<any> {\n    if (!tab || !tab.id) {\n      return;\n    }\n\n    return new Promise<void>((resolve) => {\n      chrome.tabs.sendMessage(tab.id, obj, options, () => {\n        if (chrome.runtime.lastError) {\n          // Some error happened\n        }\n        resolve();\n      });\n    });\n  }\n\n  static sendTabsMessage<T = never>(\n    tabId: number,\n    message: TabMessage,\n    responseCallback?: (response: T) => void\n  ) {\n    chrome.tabs.sendMessage<TabMessage, T>(tabId, message, responseCallback);\n  }\n\n  static async getPrivateModeWindows(): Promise<browser.windows.Window[]> {\n    return (await browser.windows.getAll()).filter((win) => win.incognito);\n  }\n\n  static async onWindowCreated(callback: (win: chrome.windows.Window) => any) {\n    return chrome.windows.onCreated.addListener(callback);\n  }\n\n  static getBackgroundPage(): any {\n    return chrome.extension.getBackgroundPage();\n  }\n\n  static getApplicationVersion(): string {\n    return chrome.runtime.getManifest().version;\n  }\n\n  static async isPopupOpen(): Promise<boolean> {\n    return Promise.resolve(chrome.extension.getViews({ type: \"popup\" }).length > 0);\n  }\n\n  static createNewTab(url: string, extensionPage = false, active = true) {\n    chrome.tabs.create({ url: url, active: active });\n  }\n\n  static messageListener(\n    name: string,\n    callback: (message: any, sender: chrome.runtime.MessageSender, response: any) => void\n  ) {\n    chrome.runtime.onMessage.addListener(\n      (msg: any, sender: chrome.runtime.MessageSender, response: any) => {\n        callback(msg, sender, response);\n      }\n    );\n  }\n\n  static sendMessage(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    return chrome.runtime.sendMessage(message);\n  }\n\n  static async closeLoginTab() {\n    const tabs = await BrowserApi.tabsQuery({\n      active: true,\n      title: \"Bitwarden\",\n      windowType: \"normal\",\n      currentWindow: true,\n    });\n\n    if (tabs.length === 0) {\n      return;\n    }\n\n    const tabToClose = tabs[tabs.length - 1].id;\n    chrome.tabs.remove(tabToClose);\n  }\n\n  static async focusSpecifiedTab(tabId: number) {\n    chrome.tabs.update(tabId, { active: true, highlighted: true });\n  }\n\n  static closePopup(win: Window) {\n    if (BrowserApi.isWebExtensionsApi && BrowserApi.isFirefoxOnAndroid) {\n      // Reactivating the active tab dismisses the popup tab. The promise final\n      // condition is only called if the popup wasn't already dismissed (future proofing).\n      // ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1433604\n      browser.tabs.update({ active: true }).finally(win.close);\n    } else {\n      win.close();\n    }\n  }\n\n  static gaFilter() {\n    return process.env.ENV !== \"production\";\n  }\n\n  static getUILanguage(win: Window) {\n    return chrome.i18n.getUILanguage();\n  }\n\n  static reloadExtension(win: Window) {\n    if (win != null) {\n      return (win.location as any).reload(true);\n    } else {\n      return chrome.runtime.reload();\n    }\n  }\n\n  static reloadOpenWindows() {\n    const views = chrome.extension.getViews() as Window[];\n    views\n      .filter((w) => w.location.href != null)\n      .forEach((w) => {\n        w.location.reload();\n      });\n  }\n\n  static connectNative(application: string): browser.runtime.Port | chrome.runtime.Port {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.connectNative(application);\n    } else if (BrowserApi.isChromeApi) {\n      return chrome.runtime.connectNative(application);\n    }\n  }\n\n  static requestPermission(permission: any) {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.permissions.request(permission);\n    }\n    return new Promise((resolve, reject) => {\n      chrome.permissions.request(permission, resolve);\n    });\n  }\n\n  static getPlatformInfo(): Promise<browser.runtime.PlatformInfo | chrome.runtime.PlatformInfo> {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.getPlatformInfo();\n    }\n    return new Promise((resolve) => {\n      chrome.runtime.getPlatformInfo(resolve);\n    });\n  }\n\n  static getBrowserAction() {\n    return BrowserApi.manifestVersion === 3 ? chrome.action : chrome.browserAction;\n  }\n\n  static getSidebarAction(win: Window & typeof globalThis) {\n    return BrowserPlatformUtilsService.isSafari(win)\n      ? null\n      : typeof win.opr !== \"undefined\" && win.opr.sidebarAction\n      ? win.opr.sidebarAction\n      : win.chrome.sidebarAction;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Injectable()\nexport class PopupUtilsService {\n  constructor(private privateMode: boolean = false) {}\n\n  inSidebar(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=sidebar\") > -1;\n  }\n\n  inTab(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=tab\") > -1;\n  }\n\n  inPopout(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=popout\") > -1;\n  }\n\n  inPopup(win: Window): boolean {\n    return (\n      win.location.search === \"\" ||\n      win.location.search.indexOf(\"uilocation=\") === -1 ||\n      win.location.search.indexOf(\"uilocation=popup\") > -1\n    );\n  }\n\n  inPrivateMode(): boolean {\n    return this.privateMode;\n  }\n\n  getContentScrollY(win: Window, scrollingContainer = \"main\"): number {\n    const content = win.document.getElementsByTagName(scrollingContainer)[0];\n    return content.scrollTop;\n  }\n\n  setContentScrollY(win: Window, scrollY: number, scrollingContainer = \"main\"): void {\n    if (scrollY != null) {\n      const content = win.document.getElementsByTagName(scrollingContainer)[0];\n      content.scrollTop = scrollY;\n    }\n  }\n\n  popOut(win: Window, href: string = null): void {\n    if (href === null) {\n      href = win.location.href;\n    }\n\n    if (typeof chrome !== \"undefined\" && chrome.windows && chrome.windows.create) {\n      if (href.indexOf(\"?uilocation=\") > -1) {\n        href = href\n          .replace(\"uilocation=popup\", \"uilocation=popout\")\n          .replace(\"uilocation=tab\", \"uilocation=popout\")\n          .replace(\"uilocation=sidebar\", \"uilocation=popout\");\n      } else {\n        const hrefParts = href.split(\"#\");\n        href =\n          hrefParts[0] + \"?uilocation=popout\" + (hrefParts.length > 0 ? \"#\" + hrefParts[1] : \"\");\n      }\n\n      const bodyRect = document.querySelector(\"body\").getBoundingClientRect();\n      chrome.windows.create({\n        url: href,\n        type: \"popup\",\n        width: Math.round(bodyRect.width ? bodyRect.width + 60 : 375),\n        height: Math.round(bodyRect.height || 600),\n      });\n\n      if (this.inPopup(win)) {\n        BrowserApi.closePopup(win);\n      }\n    } else if (typeof chrome !== \"undefined\" && chrome.tabs && chrome.tabs.create) {\n      href = href\n        .replace(\"uilocation=popup\", \"uilocation=tab\")\n        .replace(\"uilocation=popout\", \"uilocation=tab\")\n        .replace(\"uilocation=sidebar\", \"uilocation=tab\");\n      chrome.tabs.create({\n        url: href,\n      });\n    }\n  }\n}\n","<app-callout class=\"app-private-mode-warning\" type=\"warning\" *ngIf=\"showWarning\">\n  {{ \"privateModeWarning\" | i18n }}\n  <a href=\"https://bitwarden.com/help/article/private-mode/\" target=\"_blank\" rel=\"noopener\">{{\n    \"learnMore\" | i18n\n  }}</a>\n</app-callout>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-private-mode-warning\",\n  templateUrl: \"private-mode-warning.component.html\",\n})\nexport class PrivateModeWarningComponent implements OnInit {\n  showWarning = false;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showWarning = this.popupUtilsService.inPrivateMode();\n  }\n}\n","<form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\"></div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"verifyIdentity\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" *ngIf=\"!hideInput\">{{ \"unlock\" | i18n }}</button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow *ngIf=\"!hideInput\">\n          <div class=\"row-main\" *ngIf=\"pinLock\">\n            <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n            <input\n              id=\"pin\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"PIN\"\n              class=\"monospaced\"\n              [(ngModel)]=\"pin\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"row-main\" *ngIf=\"!pinLock\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"yourVaultIsLocked\" | i18n }}</p>\n        {{ \"loggedInAsOn\" | i18n: email:webVaultHostname }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"biometricLock\">\n      <div class=\"box-footer no-pad\">\n        <button\n          type=\"button\"\n          class=\"btn primary block\"\n          (click)=\"unlockBiometric()\"\n          appStopClick\n          [disabled]=\"pendingBiometric\"\n        >\n          {{ \"unlockWithBiometrics\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <p class=\"text-center\">\n      <button type=\"button\" appStopClick (click)=\"logOut()\">{{ \"logOut\" | i18n }}</button>\n    </p>\n    <app-private-mode-warning></app-private-mode-warning>\n    <app-callout *ngIf=\"biometricError\" type=\"error\">{{ biometricError }}</app-callout>\n    <p class=\"text-center text-muted\" *ngIf=\"pendingBiometric\">\n      <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i> {{ \"awaitDesktop\" | i18n }}\n    </p>\n  </main>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"@bitwarden/angular/components/lock.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\nimport { BiometricErrors, BiometricErrorTypes } from \"../../models/biometricErrors\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  private isInitialLockScreen: boolean;\n\n  biometricError: string;\n  pendingBiometric = false;\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    environmentService: EnvironmentService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone,\n    private authService: AuthService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      vaultTimeoutSettingsService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n    this.successRoute = \"/tabs/current\";\n    this.isInitialLockScreen = (window as any).previousPopupUrl == null;\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    const disableAutoBiometricsPrompt =\n      (await this.stateService.getDisableAutoBiometricsPrompt()) ?? true;\n\n    window.setTimeout(async () => {\n      document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\").focus();\n      if (\n        this.biometricLock &&\n        !disableAutoBiometricsPrompt &&\n        this.isInitialLockScreen &&\n        (await this.authService.getAuthStatus()) === AuthenticationStatus.Locked\n      ) {\n        await this.unlockBiometric();\n      }\n    }, 100);\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    this.pendingBiometric = true;\n    this.biometricError = null;\n\n    let success;\n    try {\n      success = await super.unlockBiometric();\n    } catch (e) {\n      const error = BiometricErrors[e as BiometricErrorTypes];\n\n      if (error == null) {\n        this.logService.error(\"Unknown error: \" + e);\n      }\n\n      this.biometricError = this.i18nService.t(error.description);\n    }\n    this.pendingBiometric = false;\n\n    return success;\n  }\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n  Passwordless = 3,\n}\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenTwoFactorRequest } from \"../request/identity-token/token-two-factor.request\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n\nexport class PasswordlessLogInCredentials {\n  readonly type = AuthenticationType.Passwordless;\n\n  constructor(\n    public email: string,\n    public accessCode: string,\n    public authRequestId: string,\n    public decKey: SymmetricCryptoKey,\n    public localPasswordHash: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"@bitwarden/common/misc/captcha_iframe\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { PasswordGeneratorOptions } from \"../models/domain/password-generator-options\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/password-generator-policy-options\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: PasswordGeneratorOptions) => Promise<string>;\n  generatePassphrase: (options: PasswordGeneratorOptions) => Promise<string>;\n  getOptions: () => Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: PasswordGeneratorOptions\n  ) => Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: PasswordGeneratorOptions) => Promise<void>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<void>;\n  clear: (userId?: string) => Promise<void>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (\n    options: PasswordGeneratorOptions,\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions\n  ) => void;\n}\n","import { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { AbstractControl } from \"@angular/forms\";\nexport interface AllValidationErrors {\n  controlName: string;\n  errorName: string;\n}\n\nexport interface FormGroupControls {\n  [key: string]: AbstractControl;\n}\n\nexport abstract class FormValidationErrorsService {\n  getFormValidationErrors: (controls: FormGroupControls) => AllValidationErrors[];\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n  private selfHosted = false;\n  showLoginWithDevice: boolean;\n  validatedEmail = false;\n  paramEmailSet = false;\n\n  formGroup = this.formBuilder.group({\n    email: [\"\", [Validators.required, Validators.email]],\n    masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n    rememberEmail: [false],\n  });\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail = false;\n  protected skipRememberEmail = false;\n\n  get loggedEmail() {\n    return this.formGroup.value.email;\n  }\n\n  constructor(\n    protected apiService: ApiService,\n    protected appIdService: AppIdService,\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone,\n    protected formBuilder: FormBuilder,\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected route: ActivatedRoute,\n    protected loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  get selfHostedDomain() {\n    return this.environmentService.hasBaseUrl() ? this.environmentService.getWebVaultUrl() : null;\n  }\n\n  async ngOnInit() {\n    this.route?.queryParams.subscribe((params) => {\n      if (params != null) {\n        const queryParamsEmail = params[\"email\"];\n        if (queryParamsEmail != null && queryParamsEmail.indexOf(\"@\") > -1) {\n          this.formGroup.get(\"email\").setValue(queryParamsEmail);\n          this.paramEmailSet = true;\n        }\n      }\n    });\n    let email = this.loginService.getEmail();\n\n    if (email == null || email === \"\") {\n      email = await this.stateService.getRememberedEmail();\n    }\n\n    if (!this.paramEmailSet) {\n      this.formGroup.get(\"email\")?.setValue(email ?? \"\");\n    }\n    if (!this.alwaysRememberEmail) {\n      let rememberEmail = this.loginService.getRememberEmail();\n      if (rememberEmail == null) {\n        rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n      }\n      this.formGroup.get(\"rememberEmail\")?.setValue(rememberEmail);\n    }\n\n    if (email) {\n      this.validateEmail();\n    }\n  }\n\n  async submit(showToast = true) {\n    const data = this.formGroup.value;\n\n    await this.setupCaptcha();\n\n    this.formGroup.markAllAsTouched();\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return;\n    }\n\n    //desktop, browser; This should be removed once all clients use reactive forms\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        data.email,\n        data.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      this.setFormValues();\n      if (data.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(data.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        this.loginService.clearValues();\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  async validateEmail() {\n    this.formGroup.controls.email.markAsTouched();\n    const emailInvalid = this.formGroup.get(\"email\").invalid;\n    if (!emailInvalid) {\n      this.toggleValidateEmail(true);\n      await this.getLoginWithDevice(this.loggedEmail);\n    }\n  }\n\n  toggleValidateEmail(value: boolean) {\n    this.validatedEmail = value;\n    this.formGroup.controls.masterPassword.reset();\n  }\n\n  setFormValues() {\n    this.loginService.setEmail(this.formGroup.value.email);\n    this.loginService.setRememberEmail(this.formGroup.value.rememberEmail);\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  private async getLoginWithDevice(email: string) {\n    try {\n      const deviceIdentifier = await this.appIdService.getAppId();\n      const res = await this.apiService.getKnownDevice(email, deviceIdentifier);\n      //ensure the application is not self-hosted\n      this.showLoginWithDevice = res && !this.selfHosted;\n    } catch (e) {\n      this.showLoginWithDevice = false;\n    }\n  }\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notification.response\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { LoginComponent as BaseLoginComponent } from \"@bitwarden/angular/components/login.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent {\n  protected skipRememberEmail = true;\n\n  constructor(\n    apiService: ApiService,\n    appIdService: AppIdService,\n    authService: AuthService,\n    router: Router,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected stateService: StateService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    syncService: SyncService,\n    logService: LogService,\n    ngZone: NgZone,\n    formBuilder: FormBuilder,\n    formValidationErrorService: FormValidationErrorsService,\n    route: ActivatedRoute,\n    loginService: LoginService\n  ) {\n    super(\n      apiService,\n      appIdService,\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone,\n      formBuilder,\n      formValidationErrorService,\n      route,\n      loginService\n    );\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n  }\n\n  settings() {\n    this.router.navigate([\"environment\"]);\n  }\n\n  async launchSsoBrowser() {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    const state =\n      (await this.passwordGenerationService.generatePassword(passwordOptions)) +\n      \":clientId=browser\";\n    const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    await this.stateService.setSsoCodeVerifier(codeVerifier);\n    await this.stateService.setSsoState(state);\n\n    let url = this.environmentService.getWebVaultUrl();\n    if (url == null) {\n      url = \"https://vault.bitwarden.com\";\n    }\n\n    const redirectUri = url + \"/sso-connector.html\";\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      url +\n        \"/#/sso?clientId=browser\" +\n        \"&redirectUri=\" +\n        encodeURIComponent(redirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" [formGroup]=\"formGroup\">\n  <header>\n    <h1 class=\"login-center\">\n      <span class=\"title\">{{ \"logIn\" | i18n }}</span>\n    </h1>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              class=\"monospaced\"\n              formControlName=\"masterPassword\"\n              appInputVerbatim\n              appAutofocus\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n          <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        <button type=\"button\" class=\"btn link\" routerLink=\"/hint\" (click)=\"setFormValues()\">\n          <b>{{ \"getMasterPasswordHint\" | i18n }}</b>\n        </button>\n      </div>\n    </div>\n    <app-private-mode-warning></app-private-mode-warning>\n    <div class=\"content login-buttons\">\n      <button type=\"submit\" class=\"btn primary block\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\"\n          ><b>{{ \"logInWithMasterPassword\" | i18n }}</b></span\n        >\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n      <button type=\"button\" (click)=\"launchSsoBrowser()\" class=\"btn block\">\n        <i class=\"bwi bwi-provider\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n      </button>\n      <div class=\"small\">\n        <p class=\"no-margin\">{{ \"loggingInAs\" | i18n }} {{ loggedEmail }}</p>\n        <a routerLink=\"/home\">{{ \"notYou\" | i18n }}</a>\n      </div>\n    </div>\n  </main>\n</form>\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captcha-protected.request\";\nimport { KeysRequest } from \"./keys.request\";\nimport { ReferenceEventRequest } from \"./reference-event.request\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { AbstractControl, UntypedFormGroup, ValidatorFn } from \"@angular/forms\";\n\nimport { FormGroupControls } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\n\nexport class InputsFieldMatch {\n  //check to ensure two fields do not have the same value\n  static validateInputsDoesntMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? {\n              inputsMatchError: {\n                message: errorMessage,\n              },\n            }\n          : null;\n      }\n\n      return null;\n    };\n  }\n\n  //check to ensure two fields have the same value\n  static validateInputsMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? null\n          : {\n              inputsDoesntMatchError: {\n                message: errorMessage,\n              },\n            };\n      }\n\n      return null;\n    };\n  }\n\n  //checks the formGroup if two fields have the same value and validation is controlled from either field\n  static validateFormInputsMatch(field: string, fieldMatchTo: string, errorMessage: string) {\n    return (formGroup: UntypedFormGroup) => {\n      const fieldCtrl = formGroup.controls[field];\n      const fieldMatchToCtrl = formGroup.controls[fieldMatchTo];\n\n      if (fieldCtrl.value !== fieldMatchToCtrl.value) {\n        fieldMatchToCtrl.setErrors({\n          inputsDoesntMatchError: {\n            message: errorMessage,\n          },\n        });\n      } else {\n        fieldMatchToCtrl.setErrors(null);\n      }\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, ValidatorFn, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keys.request\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\nimport { RegisterRequest } from \"@bitwarden/common/models/request/register.request\";\nimport { RegisterResponse } from \"@bitwarden/common/models/response/authentication/register.response\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\nimport { InputsFieldMatch } from \"../validators/inputsFieldMatch.validator\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() isInTrialFlow = false;\n  @Output() createdAccount = new EventEmitter<string>();\n\n  showPassword = false;\n  formPromise: Promise<RegisterResponse>;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  showErrorSummary = false;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  formGroup = this.formBuilder.group(\n    {\n      email: [\"\", [Validators.required, Validators.email]],\n      name: [\"\"],\n      masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      confirmMasterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      hint: [\n        null,\n        [\n          InputsFieldMatch.validateInputsDoesntMatch(\n            \"masterPassword\",\n            this.i18nService.t(\"hintEqualsPassword\")\n          ),\n        ],\n      ],\n      acceptPolicies: [false, [this.acceptPoliciesValidation()]],\n    },\n    {\n      validator: InputsFieldMatch.validateFormInputsMatch(\n        \"masterPassword\",\n        \"confirmMasterPassword\",\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      ),\n    }\n  );\n\n  protected successRoute = \"login\";\n\n  protected accountCreated = false;\n\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected formBuilder: UntypedFormBuilder,\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  async submit(showToast = true) {\n    let email = this.formGroup.value.email;\n    email = email.trim().toLowerCase();\n    let name = this.formGroup.value.name;\n    name = name === \"\" ? null : name; // Why do we do this?\n    const masterPassword = this.formGroup.value.masterPassword;\n    try {\n      if (!this.accountCreated) {\n        const registerResponse = await this.registerAccount(\n          await this.buildRegisterRequest(email, masterPassword, name),\n          showToast\n        );\n        if (!registerResponse.successful) {\n          return;\n        }\n        this.captchaBypassToken = registerResponse.captchaBypassToken;\n        this.accountCreated = true;\n      }\n      if (this.isInTrialFlow) {\n        if (!this.accountCreated) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"trialAccountCreated\")\n          );\n        }\n        const loginResponse = await this.logIn(email, masterPassword, this.captchaBypassToken);\n        if (loginResponse.captchaRequired) {\n          return;\n        }\n        this.createdAccount.emit(this.formGroup.value.email);\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"newAccountCreated\")\n        );\n        this.router.navigate([this.successRoute], { queryParams: { email: email } });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        case \"inputsDoesntMatchError\":\n          return this.i18nService.t(\"masterPassDoesntMatch\");\n        case \"inputsMatchError\":\n          return this.i18nService.t(\"hintEqualsPassword\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  //validation would be ignored on selfhosted\n  private acceptPoliciesValidation(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const ctrlValue = control.value;\n\n      return !ctrlValue && this.showTerms ? { required: true } : null;\n    };\n  }\n\n  private async validateRegistration(showToast: boolean): Promise<{ isValid: boolean }> {\n    this.formGroup.markAllAsTouched();\n    this.showErrorSummary = true;\n\n    if (this.formGroup.get(\"acceptPolicies\").hasError(\"required\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesRequired\")\n      );\n      return { isValid: false };\n    }\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return { isValid: false };\n    }\n\n    //desktop, browser\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return { isValid: false };\n    }\n\n    if (this.passwordStrengthResult != null && this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return { isValid: false };\n      }\n    }\n    return { isValid: true };\n  }\n\n  private async buildRegisterRequest(\n    email: string,\n    masterPassword: string,\n    name: string\n  ): Promise<RegisterRequest> {\n    const hint = this.formGroup.value.hint;\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      email,\n      name,\n      hashedPassword,\n      hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n    return request;\n  }\n\n  private async registerAccount(\n    request: RegisterRequest,\n    showToast: boolean\n  ): Promise<{ successful: boolean; captchaBypassToken?: string }> {\n    if (!(await this.validateRegistration(showToast)).isValid) {\n      return { successful: false };\n    }\n    this.formPromise = this.apiService.postRegister(request);\n    try {\n      const response = await this.formPromise;\n      return { successful: true, captchaBypassToken: response.captchaBypassToken };\n    } catch (e) {\n      if (this.handleCaptchaRequired(e)) {\n        return { successful: false };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  private async logIn(\n    email: string,\n    masterPassword: string,\n    captchaBypassToken: string\n  ): Promise<{ captchaRequired: boolean }> {\n    const credentials = new PasswordLogInCredentials(\n      email,\n      masterPassword,\n      captchaBypassToken,\n      null\n    );\n    const loginResponse = await this.authService.logIn(credentials);\n    if (this.handleCaptchaRequired(loginResponse)) {\n      return { captchaRequired: true };\n    }\n    return { captchaRequired: false };\n  }\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\n\nexport interface PasswordColorText {\n  color: string;\n  text: string;\n}\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() showText = false;\n  @Input() email: string;\n  @Input() name: string;\n  @Input() set password(value: string) {\n    this.updatePasswordStrength(value);\n  }\n  @Output() passwordStrengthResult = new EventEmitter<any>();\n  @Output() passwordScoreColor = new EventEmitter<PasswordColorText>();\n\n  masterPasswordScore: number;\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  private masterPasswordStrengthTimeout: any;\n\n  //used by desktop and browser to display strength text color\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  //used by desktop and browser to display strength text\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  constructor(\n    private i18nService: I18nService,\n    private passwordGenerationService: PasswordGenerationService\n  ) {}\n\n  ngOnChanges(): void {\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      this.scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n\n      switch (this.masterPasswordScore) {\n        case 4:\n          this.color = \"bg-success\";\n          this.text = this.i18nService.t(\"strong\");\n          break;\n        case 3:\n          this.color = \"bg-primary\";\n          this.text = this.i18nService.t(\"good\");\n          break;\n        case 2:\n          this.color = \"bg-warning\";\n          this.text = this.i18nService.t(\"weak\");\n          break;\n        default:\n          this.color = \"bg-danger\";\n          this.text = this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n          break;\n      }\n\n      this.setPasswordScoreText(this.color, this.text);\n    }, 300);\n  }\n\n  updatePasswordStrength(password: string) {\n    const masterPassword = password;\n\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    this.passwordStrengthResult.emit(strengthResult);\n    this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n  }\n\n  getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const email = this.email;\n    const name = this.name;\n    const atPosition = email?.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (name != null && name !== \"\") {\n      userInput = userInput.concat(name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n\n  setPasswordScoreText(color: string, text: string) {\n    color = color.slice(3);\n    this.passwordScoreColor.emit({ color: color, text: text });\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" [formGroup]=\"formGroup\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/home\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"createAccount\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input id=\"email\" type=\"email\" formControlName=\"email\" appInputVerbatim=\"false\" />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong class=\"sub-label text-{{ color }}\" *ngIf=\"text\">\n                  {{ text }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                class=\"monospaced\"\n                formControlName=\"masterPassword\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <app-password-strength\n            [password]=\"formGroup.get('masterPassword')?.value\"\n            [email]=\"formGroup.get('email')?.value\"\n            [name]=\"formGroup.get('name')?.value\"\n            (passwordStrengthResult)=\"getStrengthResult($event)\"\n            (passwordScoreColor)=\"getPasswordScoreText($event)\"\n          >\n          </app-password-strength>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              class=\"monospaced\"\n              formControlName=\"confirmMasterPassword\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" formControlName=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n    <div [hidden]=\"!showCaptcha()\"><iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe></div>\n    <div class=\"box last\" *ngIf=\"showTerms\">\n      <div class=\"box-content\">\n        <div\n          class=\"box-content-row box-content-row-checkbox box-content-row-checkbox-left box-content-row-word-break\"\n          appBoxRow\n        >\n          <input type=\"checkbox\" id=\"acceptPolicies\" formControlName=\"acceptPolicies\" />\n          <label for=\"acceptPolicies\">\n            {{ \"acceptPolicies\" | i18n }}<br />\n            <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n              \"termsOfService\" | i18n\n            }}</a\n            >,\n            <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n              \"privacyPolicy\" | i18n\n            }}</a>\n          </label>\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n  color: string;\n  text: string;\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/import-directory.request\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organization-api-key.request\";\nimport { OrganizationCreateRequest } from \"../../models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"../../models/request/organization-keys.request\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organization-subscription-update.request\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organization-tax-info-update.request\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organization-update.request\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organization-upgrade.request\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organization-sso.request\";\nimport { PaymentRequest } from \"../../models/request/payment.request\";\nimport { SeatRequest } from \"../../models/request/seat.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { StorageRequest } from \"../../models/request/storage.request\";\nimport { VerifyBankRequest } from \"../../models/request/verify-bank.request\";\nimport { ApiKeyResponse } from \"../../models/response/api-key.response\";\nimport { BillingResponse } from \"../../models/response/billing.response\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organization-api-key-information.response\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organization-auto-enroll-status.response\";\nimport { OrganizationKeysResponse } from \"../../models/response/organization-keys.response\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organization-subscription.response\";\nimport { OrganizationResponse } from \"../../models/response/organization.response\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organization-sso.response\";\nimport { PaymentResponse } from \"../../models/response/payment.response\";\nimport { TaxInfoResponse } from \"../../models/response/tax-info.response\";\n\nexport class OrganizationApiServiceAbstraction {\n  get: (id: string) => Promise<OrganizationResponse>;\n  getBilling: (id: string) => Promise<BillingResponse>;\n  getSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getLicense: (id: string, installationId: string) => Promise<unknown>;\n  getAutoEnrollStatus: (identifier: string) => Promise<OrganizationAutoEnrollStatusResponse>;\n  create: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  createLicense: (data: FormData) => Promise<OrganizationResponse>;\n  save: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n  updatePayment: (id: string, request: PaymentRequest) => Promise<void>;\n  upgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n  updateSubscription: (id: string, request: OrganizationSubscriptionUpdateRequest) => Promise<void>;\n  updateSeats: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  updateStorage: (id: string, request: StorageRequest) => Promise<PaymentResponse>;\n  verifyBank: (id: string, request: VerifyBankRequest) => Promise<void>;\n  cancel: (id: string) => Promise<void>;\n  reinstate: (id: string) => Promise<void>;\n  leave: (id: string) => Promise<void>;\n  delete: (id: string, request: SecretVerificationRequest) => Promise<void>;\n  updateLicense: (id: string, data: FormData) => Promise<void>;\n  importDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<void>;\n  getOrCreateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getApiKeyInformation: (\n    id: string,\n    organizationApiKeyType?: OrganizationApiKeyType\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  rotateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  updateTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<void>;\n  getKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  updateKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;\n  getSso: (id: string) => Promise<OrganizationSsoResponse>;\n  updateSso: (id: string, request: OrganizationSsoRequest) => Promise<OrganizationSsoResponse>;\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<void | boolean>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.organizationApiService.leave(this.organization.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<header>\n  <div class=\"left\"></div>\n  <div class=\"center\">\n    <span class=\"title\">{{ \"removeMasterPassword\" | i18n }}</span>\n  </div>\n  <div class=\"right\"></div>\n</header>\n\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\" appBoxRow>\n        <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn block primary\"\n          (click)=\"convert()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"continuing\"\n          ></i>\n          {{ \"removeMasterPassword\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary block\"\n          (click)=\"leave()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"leaving\"\n          ></i>\n          {{ \"leaveOrganization\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"@bitwarden/angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keys.request\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/reset-password-policy-options\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport abstract class PolicyService {\n  policies$: Observable<Policy[]>;\n  masterPasswordPolicyOptions$: (policies?: Policy[]) => Observable<MasterPasswordPolicyOptions>;\n  policyAppliesToActiveUser$: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean\n  ) => Observable<boolean>;\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n\nexport abstract class InternalPolicyService extends PolicyService {\n  upsert: (policy: PolicyData) => Promise<any>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<void>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit, OnDestroy {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  protected destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.policyService\n      .masterPasswordPolicyOptions$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (enforcedPasswordPolicyOptions) =>\n          (this.enforcedPolicyOptions ??= enforcedPasswordPolicyOptions)\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordMinlength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordStrengthResult;\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { PolicyRequest } from \"../../models/request/policy.request\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyApiServiceAbstraction {\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<any>;\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keys.request\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organization-user-reset-password-enrollment.request\";\nimport { SetPasswordRequest } from \"@bitwarden/common/models/request/set-password.request\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.organizationApiService.getAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyApiService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.organizationApiService.getKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/home\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"setMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"full-loading-spinner\" *ngIf=\"syncLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n    </div>\n    <div *ngIf=\"!syncLoading\">\n      <div class=\"box\">\n        <app-callout type=\"tip\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n        <app-callout\n          type=\"warning\"\n          title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n          *ngIf=\"resetPasswordAutoEnroll\"\n        >\n          {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPassword\"\n                  >{{ \"masterPass\" | i18n }}\n                  <strong\n                    class=\"sub-label text-{{ passwordStrengthComponent?.masterPasswordScoreColor }}\"\n                    *ngIf=\"passwordStrengthComponent?.masterPasswordScoreText\"\n                  >\n                    {{ passwordStrengthComponent?.masterPasswordScoreText }}\n                  </strong>\n                </label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n\n            <app-password-strength\n              [password]=\"masterPassword\"\n              [email]=\"email\"\n              (passwordStrengthResult)=\"getStrengthResult($event)\"\n              (passwordScoreColor)=\"getPasswordScoreText($event)\"\n            >\n            </app-password-strength>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassDesc\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPasswordRetype\"\n                  type=\"password\"\n                  name=\"MasterPasswordRetype\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPasswordRetype\"\n                  required\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(true)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"box last\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassHintDesc\" | i18n }}\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"@bitwarden/angular/components/set-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyApiService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService,\n      organizationApiService\n    );\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { SsoLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { SsoPreValidateResponse } from \"@bitwarden/common/models/response/sso-pre-validate.response\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent as BaseSsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    syncService: SyncService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    const url = this.environmentService.getWebVaultUrl();\n\n    this.redirectUri = url + \"/sso-connector.html\";\n    this.clientId = \"browser\";\n\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n\n      // If the vault is unlocked then this will clear keys from memory, which we don't want to do\n      if ((await this.authService.getAuthStatus()) !== AuthenticationStatus.Unlocked) {\n        BrowserApi.reloadOpenWindows();\n      }\n\n      const thisWindow = window.open(\"\", \"_self\");\n      thisWindow.close();\n    };\n  }\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" routerLink=\"/2fa\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"twoStepOptions\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        *ngFor=\"let p of providers\"\n        class=\"box-content-row\"\n        (click)=\"choose(p)\"\n      >\n        <span class=\"text\">{{ p.name }}</span>\n        <span class=\"detail\">{{ p.description }}</span>\n      </button>\n      <button type=\"button\" appStopClick class=\"box-content-row\" (click)=\"recover()\">\n        <span class=\"text\">{{ \"recoveryCodeTitle\" | i18n }}</span>\n        <span class=\"detail\">{{ \"recoveryCodeDesc\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"@bitwarden/angular/components/two-factor-options.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n\n  choose(p: any) {\n    super.choose(p);\n    this.twoFactorService.setSelectedProvider(p.type);\n    this.router.navigate([\"2fa\"]);\n  }\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\n\nexport class TokenTwoFactorRequest {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n  authRequestId: string;\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"@bitwarden/common/misc/webauthn_iframe\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { TokenTwoFactorRequest } from \"@bitwarden/common/models/request/identity-token/token-two-factor.request\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/two-factor-email.request\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService,\n    protected loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenTwoFactorRequest(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.loginService.clearValues();\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.loginService.clearValues();\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.loginService.clearValues();\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      request.authRequestAccessCode = this.authService.accessCode;\n      request.authRequestId = this.authService.authRequestId;\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey() ||\n      this.authService.authingWithPasswordless()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","export interface MessageBase {\n  command: string;\n}\n\nexport abstract class BroadcasterService {\n  send: (message: MessageBase, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: MessageBase) => void) => void;\n  unsubscribe: (id: string) => void;\n}\n","<form id=\"two-factor-page\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/login\">{{ \"back\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        [disabled]=\"form.loading\"\n        *ngIf=\"\n          selectedProviderType != null &&\n          selectedProviderType !== providerType.Duo &&\n          selectedProviderType !== providerType.OrganizationDuo &&\n          (selectedProviderType !== providerType.WebAuthn || form.loading)\n        \"\n      >\n        <span [hidden]=\"form.loading\">{{ \"continue\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Authenticator ||\n        selectedProviderType === providerType.Email\n      \"\n    >\n      <div class=\"content text-center\">\n        <span *ngIf=\"selectedProviderType === providerType.Authenticator\">\n          {{ \"enterVerificationCodeApp\" | i18n }}\n        </span>\n        <span *ngIf=\"selectedProviderType === providerType.Email\">\n          {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n        </span>\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"text\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              inputmode=\"tel\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n      <div class=\"content text-center\">\n        <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n        <img src=\"../images/yubikey.jpg\" class=\"img-rounded img-responsive\" alt=\"\" />\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"password\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && !webAuthnNewTab\">\n      <div id=\"web-authn-frame\"><iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && webAuthnNewTab\">\n      <div class=\"content text-center\" *ngIf=\"webAuthnNewTab\">\n        <p class=\"text-center\">{{ \"webAuthnNewTab\" | i18n }}</p>\n        <button type=\"button\" class=\"btn primary block\" (click)=\"authWebAuthn()\" appStopClick>\n          {{ \"webAuthnNewTabOpen\" | i18n }}\n        </button>\n      </div>\n    </ng-container>\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Duo ||\n        selectedProviderType === providerType.OrganizationDuo\n      \"\n    >\n      <div id=\"duo-frame\"><iframe id=\"duo_iframe\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n    <div class=\"content\" *ngIf=\"selectedProviderType == null\">\n      <p class=\"text-center\">{{ \"noTwoStepProviders\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"noTwoStepProviders2\" | i18n }}</p>\n    </div>\n    <div class=\"content no-vpad\" *ngIf=\"selectedProviderType != null\">\n      <p class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"anotherMethod()\">\n          {{ \"useAnotherTwoStepMethod\" | i18n }}\n        </button>\n      </p>\n      <p *ngIf=\"selectedProviderType === providerType.Email\" class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"sendEmail(true)\" [appApiAction]=\"emailPromise\">\n          {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n        </button>\n      </p>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"@bitwarden/angular/components/two-factor.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"TwoFactorComponent\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  showNewWindowMessage = false;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    environmentService: EnvironmentService,\n    private broadcasterService: BroadcasterService,\n    private popupUtilsService: PopupUtilsService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    private messagingService: MessagingService,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService,\n    loginService: LoginService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService,\n      loginService\n    );\n    super.onSuccessfulLogin = () => {\n      this.loginService.clearValues();\n      return syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n    this.webAuthnNewTab =\n      this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari();\n  }\n\n  async ngOnInit() {\n    if (this.route.snapshot.paramMap.has(\"webAuthnResponse\")) {\n      // WebAuthn fallback response\n      this.selectedProviderType = TwoFactorProviderType.WebAuthn;\n      this.token = this.route.snapshot.paramMap.get(\"webAuthnResponse\");\n      super.onSuccessfulLogin = async () => {\n        this.syncService.fullSync(true);\n        this.messagingService.send(\"reloadPopup\");\n        window.close();\n      };\n      this.remember = this.route.snapshot.paramMap.get(\"remember\") === \"true\";\n      await this.doSubmit();\n      return;\n    }\n\n    await super.ngOnInit();\n    if (this.selectedProviderType == null) {\n      return;\n    }\n\n    // WebAuthn prompt appears inside the popup on linux, and requires a larger popup width\n    // than usual to avoid cutting off the dialog.\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.add(\"linux-webauthn\");\n    }\n\n    if (\n      this.selectedProviderType === TwoFactorProviderType.Email &&\n      this.popupUtilsService.inPopup(window)\n    ) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"popup2faCloseMessage\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (confirmed) {\n        this.popupUtilsService.popOut(window);\n      }\n    }\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.sso === \"true\") {\n        super.onSuccessfulLogin = () => {\n          BrowserApi.reloadOpenWindows();\n          const thisWindow = window.open(\"\", \"_self\");\n          thisWindow.close();\n          return this.syncService.fullSync(true);\n        };\n      }\n    });\n  }\n\n  async ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.remove(\"linux-webauthn\");\n    }\n    super.ngOnDestroy();\n  }\n\n  anotherMethod() {\n    this.router.navigate([\"2fa-options\"]);\n  }\n\n  async isLinux() {\n    return (await BrowserApi.getPlatformInfo()).os === \"linux\";\n  }\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organization-user-reset-password.request\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { UpdateTempPasswordRequest } from \"@bitwarden/common/models/request/update-temp-password.request\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a (click)=\"logOut()\">{{ \"logOut\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"updateMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout type=\"warning\" title=\"{{ 'updateMasterPassword' | i18n }}\">\n      {{ \"updateMasterPasswordWarning\" | i18n }}\n    </app-callout>\n    <app-callout\n      type=\"info\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      *ngIf=\"enforcedPolicyOptions\"\n    >\n    </app-callout>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong class=\"sub-label text-{{ color }}\" *ngIf=\"text\">\n                  {{ text }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"monospaced\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(false)\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <app-password-strength\n            [password]=\"masterPassword\"\n            [email]=\"email\"\n            (passwordStrengthResult)=\"getStrengthResult($event)\"\n            (passwordScoreColor)=\"getPasswordScoreText($event)\"\n          >\n          </app-password-strength>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPasswordRetype\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPasswordRetype\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword(true)\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"@bitwarden/angular/components/update-temp-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    syncService: SyncService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"@bitwarden/common/models/domain/password-generator-policy-options\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.forwardOptions = [\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      { name: \"Fastmail\", value: \"fastmail\" },\n      { name: \"DuckDuckGo\", value: \"duckduckgo\" },\n    ];\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <button type=\"button\" (click)=\"expand()\" appA11yTitle=\"{{ 'popOutNewWindow' | i18n }}\">\n    <i class=\"bwi bwi-external-link bwi-rotate-270 bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-pop-out\",\n  templateUrl: \"pop-out.component.html\",\n})\nexport class PopOutComponent implements OnInit {\n  @Input() show = true;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private popupUtilsService: PopupUtilsService\n  ) {}\n\n  ngOnInit() {\n    if (this.show) {\n      if (\n        (this.popupUtilsService.inSidebar(window) && this.platformUtilsService.isFirefox()) ||\n        this.popupUtilsService.inPopout(window)\n      ) {\n        this.show = false;\n      }\n    }\n  }\n\n  expand() {\n    this.popupUtilsService.popOut(window);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out [show]=\"!comingFromAddEdit\"></app-pop-out>\n    <button type=\"button\" (click)=\"close()\" *ngIf=\"comingFromAddEdit\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"generator\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"select()\" *ngIf=\"comingFromAddEdit\">\n      {{ \"select\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n    {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n  </app-callout>\n  <div class=\"generated-block\" *ngIf=\"type === 'password'\">\n    <div class=\"generated-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div>\n    <div class=\"action-buttons\">\n      <button\n        type=\"button\"\n        class=\"row-btn\"\n        appStopClick\n        appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n        (click)=\"copy()\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        appStopClick\n        appA11yTitle=\"{{ 'regeneratePassword' | i18n }}\"\n        (click)=\"regenerate()\"\n      >\n        <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"generated-block\" *ngIf=\"type === 'username'\">\n    <div class=\"generated-wrapper\" [innerHTML]=\"username | colorPassword\" appSelectCopy></div>\n    <div class=\"action-buttons\" #form [appApiAction]=\"usernameGeneratingPromise\">\n      <button\n        type=\"button\"\n        class=\"row-btn\"\n        appStopClick\n        appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n        (click)=\"copy()\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        appStopClick\n        appA11yTitle=\"{{ 'regenerateUsername' | i18n }}\"\n        (click)=\"regenerate()\"\n        [disabled]=\"form.loading\"\n      >\n        <i\n          class=\"bwi bwi-lg bwi-generate\"\n          [ngClass]=\"form.loading ? 'bwi-spin' : ''\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n        <label id=\"typeHeading\" class=\"radio-header\">{{\n          \"whatWouldYouLikeToGenerate\" | i18n\n        }}</label>\n        <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of typeOptions\">\n          <input\n            type=\"radio\"\n            [(ngModel)]=\"type\"\n            name=\"Type\"\n            id=\"type_{{ o.value }}\"\n            [value]=\"o.value\"\n            (change)=\"typeChanged()\"\n            [checked]=\"type === o.value\"\n            [disabled]=\"comingFromAddEdit && type !== o.value\"\n          />\n          <label for=\"type_{{ o.value }}\">\n            {{ o.name }}\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"type === 'password'\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"options\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"passwordTypeHeading\">\n          <label id=\"passwordTypeHeading\" class=\"radio-header\">{{ \"passwordType\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of passTypeOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"passwordOptions.type\"\n              name=\"PasswordType\"\n              id=\"passwordtype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"savePasswordOptions()\"\n              [checked]=\"passwordOptions.type === o.value\"\n            />\n            <label for=\"passwordtype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"passwordOptions.type === 'passphrase'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n          <input\n            id=\"num-words\"\n            type=\"number\"\n            min=\"3\"\n            max=\"20\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.numWords\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n          <input\n            id=\"word-separator\"\n            type=\"text\"\n            maxlength=\"1\"\n            (input)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.wordSeparator\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n          <input\n            id=\"capitalize\"\n            type=\"checkbox\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.capitalize\"\n            [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n          <input\n            id=\"include-number\"\n            type=\"checkbox\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.includeNumber\"\n            [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n          />\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-slider\" appBoxRow>\n            <label for=\"length\">{{ \"length\" | i18n }}</label>\n            <input\n              id=\"length\"\n              type=\"number\"\n              min=\"5\"\n              max=\"128\"\n              [(ngModel)]=\"passwordOptions.length\"\n              (change)=\"savePasswordOptions()\"\n            />\n            <input\n              id=\"lengthRange\"\n              type=\"range\"\n              min=\"5\"\n              max=\"128\"\n              step=\"1\"\n              [(ngModel)]=\"passwordOptions.length\"\n              (change)=\"sliderChanged()\"\n              (input)=\"sliderInput()\"\n              attr.aria-label=\"{{ 'length' | i18n }}\"\n              tabindex=\"-1\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"uppercase\">A-Z</label>\n            <input\n              id=\"uppercase\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useUppercase\"\n              [(ngModel)]=\"passwordOptions.uppercase\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"lowercase\">a-z</label>\n            <input\n              id=\"lowercase\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useLowercase\"\n              [(ngModel)]=\"passwordOptions.lowercase\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"numbers\">0-9</label>\n            <input\n              id=\"numbers\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'numbers' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useNumbers\"\n              [(ngModel)]=\"passwordOptions.number\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"special\">!@#$%^&*</label>\n            <input\n              id=\"special\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useSpecial\"\n              [(ngModel)]=\"passwordOptions.special\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-input\" appBoxRow>\n            <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n            <input\n              id=\"min-number\"\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"passwordOptions.minNumber\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-input\" appBoxRow>\n            <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n            <input\n              id=\"min-special\"\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"passwordOptions.minSpecial\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"ambiguous\">{{ \"avoidAmbChar\" | i18n }}</label>\n            <input\n              id=\"ambiguous\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"avoidAmbiguous\"\n            />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"box list\">\n      <div class=\"box-content single-line\">\n        <a class=\"box-content-row box-content-row-flex\" routerLink=\"/generator-history\">\n          <div class=\"row-main\">{{ \"passwordHistory\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"type === 'username'\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"options\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"usernameTypeHeading\">\n          <label id=\"usernameTypeHeading\" class=\"radio-header\">\n            {{ \"usernameType\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/generator/#username-types\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <div\n            class=\"radio-group align-start text-default\"\n            appBoxRow\n            *ngFor=\"let o of usernameTypeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.type\"\n              name=\"UsernameType\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.type === o.value\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n              <div class=\"small text-muted\" *ngIf=\"o.desc\">{{ o.desc }}</div>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'forwarded'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"forwardTypeHeading\">\n          <label id=\"forwardTypeHeading\" class=\"radio-header\">{{ \"service\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of forwardOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.forwardedService\"\n              name=\"ForwardType\"\n              id=\"forwardtype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.forwardedService === o.value\"\n            />\n            <label for=\"forwardtype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n            <input\n              id=\"simplelogin-apikey\"\n              type=\"password\"\n              name=\"SimpleLoginApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'duckduckgo'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"duckduckgo-apikey\">{{ \"apiKey\" | i18n }}</label>\n            <input\n              id=\"duckduckgo-apikey\"\n              type=\"password\"\n              name=\"DuckDudkGoApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedDuckDuckGoToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"anonaddy-accessToken\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"anonaddy-accessToken\"\n              type=\"password\"\n              name=\"AnonAddyAccessToken\"\n              [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n            <input\n              id=\"anonaddy-domain\"\n              type=\"text\"\n              name=\"AnonAddyDomain\"\n              [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"firefox-apikey\"\n              type=\"password\"\n              name=\"FirefoxApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'fastmail'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"fastmail-apiToken\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"fastmail-apiToken\"\n              type=\"password\"\n              name=\"FastmailApiToken\"\n              [(ngModel)]=\"usernameOptions.forwardedFastmailApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"subaddress-email\"\n            type=\"text\"\n            name=\"SubaddressEmail\"\n            [(ngModel)]=\"usernameOptions.subaddressEmail\"\n            (blur)=\"saveUsernameOptions()\"\n          />\n        </div>\n        <div\n          class=\"box-content-row\"\n          role=\"radiogroup\"\n          aria-labelledby=\"subaddressTypeHeading\"\n          *ngIf=\"subaddressOptions.length > 1\"\n        >\n          <label id=\"subaddressTypeHeading\" class=\"radio-header\">{{ \"type\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of subaddressOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.subaddressType\"\n              name=\"SubaddressType\"\n              id=\"subaddresstype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.subaddressType === o.value\"\n            />\n            <label for=\"subaddresstype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"usernameWebsite\">\n          <label for=\"subaddress-website\">{{ \"website\" | i18n }}</label>\n          <input\n            id=\"subaddress-website\"\n            type=\"text\"\n            name=\"SubaddressWebsite\"\n            [value]=\"usernameOptions.website\"\n            disabled\n            readonly\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'catchall'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n          <input\n            id=\"catchall-domain\"\n            type=\"text\"\n            name=\"CatchallDomain\"\n            [(ngModel)]=\"usernameOptions.catchallDomain\"\n            (blur)=\"saveUsernameOptions()\"\n          />\n        </div>\n        <div\n          class=\"box-content-row\"\n          role=\"radiogroup\"\n          aria-labelledby=\"catchallTypeHeading\"\n          *ngIf=\"catchallOptions.length > 1\"\n        >\n          <label id=\"catchallTypeHeading\" class=\"radio-header\">{{ \"type\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of catchallOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.catchallType\"\n              name=\"CatchallType\"\n              id=\"catchalltype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.catchallType === o.value\"\n            />\n            <label for=\"catchalltype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"usernameWebsite\">\n          <label for=\"catchall-website\">{{ \"website\" | i18n }}</label>\n          <input\n            id=\"catchall-website\"\n            type=\"text\"\n            name=\"CatchallWebsite\"\n            [value]=\"usernameOptions.website\"\n            disabled\n            readonly\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'word'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n          <input\n            id=\"capitalize\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n          <input\n            id=\"include-number\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"@bitwarden/angular/components/generator.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  private addEditCipherInfo: any;\n  private cipherState: CipherView;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    logService: LogService,\n    private location: Location\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n  }\n\n  async ngOnInit() {\n    this.addEditCipherInfo = await this.stateService.getAddEditCipherInfo();\n    if (this.addEditCipherInfo != null) {\n      this.cipherState = this.addEditCipherInfo.cipher;\n    }\n    this.comingFromAddEdit = this.cipherState != null;\n    if (this.cipherState?.login?.hasUris) {\n      this.usernameWebsite = this.cipherState.login.uris[0].hostname;\n    }\n    await super.ngOnInit();\n  }\n\n  select() {\n    super.select();\n    if (this.type === \"password\") {\n      this.cipherState.login.password = this.password;\n    } else if (this.type === \"username\") {\n      this.cipherState.login.username = this.username;\n    }\n    this.addEditCipherInfo.cipher = this.cipherState;\n    this.stateService.setAddEditCipherInfo(this.addEditCipherInfo);\n    this.close();\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"@bitwarden/common/models/domain/generated-password-history\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" type=\"button\" (click)=\"close()\">\n      <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" type=\"button\" (click)=\"clear()\">\n      {{ \"clear\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <div\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"h.password | colorPassword\"\n            ></div>\n            <span class=\"detail\">{{ h.date | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"@bitwarden/angular/components/password-generator-history.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { SendFile } from \"../domain/send-file\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(json: DeepJsonify<SendFileView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendFileView(), json);\n  }\n}\n","import { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { SendText } from \"../domain/send-text\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(json: DeepJsonify<SendTextView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendTextView(), json);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    if (obj == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(obj.keyB64).buffer;\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetric-crypto-key\";\n\nimport { SendFileView } from \"./send-file.view\";\nimport { SendTextView } from \"./send-text.view\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n\n  toJSON() {\n    return Utils.merge(this, {\n      key: Utils.fromBufferToB64(this.key),\n    });\n  }\n\n  static fromJSON(json: DeepJsonify<SendView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendView(), json, {\n      key: Utils.fromB64ToArray(json.key)?.buffer,\n      cryptoKey: SymmetricCryptoKey.fromJSON(json.cryptoKey),\n      text: SendTextView.fromJSON(json.text),\n      file: SendFileView.fromJSON(json.file),\n      revisionDate: json.revisionDate == null ? null : new Date(json.revisionDate),\n      deletionDate: json.deletionDate == null ? null : new Date(json.deletionDate),\n      expirationDate: json.expirationDate == null ? null : new Date(json.expirationDate),\n    });\n  }\n}\n","import { SendData } from \"../models/data/send.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new UntypedFormGroup({\n    selectedDeletionDatePreset: new UntypedFormControl(),\n    selectedExpirationDatePreset: new UntypedFormControl(),\n    defaultDeletionDateTime: new UntypedFormControl(),\n    defaultExpirationDateTime: new UntypedFormControl(),\n    fallbackDeletionDate: new UntypedFormControl(),\n    fallbackDeletionTime: new UntypedFormControl(),\n    fallbackExpirationDate: new UntypedFormControl(),\n    fallbackExpirationTime: new UntypedFormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as UntypedFormControl;\n  }\n\n  get selectedExpirationDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as UntypedFormControl;\n  }\n\n  get defaultDeletionDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as UntypedFormControl;\n  }\n\n  get defaultExpirationDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as UntypedFormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { Send } from \"@bitwarden/common/models/domain/send\";\nimport { SendFileView } from \"@bitwarden/common/models/view/send-file.view\";\nimport { SendTextView } from \"@bitwarden/common/models/view/send-text.view\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.SendOptions, (p) => p.data.disableHideEmail)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableHideEmail = policyAppliesToActiveUser;\n      });\n\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\n\nimport { Account } from \"../../models/account\";\nimport { BrowserComponentState } from \"../../models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"../../models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"../../models/browserSendComponentState\";\n\nexport abstract class BrowserStateService extends BaseStateServiceAbstraction<Account> {\n  abstract hasInSessionMemory(key: string): Promise<boolean>;\n  abstract getFromSessionMemory<T>(key: string, deserializer?: (obj: Jsonify<T>) => T): Promise<T>;\n  abstract setInSessionMemory(key: string, value: any): Promise<void>;\n  getBrowserGroupingComponentState: (\n    options?: StorageOptions\n  ) => Promise<BrowserGroupingsComponentState>;\n  setBrowserGroupingComponentState: (\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserCipherComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserCipherComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendComponentState: (options?: StorageOptions) => Promise<BrowserSendComponentState>;\n  setBrowserSendComponentState: (\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendTypeComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserSendTypeComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n}\n","<ng-container [formGroup]=\"datesForm\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n          <select\n            id=\"deletionDate\"\n            name=\"DeletionDateSelect\"\n            formControlName=\"selectedDeletionDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"selectedDeletionDatePreset.value === 0\">\n          <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" appBoxRow *ngIf=\"editMode\">\n        <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"deletionDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedDeletionDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"editExpirationDate\">{{ \"expirationDate\" | i18n }}</label>\n          <select\n            id=\"expirationDate\"\n            name=\"ExpirationDateSelect\"\n            formControlName=\"selectedExpirationDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"selectedExpirationDatePreset.value === 0\" appBoxRow>\n          <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" *ngIf=\"editMode\" appBoxRow>\n        <div class=\"flex-label\">\n          <label>{{ \"expirationDate\" | i18n }}</label>\n          <button type=\"button\" *ngIf=\"!disabled\" appStopClick (click)=\"clearExpiration()\">\n            {{ \"clear\" | i18n }}\n          </button>\n        </div>\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"expirationDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedExpirationDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <ng-template #deletionDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"deletionTimeCustomFallback\"\n            type=\"time\"\n            name=\"DeletionTimeDate\"\n            formControlName=\"fallbackDeletionTime\"\n            required\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"deletionTimeCustomFallback\"\n            formControlName=\"fallbackDeletionTime\"\n            name=\"SafariDeletionTime\"\n          >\n            <option *ngFor=\"let o of safariDeletionTimePresetOptions\" [ngValue]=\"o.twentyFourHour\">\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"deletionDateCustom\"\n          type=\"datetime-local\"\n          name=\"DeletionDate\"\n          formControlName=\"defaultDeletionDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n  <ng-template #expirationDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"expirationDateCustom\"\n          type=\"datetime-local\"\n          name=\"ExpirationDate\"\n          formControlName=\"defaultExpirationDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n          [readOnly]=\"disabled\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</ng-container>\n","import { DatePipe } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"@bitwarden/angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  @Input() readonly inPopout: boolean;\n  @Output() popOutWindow = new EventEmitter();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading || disableSend\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"send\">\n    <!-- Policy Banner -->\n    <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n      {{ \"sendDisabledWarning\" | i18n }}\n    </app-callout>\n    <app-callout type=\"info\" *ngIf=\"disableHideEmail && !disableSend\">\n      {{ \"sendOptionsPolicyInEffect\" | i18n }}\n    </app-callout>\n    <!-- File Warning -->\n    <app-callout\n      type=\"warning\"\n      icon=\"bwi-external-link bwi-rotate-270 bwi-fw\"\n      [clickable]=\"true\"\n      title=\"{{ 'sendFileCalloutHeader' | i18n }}\"\n      *ngIf=\"showFilePopoutMessage && send.type === sendType.File && !disableSend\"\n      (click)=\"popOutWindow()\"\n    >\n      <div *ngIf=\"showChromiumFileWarning\">{{ \"sendLinuxChromiumFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showFirefoxFileWarning\">{{ \"sendFirefoxFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showSafariFileWarning\">{{ \"sendSafariFileWarning\" | i18n }}</div>\n    </app-callout>\n    <!-- Name -->\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"send.name\"\n            [readonly]=\"disableSend\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendNameDesc\" | i18n }}\n      </div>\n    </div>\n    <!-- Type Options -->\n    <div class=\"box\" *ngIf=\"!editMode\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"sendTypeOptions\">{{ \"sendTypeHeader\" | i18n }}</label>\n          <div\n            class=\"radio-group text-default\"\n            appBoxRow\n            name=\"SendTypeOptions\"\n            *ngFor=\"let o of typeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"send.type\"\n              name=\"Type_{{ o.value }}\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"typeChanged()\"\n              [checked]=\"send.type === o.value\"\n              [readonly]=\"disableSend\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- File -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.File && (editMode || showFileSelector)\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\" *ngIf=\"editMode\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <div class=\"row-main\">{{ send.file.fileName }} ({{ send.file.sizeName }})</div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"showFileSelector\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required [readonly]=\"disableSend\" />\n        </div>\n      </div>\n      <div class=\"box-footer\" *ngIf=\"showFileSelector\">\n        {{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n    <!-- Text -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.Text\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n          <textarea\n            id=\"text\"\n            name=\"Text\"\n            rows=\"6\"\n            [(ngModel)]=\"send.text.text\"\n            [readonly]=\"disableSend\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendTextDesc\" | i18n }}\n      </div>\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"hideText\">{{ \"sendHideText\" | i18n }}</label>\n          <input\n            id=\"hideText\"\n            type=\"checkbox\"\n            name=\"HideText\"\n            [(ngModel)]=\"send.text.hidden\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Share -->\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"share\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <!-- Copy Link on Save -->\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"copyOnSave\">{{ \"sendShareDesc\" | i18n }}</label>\n          <input\n            id=\"copyOnSave\"\n            type=\"checkbox\"\n            name=\"CopyOnSave\"\n            [(ngModel)]=\"copyLink\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Options -->\n    <div class=\"box\">\n      <h2>\n        <button\n          type=\"button\"\n          class=\"box-header-expandable\"\n          (click)=\"showOptions = !showOptions\"\n          [attr.aria-expanded]=\"showOptions\"\n        >\n          {{ \"options\" | i18n }}\n          <i *ngIf=\"!showOptions\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n          <i *ngIf=\"showOptions\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n        </button>\n      </h2>\n    </div>\n    <div [hidden]=\"!showOptions\">\n      <app-send-efflux-dates\n        [initialDeletionDate]=\"send.deletionDate\"\n        [initialExpirationDate]=\"send.expirationDate\"\n        [editMode]=\"editMode\"\n        [disabled]=\"disableSend\"\n        (datesChanged)=\"setDates($event)\"\n        (popOutWindow)=\"popOutWindow()\"\n      >\n      </app-send-efflux-dates>\n      <!-- Maximum Access Count -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"maximumAccessCount\">{{ \"maximumAccessCount\" | i18n }}</label>\n            <input\n              id=\"maximumAccessCount\"\n              min=\"1\"\n              type=\"number\"\n              name=\"MaximumAccessCount\"\n              [(ngModel)]=\"send.maxAccessCount\"\n              [readonly]=\"disableSend\"\n            />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"maximumAccessCountDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Current Access Count -->\n      <div class=\"box\" *ngIf=\"editMode\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"currentAccessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n            <input\n              id=\"currentAccessCount\"\n              readonly\n              type=\"text\"\n              name=\"CurrentAccessCount\"\n              [(ngModel)]=\"send.accessCount\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Password -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"password\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Password\"\n                class=\"monospaced\"\n                [(ngModel)]=\"password\"\n                appInputVerbatim\n                [readonly]=\"disableSend\"\n              />\n            </div>\n            <div class=\"action-buttons\" *ngIf=\"!disableSend\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePasswordVisible()\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendPasswordDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Notes -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              [readonly]=\"disableSend\"\n            ></textarea>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendNotesDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Hide Email -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"hideEmail\">{{ \"hideEmail\" | i18n }}</label>\n            <input\n              id=\"hideEmail\"\n              type=\"checkbox\"\n              name=\"HideEmail\"\n              [(ngModel)]=\"send.hideEmail\"\n              [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Disable Send -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"disableSend\">{{ \"sendDisableDesc\" | i18n }}</label>\n            <input\n              id=\"disableSend\"\n              type=\"checkbox\"\n              name=\"DisableSend\"\n              [(ngModel)]=\"send.disabled\"\n              [disabled]=\"disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Delete -->\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteSend\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { DatePipe, Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\n\nimport { BrowserStateService } from \"../../services/abstractions/browser-state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"send-add-edit.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SendAddEditComponent extends BaseAddEditComponent {\n  // Options header\n  showOptions = false;\n  // File visibility\n  isFirefox = false;\n  inPopout = false;\n  inSidebar = false;\n  isLinux = false;\n  isUnsupportedMac = false;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: BrowserStateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private popupUtilsService: PopupUtilsService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  get showFileSelector(): boolean {\n    return !(this.editMode || this.showFilePopoutMessage);\n  }\n\n  get showFilePopoutMessage(): boolean {\n    return (\n      !this.editMode &&\n      (this.showFirefoxFileWarning || this.showSafariFileWarning || this.showChromiumFileWarning)\n    );\n  }\n\n  get showFirefoxFileWarning(): boolean {\n    return this.isFirefox && !(this.inSidebar || this.inPopout);\n  }\n\n  get showSafariFileWarning(): boolean {\n    return this.isSafari && !this.inPopout;\n  }\n\n  // Only show this for Chromium based browsers in Linux and Mac > Big Sur\n  get showChromiumFileWarning(): boolean {\n    return (\n      (this.isLinux || this.isUnsupportedMac) &&\n      !this.isFirefox &&\n      !(this.inSidebar || this.inPopout)\n    );\n  }\n\n  popOutWindow() {\n    this.popupUtilsService.popOut(window);\n  }\n\n  async ngOnInit() {\n    // File visilibity\n    this.isFirefox = this.platformUtilsService.isFirefox();\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n    this.isLinux = window?.navigator?.userAgent.indexOf(\"Linux\") !== -1;\n    this.isUnsupportedMac =\n      this.platformUtilsService.isChrome() && window?.navigator?.appVersion.includes(\"Mac OS X 11\");\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.sendId) {\n        this.sendId = params.sendId;\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      await super.ngOnInit();\n    });\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        document.getElementById(\"name\").focus();\n      }\n    }, 200);\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (await super.delete()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  cancel() {\n    // If true, the window was pop'd out on the add-send page. location.back will not work\n    if ((window as any).previousPopupUrl.startsWith(\"/add-send\")) {\n      this.router.navigate([\"tabs/send\"]);\n    } else {\n      this.location.back();\n    }\n  }\n}\n","import { CipherView } from \"../models/view/cipher.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Directive()\nexport class SendComponent implements OnInit, OnDestroy {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nexport class BrowserComponentState {\n  scrollY: number;\n  searchText: string;\n\n  static fromJSON(json: Jsonify<BrowserComponentState>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new BrowserComponentState(), json);\n  }\n}\n","import { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\nimport { DeepJsonify } from \"@bitwarden/common/types/deep-jsonify\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserSendComponentState extends BrowserComponentState {\n  sends: SendView[];\n  typeCounts: Map<SendType, number>;\n\n  toJSON() {\n    return Utils.merge(this, {\n      typeCounts: Utils.mapToRecord(this.typeCounts),\n    });\n  }\n\n  static fromJSON(json: DeepJsonify<BrowserSendComponentState>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new BrowserSendComponentState(), json, {\n      sends: json.sends?.map((s) => SendView.fromJSON(s)),\n      typeCounts: Utils.recordToMap(json.typeCounts),\n    });\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","<div\n  role=\"group\"\n  *ngFor=\"let s of sends\"\n  appA11yTitle=\"{{ s.name }}\"\n  class=\"box-content-row box-content-row-flex\"\n>\n  <button\n    type=\"button\"\n    class=\"row-main\"\n    (click)=\"selectSend(s)\"\n    appStopClick\n    title=\"{{ title }} - {{ s.name }}\"\n  >\n    <div class=\"app-vault-icon\">\n      <div class=\"icon\" aria-hidden=\"true\">\n        <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type === sendType.Text\"></i>\n        <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type === sendType.File\"></i>\n      </div>\n    </div>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        {{ s.name }}\n        <ng-container *ngIf=\"s.disabled\">\n          <i\n            class=\"bwi bwi-exclamation-triangle text-muted\"\n            title=\"{{ 'disabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.password\">\n          <i\n            class=\"bwi bwi-key text-muted\"\n            title=\"{{ 'passwordProtected' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"passwordProtected\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.maxAccessCountReached\">\n          <i\n            class=\"bwi bwi-ban text-muted\"\n            title=\"{{ 'maxAccessCountReached' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.expired\">\n          <i class=\"bwi bwi-clock text-muted\" title=\"{{ 'expired' | i18n }}\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.pendingDelete\">\n          <i\n            class=\"bwi bwi-trash text-muted\"\n            title=\"{{ 'pendingDeletion' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n        </ng-container>\n      </span>\n      <span class=\"detail\">{{ s.deletionDate | date: \"medium\" }}</span>\n    </div>\n  </button>\n  <div class=\"action-buttons\">\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'copySendLink' | i18n }}\"\n      (click)=\"copySendLink(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-files\" aria-hidden=\"true\"></i>\n    </button>\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      [ngClass]=\"{ disabled: disabledByPolicy }\"\n      [attr.disabled]=\"disabledByPolicy ? '' : null\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'removePassword' | i18n }}\"\n      (click)=\"removePassword(s)\"\n      *ngIf=\"s.password\"\n    >\n      <i class=\"bwi bwi-lg bwi-undo\" aria-hidden=\"true\"></i>\n    </button>\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'delete' | i18n }}\"\n      (click)=\"delete(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-trash\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Component({\n  selector: \"app-send-list\",\n  templateUrl: \"send-list.component.html\",\n})\nexport class SendListComponent {\n  @Input() sends: SendView[];\n  @Input() title: string;\n  @Input() disabledByPolicy = false;\n  @Output() onSelected = new EventEmitter<SendView>();\n  @Output() onCopySendLink = new EventEmitter<SendView>();\n  @Output() onRemovePassword = new EventEmitter<SendView>();\n  @Output() onDeleteSend = new EventEmitter<SendView>();\n\n  sendType = SendType;\n\n  selectSend(s: SendView) {\n    this.onSelected.emit(s);\n  }\n\n  copySendLink(s: SendView) {\n    this.onCopySendLink.emit(s);\n  }\n\n  removePassword(s: SendView) {\n    this.onRemovePassword.emit(s);\n  }\n\n  delete(s: SendView) {\n    this.onDeleteSend.emit(s);\n  }\n}\n","<header>\n  <div class=\"left\" *ngIf=\"showLeftHeader\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchSends' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ flex: disableSend, 'tab-page': disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"(!sends || !sends.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"sends && sends.length && !showSearching()\">\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(sendType.Text)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file-text\"></i></div>\n            <span class=\"text\">{{ \"sendTypeText\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.Text) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(sendType.File)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file\"></i></div>\n            <span class=\"text\">{{ \"sendTypeFile\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.File) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"allSends\" | i18n }}\n        <div class=\"flex-right\">{{ sends.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"sends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        ></app-send-list>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!filteredSends || !filteredSends.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <div class=\"box list full-list\" *ngIf=\"filteredSends && filteredSends.length > 0\">\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"filteredSends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        >\n        </app-send-list>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\nimport { BrowserSendComponentState } from \"../../models/browserSendComponentState\";\nimport { BrowserStateService } from \"../../services/abstractions/browser-state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send-groupings\",\n  templateUrl: \"send-groupings.component.html\",\n})\nexport class SendGroupingsComponent extends BaseSendComponent {\n  // Header\n  showLeftHeader = true;\n  // Send Type Calculations\n  typeCounts = new Map<SendType, number>();\n  // State Handling\n  state: BrowserSendComponentState;\n  private loadedTimeout: number;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: BrowserStateService,\n    private router: Router,\n    private syncService: SyncService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.calculateTypeCounts();\n      this.selectAll();\n    };\n  }\n\n  async ngOnInit() {\n    // Determine Header details\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    // Clear state of Send Type Component\n    await this.stateService.setBrowserSendTypeComponentState(null);\n    // Let super class finish\n    await super.ngOnInit();\n    // Handle State Restore if necessary\n    const restoredScopeState = await this.restoreState();\n    if (this.state?.searchText != null) {\n      this.searchText = this.state.searchText;\n    }\n\n    if (!this.syncService.syncInProgress) {\n      this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(() => {\n        if (!this.loaded) {\n          this.load();\n        }\n      }, 5000);\n    }\n\n    if (!this.syncService.syncInProgress || restoredScopeState) {\n      window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n    }\n\n    // Load all sends if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectType(type: SendType) {\n    this.router.navigate([\"/send-type\"], { queryParams: { type: type } });\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"]);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  private calculateTypeCounts() {\n    // Create type counts\n    const typeCounts = new Map<SendType, number>();\n    this.sends.forEach((s) => {\n      if (typeCounts.has(s.type)) {\n        typeCounts.set(s.type, typeCounts.get(s.type) + 1);\n      } else {\n        typeCounts.set(s.type, 1);\n      }\n    });\n    this.typeCounts = typeCounts;\n  }\n\n  private async saveState() {\n    this.state = Object.assign(new BrowserSendComponentState(), {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      sends: this.sends,\n      typeCounts: this.typeCounts,\n    });\n    await this.stateService.setBrowserSendComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.stateService.getBrowserSendComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.sends != null) {\n      this.sends = this.state.sends;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n\n    return true;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchType' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ flex: disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"!filteredSends.length\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <div class=\"box list only-list\" *ngIf=\"filteredSends.length\">\n    <h2 class=\"box-header\">\n      {{ groupingTitle }}\n      <span class=\"flex-right\">{{ filteredSends.length }}</span>\n    </h2>\n    <div class=\"box-content\">\n      <app-send-list\n        [sends]=\"filteredSends\"\n        title=\"{{ 'editItem' | i18n }}\"\n        [disabledByPolicy]=\"disableSend\"\n        (onSelected)=\"selectSend($event)\"\n        (onCopySendLink)=\"copy($event)\"\n        (onRemovePassword)=\"removePassword($event)\"\n        (onDeleteSend)=\"delete($event)\"\n      >\n      </app-send-list>\n    </div>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\nimport { BrowserComponentState } from \"../../models/browserComponentState\";\nimport { BrowserStateService } from \"../../services/abstractions/browser-state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendTypeComponent\";\n\n@Component({\n  selector: \"app-send-type\",\n  templateUrl: \"send-type.component.html\",\n})\nexport class SendTypeComponent extends BaseSendComponent {\n  groupingTitle: string;\n  // State Handling\n  state: BrowserComponentState;\n  private refreshTimeout: number;\n  private applySavedState = true;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: BrowserStateService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    private router: Router,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.selectType(this.type);\n    };\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/send-type\");\n  }\n\n  async ngOnInit() {\n    // Let super class finish\n    await super.ngOnInit();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserSendTypeComponentState();\n        if (this.state?.searchText != null) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.type != null) {\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case SendType.Text:\n            this.groupingTitle = this.i18nService.t(\"sendTypeText\");\n            break;\n          case SendType.File:\n            this.groupingTitle = this.i18nService.t(\"sendTypeFile\");\n            break;\n          default:\n            break;\n        }\n        await this.load((s) => s.type === this.type);\n      }\n\n      // Restore state and remove reference\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n      this.stateService.setBrowserSendTypeComponentState(null);\n    });\n\n    // Refresh Send list if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              this.refreshTimeout = window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.refreshTimeout != null) {\n      window.clearTimeout(this.refreshTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"], { queryParams: { type: this.type } });\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserSendTypeComponentState(this.state);\n  }\n}\n","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { CanActivate, NavigationEnd, NavigationStart, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter, pairwise } from \"rxjs/operators\";\n\n@Injectable()\nexport class DebounceNavigationService implements CanActivate, OnDestroy {\n  navigationStartSub: Subscription;\n  navigationSuccessSub: Subscription;\n\n  private lastNavigation: NavigationStart;\n  private thisNavigation: NavigationStart;\n  private lastNavigationSuccessId: number;\n\n  constructor(private router: Router) {\n    this.navigationStartSub = this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationStart),\n        pairwise()\n      )\n      .subscribe(\n        (events: [NavigationStart, NavigationStart]) =>\n          ([this.lastNavigation, this.thisNavigation] = events)\n      );\n\n    this.navigationSuccessSub = this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => (this.lastNavigationSuccessId = event.id));\n  }\n\n  async canActivate() {\n    return !(\n      this.thisNavigation?.navigationTrigger === \"hashchange\" &&\n      this.lastNavigation.navigationTrigger === \"popstate\" &&\n      this.lastNavigationSuccessId === this.lastNavigation.id &&\n      this.lastNavigation.url === this.thisNavigation?.url\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.navigationStartSub != null) {\n      this.navigationStartSub.unsubscribe();\n    }\n\n    if (this.navigationSuccessSub != null) {\n      this.navigationSuccessSub.unsubscribe();\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"excludedDomains\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\">{{ \"save\" | i18n }}</button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"excludedDomains\">\n          <div\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let domain of excludedDomains; let i = index; trackBy: trackByFunction\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(i)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"excludedDomain{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"excludedDomain{{ i }}\"\n                name=\"excludedDomain{{ i }}\"\n                type=\"text\"\n                [(ngModel)]=\"domain.uri\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"currentUris{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"currentUris{{ i }}\"\n                [(ngModel)]=\"domain.uri\"\n                [hidden]=\"!domain.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(domain)\"\n                [attr.aria-pressed]=\"domain.showCurrentUris === true\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti single-line\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"excludedDomainsDesc\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\ninterface ExcludedDomain {\n  uri: string;\n  showCurrentUris: boolean;\n}\n\nconst BroadcasterSubscriptionId = \"excludedDomains\";\n\n@Component({\n  selector: \"app-excluded-domains\",\n  templateUrl: \"excluded-domains.component.html\",\n})\nexport class ExcludedDomainsComponent implements OnInit, OnDestroy {\n  excludedDomains: ExcludedDomain[] = [];\n  existingExcludedDomains: ExcludedDomain[] = [];\n  currentUris: string[];\n  loadCurrentUrisTimeout: number;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private router: Router,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    const savedDomains = await this.stateService.getNeverDomains();\n    if (savedDomains) {\n      for (const uri of Object.keys(savedDomains)) {\n        this.excludedDomains.push({ uri: uri, showCurrentUris: false });\n        this.existingExcludedDomains.push({ uri: uri, showCurrentUris: false });\n      }\n    }\n\n    await this.loadCurrentUris();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadCurrentUrisTimeout != null) {\n              window.clearTimeout(this.loadCurrentUrisTimeout);\n            }\n            this.loadCurrentUrisTimeout = window.setTimeout(\n              async () => await this.loadCurrentUris(),\n              500\n            );\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addUri() {\n    this.excludedDomains.push({ uri: \"\", showCurrentUris: false });\n  }\n\n  async removeUri(i: number) {\n    this.excludedDomains.splice(i, 1);\n  }\n\n  async submit() {\n    const savedDomains: { [name: string]: null } = {};\n    const newExcludedDomains = this.getNewlyAddedDomians(this.excludedDomains);\n    for (const domain of this.excludedDomains) {\n      const resp = newExcludedDomains.filter((e) => e.uri === domain.uri);\n      if (resp.length === 0) {\n        savedDomains[domain.uri] = null;\n      } else {\n        if (domain.uri && domain.uri !== \"\") {\n          const validDomain = Utils.getHostname(domain.uri);\n          if (!validDomain) {\n            this.platformUtilsService.showToast(\n              \"error\",\n              null,\n              this.i18nService.t(\"excludedDomainsInvalidDomain\", domain.uri)\n            );\n            return;\n          }\n          savedDomains[validDomain] = null;\n        }\n      }\n    }\n\n    await this.stateService.setNeverDomains(savedDomains);\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  getNewlyAddedDomians(domain: ExcludedDomain[]): ExcludedDomain[] {\n    const result = this.excludedDomains.filter(\n      (newDomain) =>\n        !this.existingExcludedDomains.some((oldDomain) => newDomain.uri === oldDomain.uri)\n    );\n    return result;\n  }\n\n  toggleUriInput(domain: ExcludedDomain) {\n    domain.showCurrentUris = !domain.showCurrentUris;\n  }\n\n  async loadCurrentUris() {\n    const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n    if (tabs) {\n      const uriSet = new Set(tabs.map((tab) => Utils.getHostname(tab.url)));\n      uriSet.delete(null);\n      this.currentUris = Array.from(uriSet);\n    }\n  }\n}\n","export enum EncryptedExportType {\n  AccountEncrypted = 0,\n  FileEncrypted = 1,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n  OrganizationUser_Revoked = 1511,\n  OrganizationUser_Restored = 1512,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","import { EventView } from \"../models/view/event.view\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (\n    eventType: EventType,\n    cipherId?: string,\n    uploadImmediately?: boolean,\n    organizationId?: string\n  ) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { Verification } from \"../../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport abstract class FileDownloadService {\n  download: (request: FileDownloadRequest) => void;\n}\n","import { Directive, EventEmitter, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { merge, takeUntil, Subject, startWith } from \"rxjs\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { EncryptedExportType } from \"@bitwarden/common/enums/encryptedExportType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\n@Directive()\nexport class ExportComponent implements OnInit, OnDestroy {\n  @Output() onSaved = new EventEmitter();\n\n  formPromise: Promise<string>;\n  disabledByPolicy = false;\n  showFilePassword: boolean;\n  showConfirmFilePassword: boolean;\n\n  exportForm = this.formBuilder.group({\n    format: [\"json\"],\n    secret: [\"\"],\n    filePassword: [\"\", Validators.required],\n    confirmFilePassword: [\"\", Validators.required],\n    fileEncryptionType: [EncryptedExportType.AccountEncrypted],\n  });\n\n  formatOptions = [\n    { name: \".json\", value: \"json\" },\n    { name: \".csv\", value: \"csv\" },\n    { name: \".json (Encrypted)\", value: \"encrypted_json\" },\n  ];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected exportService: ExportService,\n    protected eventService: EventService,\n    private policyService: PolicyService,\n    protected win: Window,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService,\n    private formBuilder: UntypedFormBuilder,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisablePersonalVaultExport)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disabledByPolicy = policyAppliesToActiveUser;\n      });\n\n    await this.checkExportDisabled();\n\n    merge(\n      this.exportForm.get(\"format\").valueChanges,\n      this.exportForm.get(\"fileEncryptionType\").valueChanges\n    )\n      .pipe(takeUntil(this.destroy$))\n      .pipe(startWith(0))\n      .subscribe(() => this.adjustValidators());\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n\n  async checkExportDisabled() {\n    if (this.disabledByPolicy) {\n      this.exportForm.disable();\n    }\n  }\n\n  get encryptedFormat() {\n    return this.format === \"encrypted_json\";\n  }\n\n  protected async doExport() {\n    try {\n      this.formPromise = this.getExportData();\n      const data = await this.formPromise;\n      this.downloadFile(data);\n      this.saved();\n      await this.collectEvent();\n      this.exportForm.get(\"secret\").setValue(\"\");\n      this.exportForm.clearValidators();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submit() {\n    if (this.disabledByPolicy) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"personalVaultExportPolicyInEffect\")\n      );\n      return;\n    }\n\n    const acceptedWarning = await this.warningDialog();\n    if (!acceptedWarning) {\n      return;\n    }\n    const secret = this.exportForm.get(\"secret\").value;\n\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return;\n    }\n\n    this.doExport();\n  }\n\n  async warningDialog() {\n    if (this.encryptedFormat) {\n      return await this.platformUtilsService.showDialog(\n        \"<p>\" +\n          this.i18nService.t(\"encExportKeyWarningDesc\") +\n          \"<p>\" +\n          this.i18nService.t(\"encExportAccountWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\",\n        true\n      );\n    } else {\n      return await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"exportWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n    }\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n\n  protected getExportData() {\n    if (\n      this.format === \"encrypted_json\" &&\n      this.fileEncryptionType === EncryptedExportType.FileEncrypted\n    ) {\n      return this.exportService.getPasswordProtectedExport(this.filePassword);\n    } else {\n      return this.exportService.getExport(this.format, null);\n    }\n  }\n\n  protected getFileName(prefix?: string) {\n    let extension = this.format;\n    if (this.format === \"encrypted_json\") {\n      if (prefix == null) {\n        prefix = \"encrypted\";\n      } else {\n        prefix = \"encrypted_\" + prefix;\n      }\n      extension = \"json\";\n    }\n    return this.exportService.getFileName(prefix, extension);\n  }\n\n  protected async collectEvent(): Promise<void> {\n    await this.eventService.collect(EventType.User_ClientExportedVault);\n  }\n\n  get format() {\n    return this.exportForm.get(\"format\").value;\n  }\n\n  get filePassword() {\n    return this.exportForm.get(\"filePassword\").value;\n  }\n\n  get confirmFilePassword() {\n    return this.exportForm.get(\"confirmFilePassword\").value;\n  }\n\n  get fileEncryptionType() {\n    return this.exportForm.get(\"fileEncryptionType\").value;\n  }\n\n  toggleFilePassword() {\n    this.showFilePassword = !this.showFilePassword;\n    document.getElementById(\"filePassword\").focus();\n  }\n\n  toggleConfirmFilePassword() {\n    this.showConfirmFilePassword = !this.showConfirmFilePassword;\n    document.getElementById(\"confirmFilePassword\").focus();\n  }\n\n  adjustValidators() {\n    this.exportForm.get(\"confirmFilePassword\").reset();\n    this.exportForm.get(\"filePassword\").reset();\n\n    if (this.encryptedFormat && this.fileEncryptionType == EncryptedExportType.FileEncrypted) {\n      this.exportForm.controls.filePassword.enable();\n      this.exportForm.controls.confirmFilePassword.enable();\n    } else {\n      this.exportForm.controls.filePassword.disable();\n      this.exportForm.controls.confirmFilePassword.disable();\n    }\n  }\n\n  private downloadFile(csv: string): void {\n    const fileName = this.getFileName();\n    this.fileDownloadService.download({\n      fileName: fileName,\n      blobData: csv,\n      blobOptions: { type: \"text/plain\" },\n    });\n  }\n}\n","import { map, Observable } from \"rxjs\";\n\nimport { Utils } from \"../../misc/utils\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { I18nService } from \"../i18n.service\";\n\nexport function canAccessVaultTab(org: Organization): boolean {\n  return org.isManager;\n}\n\nexport function canAccessSettingsTab(org: Organization): boolean {\n  return (\n    org.isOwner ||\n    org.canManagePolicies ||\n    org.canManageSso ||\n    org.canManageScim ||\n    org.canAccessImportExport\n  );\n}\n\nexport function canAccessMembersTab(org: Organization): boolean {\n  return org.canManageUsers || org.canManageUsersPassword;\n}\n\nexport function canAccessGroupsTab(org: Organization): boolean {\n  return org.canManageGroups;\n}\n\nexport function canAccessReportingTab(org: Organization): boolean {\n  return org.canAccessReports || org.canAccessEventLogs;\n}\n\nexport function canAccessBillingTab(org: Organization): boolean {\n  return org.canManageBilling;\n}\n\nexport function canManageCollections(org: Organization): boolean {\n  return (\n    org.canCreateNewCollections ||\n    org.canEditAnyCollection ||\n    org.canDeleteAnyCollection ||\n    org.canViewAssignedCollections\n  );\n}\n\nexport function canAccessManageTab(org: Organization): boolean {\n  return canAccessMembersTab(org) || canAccessGroupsTab(org) || canManageCollections(org);\n}\n\nexport function canAccessOrgAdmin(org: Organization): boolean {\n  return (\n    canAccessMembersTab(org) ||\n    canAccessGroupsTab(org) ||\n    canAccessReportingTab(org) ||\n    canAccessBillingTab(org) ||\n    canAccessSettingsTab(org) ||\n    canAccessVaultTab(org) ||\n    canAccessManageTab(org)\n  );\n}\n\nexport function getOrganizationById(id: string) {\n  return map<Organization[], Organization | undefined>((orgs) => orgs.find((o) => o.id === id));\n}\n\nexport function canAccessAdmin(i18nService: I18nService) {\n  return map<Organization[], Organization[]>((orgs) =>\n    orgs.filter(canAccessOrgAdmin).sort(Utils.getSortFunction(i18nService, \"name\"))\n  );\n}\n\nexport function isNotProviderUser(org: Organization): boolean {\n  return !org.isProviderUser;\n}\n\nexport abstract class OrganizationService {\n  organizations$: Observable<Organization[]>;\n\n  get: (id: string) => Organization;\n  getByIdentifier: (identifier: string) => Organization;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the organization\n   */\n  getFromState: (id: string) => Promise<Organization>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: () => boolean;\n}\n\nexport abstract class InternalOrganizationService extends OrganizationService {\n  replace: (organizations: { [id: string]: OrganizationData }) => Promise<void>;\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","<ng-container *ngIf=\"show\">\n  <app-callout type=\"info\" title=\"{{ scopeConfig.title | i18n }}\">\n    {{ scopeConfig.description | i18n: scopeConfig.scopeIdentifier }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-export-scope-callout\",\n  templateUrl: \"export-scope-callout.component.html\",\n})\nexport class ExportScopeCalloutComponent implements OnInit {\n  @Input() organizationId: string = null;\n\n  show = false;\n  scopeConfig: {\n    title: string;\n    description: string;\n    scopeIdentifier: string;\n  };\n\n  constructor(\n    protected organizationService: OrganizationService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (!this.organizationService.hasOrganizations()) {\n      return;\n    }\n    this.scopeConfig =\n      this.organizationId != null\n        ? {\n            title: \"exportingOrganizationVaultTitle\",\n            description: \"exportingOrganizationVaultDescription\",\n            scopeIdentifier: this.organizationService.get(this.organizationId).name,\n          }\n        : {\n            title: \"exportingPersonalVaultTitle\",\n            description: \"exportingPersonalVaultDescription\",\n            scopeIdentifier: await this.stateService.getEmail(),\n          };\n    this.show = true;\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: Utils.isNullOrWhitespace(secret) ? null : secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n    <input\n      id=\"masterPassword\"\n      type=\"password\"\n      name=\"MasterPasswordHash\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { UserVerificationComponent as BaseComponent } from \"@bitwarden/angular/components/user-verification.component\";\n\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent extends BaseComponent {}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"exportForm\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"exportVault\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"!exportForm.enabled\">\n        {{ \"submit\" | i18n }}\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout type=\"warning\" title=\"{{ 'vaultExportDisabled' | i18n }}\" *ngIf=\"disabledByPolicy\">\n      {{ \"personalVaultExportPolicyInEffect\" | i18n }}\n    </app-callout>\n    <app-export-scope-callout *ngIf=\"!disabledByPolicy\"></app-export-scope-callout>\n\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"format\">{{ \"fileFormat\" | i18n }}</label>\n          <select id=\"format\" name=\"Format\" formControlName=\"format\">\n            <option *ngFor=\"let f of formatOptions\" [value]=\"f.value\">{{ f.name }}</option>\n          </select>\n        </div>\n        <app-user-verification ngDefaultControl formControlName=\"secret\" name=\"Secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"confirmIdentity\" | i18n }}</p>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ExportComponent as BaseExportComponent } from \"@bitwarden/angular/components/export.component\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\n@Component({\n  selector: \"app-export\",\n  templateUrl: \"export.component.html\",\n})\nexport class ExportComponent extends BaseExportComponent {\n  constructor(\n    cryptoService: CryptoService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: ExportService,\n    eventService: EventService,\n    policyService: PolicyService,\n    private router: Router,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: UntypedFormBuilder,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cryptoService,\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventService,\n      policyService,\n      window,\n      logService,\n      userVerificationService,\n      formBuilder,\n      fileDownloadService\n    );\n  }\n\n  protected saved() {\n    super.saved();\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/tree-node\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n\n  static fromJSON(obj: Jsonify<FolderView>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new FolderView(), obj, { revisionDate });\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { FolderView } from \"../../models/view/folder.view\";\n\nexport abstract class FolderService {\n  folders$: Observable<Folder[]>;\n  folderViews$: Observable<FolderView[]>;\n\n  clearCache: () => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getAllDecryptedFromState: () => Promise<FolderView[]>;\n}\n\nexport abstract class InternalFolderService extends FolderService {\n  upsert: (folder: FolderData | FolderData[]) => Promise<void>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<void>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { Folder } from \"../../models/domain/folder\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\n\nexport class FolderApiServiceAbstraction {\n  save: (folder: Folder) => Promise<any>;\n  delete: (id: string) => Promise<any>;\n  get: (id: string) => Promise<FolderResponse>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected folderApiService: FolderApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderApiService.save(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderApiService.delete(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/folders\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"folder\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"folder.name\"\n            [appAutofocus]=\"!editMode\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteFolder\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"@bitwarden/angular/components/folder-add-edit.component\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    folderApiService: FolderApiServiceAbstraction,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    logService: LogService\n  ) {\n    super(folderService, folderApiService, i18nService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      await this.init();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.router.navigate([\"/folders\"]);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/folders\"]);\n    }\n    return confirmed;\n  }\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"folders\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"addFolder()\" appA11yTitle=\"{{ 'addFolder' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"(folders$ | async)?.length\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        (click)=\"folderSelected(f)\"\n        class=\"box-content-row padded\"\n        *ngFor=\"let f of folders$ | async\"\n      >\n        {{ f.name }}\n      </button>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!(folders$ | async)?.length\">\n    <p>{{ \"noFolders\" | i18n }}</p>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { map, Observable } from \"rxjs\";\n\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\n@Component({\n  selector: \"app-folders\",\n  templateUrl: \"folders.component.html\",\n})\nexport class FoldersComponent {\n  folders$: Observable<FolderView[]>;\n\n  constructor(private folderService: FolderService, private router: Router) {\n    this.folders$ = this.folderService.folderViews$.pipe(\n      map((folders) => {\n        if (folders.length > 0) {\n          folders = folders.slice(0, folders.length - 1);\n        }\n\n        return folders;\n      })\n    );\n  }\n\n  folderSelected(folder: FolderView) {\n    this.router.navigate([\"/edit-folder\"], { queryParams: { folderId: folder.id } });\n  }\n\n  addFolder() {\n    this.router.navigate([\"/add-folder\"]);\n  }\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n}\n","import { Observable } from \"rxjs\";\n\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport abstract class AbstractThemingService {\n  theme$: Observable<Theme>;\n  monitorThemeChanges: () => Promise<void>;\n  updateSystemTheme: (systemTheme: ThemeType) => void;\n  updateConfiguredTheme: (theme: ThemeType) => Promise<void>;\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"options\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showGeneral = !showGeneral\"\n        [attr.aria-expanded]=\"showGeneral\"\n      >\n        General\n        <i *ngIf=\"!showGeneral\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showGeneral\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showGeneral\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultUriMatch\">{{ \"defaultUriMatchDetection\" | i18n }}</label>\n          <select\n            id=\"defaultUriMatch\"\n            name=\"DefaultUriMatch\"\n            [(ngModel)]=\"defaultUriMatch\"\n            (change)=\"saveDefaultUriMatch()\"\n          >\n            <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultUriMatchDetectionDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\" *ngIf=\"showClearClipboard\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"clearClipboard\">{{ \"clearClipboard\" | i18n }}</label>\n          <select\n            id=\"clearClipboard\"\n            name=\"ClearClipboard\"\n            [(ngModel)]=\"clearClipboard\"\n            (change)=\"saveClearClipboard()\"\n          >\n            <option *ngFor=\"let o of clearClipboardOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"clearClipboardDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"totp\">{{ \"enableAutoTotpCopy\" | i18n }}</label>\n          <input\n            id=\"totp\"\n            type=\"checkbox\"\n            (change)=\"updateAutoTotpCopy()\"\n            [(ngModel)]=\"enableAutoTotpCopy\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableAutoTotpCopyDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"addlogin-notification-bar\">{{ \"enableAddLoginNotification\" | i18n }}</label>\n          <input\n            id=\"addlogin-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateAddLoginNotification()\"\n            [(ngModel)]=\"enableAddLoginNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"addLoginNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"changedpass-notification-bar\">{{\n            \"enableChangedPasswordNotification\" | i18n\n          }}</label>\n          <input\n            id=\"changedpass-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateChangedPasswordNotification()\"\n            [(ngModel)]=\"enableChangedPasswordNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"changedPasswordNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"context-menu\">{{ \"enableContextMenuItem\" | i18n }}</label>\n          <input\n            id=\"context-menu\"\n            type=\"checkbox\"\n            (change)=\"updateContextMenuItem()\"\n            [(ngModel)]=\"enableContextMenuItem\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"contextMenuItemDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showDisplay = !showDisplay\"\n        [attr.aria-expanded]=\"showDisplay\"\n      >\n        Display\n        <i *ngIf=\"!showDisplay\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showDisplay\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showDisplay\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"showCardsCurrentTab\">{{ \"showCardsCurrentTab\" | i18n }}</label>\n          <input\n            id=\"showCardsCurrentTab\"\n            type=\"checkbox\"\n            (change)=\"updateShowCardsCurrentTab()\"\n            [(ngModel)]=\"showCardsCurrentTab\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"showCardsCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"showIdentitiesCurrentTab\">{{ \"showIdentitiesCurrentTab\" | i18n }}</label>\n          <input\n            id=\"showIdentitiesCurrentTab\"\n            type=\"checkbox\"\n            (change)=\"updateShowIdentitiesCurrentTab()\"\n            [(ngModel)]=\"showIdentitiesCurrentTab\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"showIdentitiesCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favicon\">{{ \"enableFavicon\" | i18n }}</label>\n          <input\n            id=\"favicon\"\n            type=\"checkbox\"\n            (change)=\"updateFavicon()\"\n            [(ngModel)]=\"enableFavicon\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"faviconDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"badge\">{{ \"enableBadgeCounter\" | i18n }}</label>\n          <input\n            id=\"badge\"\n            type=\"checkbox\"\n            (change)=\"updateBadgeCounter()\"\n            [(ngModel)]=\"enableBadgeCounter\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"badgeCounterDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n          <select id=\"theme\" name=\"Theme\" [(ngModel)]=\"theme\" (change)=\"saveTheme()\">\n            <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"themeDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showAutofill = !showAutofill\"\n        [attr.aria-expanded]=\"showAutofill\"\n      >\n        Autofill\n        <i *ngIf=\"!showAutofill\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showAutofill\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showAutofill\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"autofill\">{{ \"enableAutoFillOnPageLoad\" | i18n }}</label>\n          <input\n            id=\"autofill\"\n            type=\"checkbox\"\n            (change)=\"updateAutoFillOnPageLoad()\"\n            [(ngModel)]=\"enableAutoFillOnPageLoad\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enableAutoFillOnPageLoadDesc\" | i18n }}\n        <b>{{ \"warning\" | i18n }}</b\n        >: {{ \"experimentalFeature\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultAutofill\">{{ \"defaultAutoFillOnPageLoad\" | i18n }}</label>\n          <select\n            id=\"defaultAutofill\"\n            name=\"DefaultAutofill\"\n            [(ngModel)]=\"autoFillOnPageLoadDefault\"\n            (change)=\"updateAutoFillOnPageLoadDefault()\"\n            [disabled]=\"!enableAutoFillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autoFillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultAutoFillOnPageLoadDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n</main>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\n\n@Component({\n  selector: \"app-options\",\n  templateUrl: \"options.component.html\",\n})\nexport class OptionsComponent implements OnInit {\n  enableFavicon = false;\n  enableBadgeCounter = false;\n  enableAutoFillOnPageLoad = false;\n  autoFillOnPageLoadDefault = false;\n  autoFillOnPageLoadOptions: any[];\n  enableAutoTotpCopy = false; // TODO: Does it matter if this is set to false or true?\n  enableContextMenuItem = false;\n  enableAddLoginNotification = false;\n  enableChangedPasswordNotification = false;\n  showCardsCurrentTab = false;\n  showIdentitiesCurrentTab = false;\n  showClearClipboard = true;\n  theme: ThemeType;\n  themeOptions: any[];\n  defaultUriMatch = UriMatchType.Domain;\n  uriMatchOptions: any[];\n  clearClipboard: number;\n  clearClipboardOptions: any[];\n  showGeneral = true;\n  showAutofill = true;\n  showDisplay = true;\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    i18nService: I18nService,\n    private themingService: AbstractThemingService\n  ) {\n    this.themeOptions = [\n      { name: i18nService.t(\"default\"), value: ThemeType.System },\n      { name: i18nService.t(\"light\"), value: ThemeType.Light },\n      { name: i18nService.t(\"dark\"), value: ThemeType.Dark },\n      { name: \"Nord\", value: ThemeType.Nord },\n      { name: i18nService.t(\"solarizedDark\"), value: ThemeType.SolarizedDark },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.clearClipboardOptions = [\n      { name: i18nService.t(\"never\"), value: null },\n      { name: i18nService.t(\"tenSeconds\"), value: 10 },\n      { name: i18nService.t(\"twentySeconds\"), value: 20 },\n      { name: i18nService.t(\"thirtySeconds\"), value: 30 },\n      { name: i18nService.t(\"oneMinute\"), value: 60 },\n      { name: i18nService.t(\"twoMinutes\"), value: 120 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 300 },\n    ];\n    this.autoFillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.enableAutoFillOnPageLoad = await this.stateService.getEnableAutoFillOnPageLoad();\n\n    this.autoFillOnPageLoadDefault =\n      (await this.stateService.getAutoFillOnPageLoadDefault()) ?? true;\n\n    this.enableAddLoginNotification = !(await this.stateService.getDisableAddLoginNotification());\n\n    this.enableChangedPasswordNotification =\n      !(await this.stateService.getDisableChangedPasswordNotification());\n\n    this.enableContextMenuItem = !(await this.stateService.getDisableContextMenuItem());\n\n    this.showCardsCurrentTab = !(await this.stateService.getDontShowCardsCurrentTab());\n    this.showIdentitiesCurrentTab = !(await this.stateService.getDontShowIdentitiesCurrentTab());\n\n    this.enableAutoTotpCopy = !(await this.stateService.getDisableAutoTotpCopy());\n\n    this.enableFavicon = !(await this.stateService.getDisableFavicon());\n\n    this.enableBadgeCounter = !(await this.stateService.getDisableBadgeCounter());\n\n    this.theme = await this.stateService.getTheme();\n\n    const defaultUriMatch = await this.stateService.getDefaultUriMatch();\n    this.defaultUriMatch = defaultUriMatch == null ? UriMatchType.Domain : defaultUriMatch;\n\n    this.clearClipboard = await this.stateService.getClearClipboard();\n  }\n\n  async updateAddLoginNotification() {\n    await this.stateService.setDisableAddLoginNotification(!this.enableAddLoginNotification);\n  }\n\n  async updateChangedPasswordNotification() {\n    await this.stateService.setDisableChangedPasswordNotification(\n      !this.enableChangedPasswordNotification\n    );\n  }\n\n  async updateContextMenuItem() {\n    await this.stateService.setDisableContextMenuItem(!this.enableContextMenuItem);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateAutoTotpCopy() {\n    await this.stateService.setDisableAutoTotpCopy(!this.enableAutoTotpCopy);\n  }\n\n  async updateAutoFillOnPageLoad() {\n    await this.stateService.setEnableAutoFillOnPageLoad(this.enableAutoFillOnPageLoad);\n  }\n\n  async updateAutoFillOnPageLoadDefault() {\n    await this.stateService.setAutoFillOnPageLoadDefault(this.autoFillOnPageLoadDefault);\n  }\n\n  async updateFavicon() {\n    await this.stateService.setDisableFavicon(!this.enableFavicon);\n  }\n\n  async updateBadgeCounter() {\n    await this.stateService.setDisableBadgeCounter(!this.enableBadgeCounter);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateShowCardsCurrentTab() {\n    await this.stateService.setDontShowCardsCurrentTab(!this.showCardsCurrentTab);\n  }\n\n  async updateShowIdentitiesCurrentTab() {\n    await this.stateService.setDontShowIdentitiesCurrentTab(!this.showIdentitiesCurrentTab);\n  }\n\n  async saveTheme() {\n    await this.themingService.updateConfiguredTheme(this.theme);\n  }\n\n  async saveDefaultUriMatch() {\n    await this.stateService.setDefaultUriMatch(this.defaultUriMatch);\n  }\n\n  async saveClearClipboard() {\n    await this.stateService.setClearClipboard(this.clearClipboard);\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Directive()\nexport class PremiumComponent implements OnInit {\n  isPremium = false;\n  price = 10;\n  refreshPromise: Promise<any>;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.isPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  async refresh() {\n    try {\n      this.refreshPromise = this.apiService.refreshIdentityToken();\n      await this.refreshPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"refreshComplete\"));\n      this.isPremium = await this.stateService.getCanAccessPremium();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async purchase() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumPurchaseAlert\"),\n      this.i18nService.t(\"premiumPurchase\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n    }\n  }\n\n  async manage() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumManageAlert\"),\n      this.i18nService.t(\"premiumManage\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=manage\");\n    }\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"goBack()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"premiumMembership\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"content\">\n    <ng-container *ngIf=\"!isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumNotCurrentMember\" | i18n }}</p>\n      <p>{{ \"premiumSignUpAndGet\" | i18n }}</p>\n      <ul class=\"bwi-ul\">\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpStorage\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTwoStep\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpReports\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTotp\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpSupport\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpFuture\" | i18n }}\n        </li>\n      </ul>\n      <p class=\"text-center lead\">{{ priceString }}</p>\n      <button type=\"button\" class=\"btn primary block\" (click)=\"purchase()\">\n        <b>{{ \"premiumPurchase\" | i18n }}</b>\n      </button>\n      <button\n        #refreshBtn\n        type=\"button\"\n        (click)=\"refresh()\"\n        [disabled]=\"refreshBtn.loading\"\n        [appApiAction]=\"refreshPromise\"\n        class=\"btn link block\"\n      >\n        <span [hidden]=\"refreshBtn.loading\">{{ \"premiumRefresh\" | i18n }}</span>\n        <i\n          class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n          [hidden]=\"!refreshBtn.loading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </ng-container>\n    <ng-container *ngIf=\"isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumCurrentMember\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"premiumCurrentMemberThanks\" | i18n }}</p>\n      <button type=\"button\" class=\"btn block primary\" (click)=\"manage()\">\n        <b>{{ \"premiumManage\" | i18n }}</b>\n      </button>\n    </ng-container>\n  </div>\n</main>\n","import { CurrencyPipe, Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PremiumComponent as BasePremiumComponent } from \"@bitwarden/angular/components/premium.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent extends BasePremiumComponent {\n  priceString: string;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    stateService: StateService,\n    logService: LogService,\n    private location: Location,\n    private currencyPipe: CurrencyPipe\n  ) {\n    super(i18nService, platformUtilsService, apiService, logService, stateService);\n\n    // Support old price string. Can be removed in future once all translations are properly updated.\n    const thePrice = this.currencyPipe.transform(this.price, \"$\");\n    this.priceString = i18nService.t(\"premiumPrice\", thePrice);\n    if (this.priceString.indexOf(\"%price%\") > -1) {\n      this.priceString = this.priceString.replace(\"%price%\", thePrice);\n    }\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals?: boolean;\n  replaceTopModal?: boolean;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  /**\n   * @deprecated Use `dialogService.open` (in web) or `modalService.open` (in desktop/browser) instead.\n   * If replacing an existing call to this method, also remove any `@ViewChild` and `<ng-template>` associated with the\n   * existing usage.\n   */\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config: ModalConfig = {}) {\n    const { replaceTopModal = false, allowMultipleModals = false } = config;\n\n    if (this.modalCount > 0 && replaceTopModal) {\n      this.topModal.instance.close();\n    }\n\n    if (this.modalCount > 0 && !allowMultipleModals) {\n      return;\n    }\n\n    const [modalRef] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  closeAll(): void {\n    this.modalList.forEach((modal) => modal.instance.close());\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n@Directive()\nexport class SetPinComponent implements OnInit {\n  pin = \"\";\n  showPin = false;\n  masterPassOnRestart = true;\n  showMasterPassOnRestart = true;\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showMasterPassOnRestart = this.masterPassOnRestart =\n      !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  toggleVisibility() {\n    this.showPin = !this.showPin;\n  }\n\n  async submit() {\n    if (Utils.isNullOrWhitespace(this.pin)) {\n      this.modalRef.close(false);\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n    const email = await this.stateService.getEmail();\n    const pinKey = await this.cryptoService.makePinKey(this.pin, email, kdf, kdfIterations);\n    const key = await this.cryptoService.getKey();\n    const pinProtectedKey = await this.cryptoService.encrypt(key.key, pinKey);\n    if (this.masterPassOnRestart) {\n      const encPin = await this.cryptoService.encrypt(this.pin);\n      await this.stateService.setProtectedPin(encPin.encryptedString);\n      await this.stateService.setDecryptedPinProtected(pinProtectedKey);\n    } else {\n      await this.stateService.setEncryptedPinProtected(pinProtectedKey.encryptedString);\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div>\n          {{ \"setYourPinCode\" | i18n }}\n        </div>\n        <div class=\"box\">\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex no-hover no-bg\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n                <input\n                  id=\"pin\"\n                  type=\"{{ showPin ? 'text' : 'password' }}\"\n                  name=\"Pin\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"pin\"\n                  required\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"toggleVisibility()\"\n                  [attr.aria-pressed]=\"showPin\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPin, 'bwi-eye-slash': showPin }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"checkbox\" *ngIf=\"showMasterPassOnRestart\">\n          <label for=\"masterPasswordOnRestart\">\n            <input\n              type=\"checkbox\"\n              id=\"masterPasswordOnRestart\"\n              name=\"MasterPasswordOnRestart\"\n              [(ngModel)]=\"masterPassOnRestart\"\n            />\n            <span>{{ \"lockWithMasterPassOnRestart\" | i18n }}</span>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { SetPinComponent as BaseSetPinComponent } from \"@bitwarden/angular/components/set-pin.component\";\n\n@Component({\n  templateUrl: \"set-pin.component.html\",\n})\nexport class SetPinComponent extends BaseSetPinComponent {}\n","import { Observable } from \"rxjs\";\n\nimport { ServerConfig } from \"./server-config\";\n\nexport abstract class ConfigServiceAbstraction {\n  serverConfig$: Observable<ServerConfig | null>;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-body\">\n        <p class=\"text-center\">\n          <i class=\"bwi bwi-shield bwi-3x\" aria-hidden=\"true\"></i>\n        </p>\n        <p class=\"text-center\">\n          <b>Bitwarden</b>\n        </p>\n        <p class=\"text-center\">&copy; Bitwarden Inc. 2015-{{ year }}</p>\n        <p class=\"text-center\">{{ \"version\" | i18n }}: {{ version }}</p>\n        <ng-container *ngIf=\"serverConfig$ | async as serverConfig\">\n          <p class=\"text-center\" *ngIf=\"isCloud\">\n            {{ \"serverVersion\" | i18n }}: {{ this.serverConfig?.version }}\n            <span *ngIf=\"!serverConfig.isValid()\">\n              ({{ \"lastSeenOn\" | i18n: (serverConfig.utcDate | date: \"mediumDate\") }})\n            </span>\n          </p>\n\n          <ng-container *ngIf=\"!isCloud\">\n            <ng-container *ngIf=\"serverConfig.server\">\n              <p class=\"text-center\">\n                {{ \"serverVersion\" | i18n }} <small>({{ \"thirdParty\" | i18n }})</small>:\n                {{ this.serverConfig?.version }}\n                <span *ngIf=\"!serverConfig.isValid()\">\n                  ({{ \"lastSeenOn\" | i18n: (serverConfig.utcDate | date: \"mediumDate\") }})\n                </span>\n              </p>\n              <div class=\"text-center\">\n                <small>{{ \"thirdPartyServerMessage\" | i18n: serverConfig.server?.name }}</small>\n              </div>\n            </ng-container>\n\n            <p class=\"text-center\" *ngIf=\"!serverConfig.server\">\n              {{ \"serverVersion\" | i18n }} <small>({{ \"selfHosted\" | i18n }})</small>:\n              {{ this.serverConfig?.version }}\n              <span *ngIf=\"!serverConfig.isValid()\">\n                ({{ \"lastSeenOn\" | i18n: (serverConfig.utcDate | date: \"mediumDate\") }})\n              </span>\n            </p>\n          </ng-container>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { ConfigServiceAbstraction } from \"@bitwarden/common/abstractions/config/config.service.abstraction\";\nimport { ServerConfig } from \"@bitwarden/common/abstractions/config/server-config\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Component({\n  selector: \"app-about\",\n  templateUrl: \"about.component.html\",\n})\nexport class AboutComponent {\n  serverConfig$: Observable<ServerConfig>;\n\n  year = new Date().getFullYear();\n  version = BrowserApi.getApplicationVersion();\n  isCloud: boolean;\n\n  constructor(configService: ConfigServiceAbstraction, environmentService: EnvironmentService) {\n    this.serverConfig$ = configService.serverConfig$;\n    this.isCloud = environmentService.isCloud();\n  }\n}\n","import { Directive, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\nimport { combineLatestWith, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent\n  implements ControlValueAccessor, Validator, OnInit, OnDestroy\n{\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.MaximumVaultTimeout)\n      .pipe(combineLatestWith(this.policyService.policies$), takeUntil(this.destroy$))\n      .subscribe(([policyAppliesToActiveUser, policies]) => {\n        if (policyAppliesToActiveUser) {\n          const vaultTimeoutPolicy = policies.find(\n            (policy) => policy.type === PolicyType.MaximumVaultTimeout && policy.enabled\n          );\n\n          this.vaultTimeoutPolicy = vaultTimeoutPolicy;\n          this.applyVaultTimeoutPolicy();\n        }\n      });\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.value.custom.hours * 60 + this.form.value.custom.minutes;\n  }\n\n  private applyVaultTimeoutPolicy() {\n    this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n    this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n    this.vaultTimeouts = this.vaultTimeouts.filter(\n      (t) =>\n        t.value <= this.vaultTimeoutPolicy.data.minutes &&\n        (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n        t.value != null\n    );\n    this.validatorChange();\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"box-content-row last display-block\" appBoxRow>\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n  </div>\n  <div class=\"box-content-row last\" *ngIf=\"showCustom\">\n    <div formGroupName=\"custom\" class=\"row\">\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"hours\" | i18n }}</label>\n          <input\n            id=\"hours\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            name=\"hours\"\n            formControlName=\"hours\"\n          />\n        </div>\n      </div>\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"minutes\" | i18n }}</label>\n          <input\n            id=\"minutes\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            max=\"59\"\n            name=\"minutes\"\n            formControlName=\"minutes\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"@bitwarden/angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"settings\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"manage\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        routerLink=\"/folders\"\n      >\n        <div class=\"row-main\">{{ \"folders\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        routerLink=\"/sync\"\n      >\n        <div class=\"row-main\">{{ \"sync\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        routerLink=\"/excluded-domains\"\n      >\n        <div class=\"row-main\">{{ \"excludedDomains\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"security\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n      <div class=\"box-content-row display-block\" appBoxRow>\n        <label for=\"vaultTimeoutAction\">{{ \"vaultTimeoutAction\" | i18n }}</label>\n        <select\n          #vaultTimeoutActionSelect\n          id=\"vaultTimeoutAction\"\n          name=\"VaultTimeoutActions\"\n          [ngModel]=\"vaultTimeoutAction\"\n          (ngModelChange)=\"saveVaultTimeoutAction($event)\"\n        >\n          <option *ngFor=\"let o of vaultTimeoutActions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n        <label for=\"pin\">{{ \"unlockWithPin\" | i18n }}</label>\n        <input id=\"pin\" type=\"checkbox\" (change)=\"updatePin()\" [(ngModel)]=\"pin\" />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"supportsBiometric\">\n        <label for=\"biometric\">{{ \"unlockWithBiometrics\" | i18n }}</label>\n        <input\n          id=\"biometric\"\n          type=\"checkbox\"\n          (change)=\"updateBiometric()\"\n          [(ngModel)]=\"biometric\"\n        />\n      </div>\n      <div\n        class=\"box-content-row box-content-row-checkbox\"\n        appBoxRow\n        *ngIf=\"supportsBiometric && biometric\"\n      >\n        <label for=\"autoBiometricsPrompt\">{{ \"enableAutoBiometricsPrompt\" | i18n }}</label>\n        <input\n          id=\"autoBiometricsPrompt\"\n          type=\"checkbox\"\n          (change)=\"updateAutoBiometricsPrompt()\"\n          [disabled]=\"!biometric\"\n          [(ngModel)]=\"enableAutoBiometricsPrompt\"\n        />\n      </div>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"lock()\"\n      >\n        <div class=\"row-main\">{{ \"lockNow\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"twoStep()\"\n      >\n        <div class=\"row-main\">{{ \"twoStepLogin\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"account\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button type=\"button\" class=\"box-content-row\" routerLink=\"/premium\">\n        <div class=\"row-main\">\n          <div class=\"icon text-primary\">\n            <i class=\"bwi bwi-fw bwi-lg bwi-star-f\" aria-hidden=\"true\"></i>\n          </div>\n          <span class=\"text text-primary\"\n            ><b>{{ \"premiumMembership\" | i18n }}</b></span\n          >\n        </div>\n        <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"changePassword()\"\n        *ngIf=\"showChangeMasterPass\"\n      >\n        <div class=\"row-main\">{{ \"changeMasterPassword\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"fingerprint()\"\n      >\n        <div class=\"row-main\">{{ \"fingerprintPhrase\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"logOut()\"\n      >\n        <div class=\"row-main\">{{ \"logOut\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"tools\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"import()\"\n      >\n        <div class=\"row-main\">{{ \"importItems\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"export()\"\n      >\n        <div class=\"row-main\">{{ \"exportVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"webVault()\"\n      >\n        <div class=\"row-main\">{{ \"bitWebVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"other\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        routerLink=\"/options\"\n      >\n        <div class=\"row-main\">{{ \"options\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"about()\"\n      >\n        <div class=\"row-main\">{{ \"about\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"share()\"\n      >\n        <div class=\"row-main\">{{ \"learnOrg\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"help()\"\n      >\n        <div class=\"row-main\">{{ \"helpFeedback\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"rate()\"\n      >\n        <div class=\"row-main\">{{ \"rateExtension\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div class=\"box-footer\">{{ \"rateExtensionDesc\" | i18n }}</div>\n  </div>\n</main>\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { UntypedFormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport Swal from \"sweetalert2\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { BiometricErrors, BiometricErrorTypes } from \"../../models/biometricErrors\";\nimport { SetPinComponent } from \"../components/set-pin.component\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nimport { AboutComponent } from \"./about.component\";\n\nconst RateUrls = {\n  [DeviceType.ChromeExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.FirefoxExtension]:\n    \"https://addons.mozilla.org/en-US/firefox/addon/bitwarden-password-manager/#reviews\",\n  [DeviceType.OperaExtension]:\n    \"https://addons.opera.com/en/extensions/details/bitwarden-free-password-manager/#feedback-container\",\n  [DeviceType.EdgeExtension]:\n    \"https://microsoftedge.microsoft.com/addons/detail/jbkfoedolllekgbhcbcoahefnbanhhlh\",\n  [DeviceType.VivaldiExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.SafariExtension]: \"https://apps.apple.com/app/bitwarden/id1352778147\",\n};\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SettingsComponent implements OnInit {\n  @ViewChild(\"vaultTimeoutActionSelect\", { read: ElementRef, static: true })\n  vaultTimeoutActionSelectRef: ElementRef;\n  vaultTimeouts: any[];\n  vaultTimeoutActions: any[];\n  vaultTimeoutAction: string;\n  pin: boolean = null;\n  supportsBiometric: boolean;\n  biometric = false;\n  enableAutoBiometricsPrompt = true;\n  previousVaultTimeout: number = null;\n  showChangeMasterPass = true;\n\n  vaultTimeout: UntypedFormControl = new UntypedFormControl(null);\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    public messagingService: MessagingService,\n    private router: Router,\n    private environmentService: EnvironmentService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private popupUtilsService: PopupUtilsService,\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    const showOnLocked =\n      !this.platformUtilsService.isFirefox() && !this.platformUtilsService.isSafari();\n\n    this.vaultTimeouts = [\n      { name: this.i18nService.t(\"immediately\"), value: 0 },\n      { name: this.i18nService.t(\"oneMinute\"), value: 1 },\n      { name: this.i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: this.i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: this.i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: this.i18nService.t(\"oneHour\"), value: 60 },\n      { name: this.i18nService.t(\"fourHours\"), value: 240 },\n      // { name: i18nService.t('onIdle'), value: -4 },\n      // { name: i18nService.t('onSleep'), value: -3 },\n    ];\n\n    if (showOnLocked) {\n      this.vaultTimeouts.push({ name: this.i18nService.t(\"onLocked\"), value: -2 });\n    }\n\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"onRestart\"), value: -1 });\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"never\"), value: null });\n\n    this.vaultTimeoutActions = [\n      { name: this.i18nService.t(\"lock\"), value: \"lock\" },\n      { name: this.i18nService.t(\"logOut\"), value: \"logOut\" },\n    ];\n\n    let timeout = await this.vaultTimeoutSettingsService.getVaultTimeout();\n    if (timeout != null) {\n      if (timeout === -2 && !showOnLocked) {\n        timeout = -1;\n      }\n      this.vaultTimeout.setValue(timeout);\n    }\n    this.previousVaultTimeout = this.vaultTimeout.value;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.vaultTimeout.valueChanges.subscribe(async (value) => {\n      await this.saveVaultTimeout(value);\n    });\n\n    const action = await this.stateService.getVaultTimeoutAction();\n    this.vaultTimeoutAction = action == null ? \"lock\" : action;\n\n    const pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n    this.pin = pinSet[0] || pinSet[1];\n\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometric = await this.vaultTimeoutSettingsService.isBiometricLockSet();\n    this.enableAutoBiometricsPrompt = !(await this.stateService.getDisableAutoBiometricsPrompt());\n    this.showChangeMasterPass = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async saveVaultTimeout(newValue: number) {\n    if (newValue == null) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"neverLockWarning\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeout.setValue(this.previousVaultTimeout);\n        return;\n      }\n    }\n\n    // The minTimeoutError does not apply to browser because it supports Immediately\n    // So only check for the policyError\n    if (this.vaultTimeout.hasError(\"policyError\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutTooLarge\")\n      );\n      return;\n    }\n\n    this.previousVaultTimeout = this.vaultTimeout.value;\n\n    await this.vaultTimeoutSettingsService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    if (this.previousVaultTimeout == null) {\n      this.messagingService.send(\"bgReseedStorage\");\n    }\n  }\n\n  async saveVaultTimeoutAction(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutActions.forEach((option: any, i) => {\n          if (option.value === this.vaultTimeoutAction) {\n            this.vaultTimeoutActionSelectRef.nativeElement.value =\n              i + \": \" + this.vaultTimeoutAction;\n          }\n        });\n        return;\n      }\n    }\n\n    if (this.vaultTimeout.hasError(\"policyError\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutTooLarge\")\n      );\n      return;\n    }\n\n    this.vaultTimeoutAction = newValue;\n    await this.vaultTimeoutSettingsService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n  }\n\n  async updatePin() {\n    if (this.pin) {\n      const ref = this.modalService.open(SetPinComponent, { allowMultipleModals: true });\n\n      if (ref == null) {\n        this.pin = false;\n        return;\n      }\n\n      this.pin = await ref.onClosedPromise();\n    } else {\n      await this.cryptoService.clearPinProtectedKey();\n      await this.vaultTimeoutSettingsService.clear();\n    }\n  }\n\n  async updateBiometric() {\n    if (this.biometric && this.supportsBiometric) {\n      let granted;\n      try {\n        granted = await BrowserApi.requestPermission({ permissions: [\"nativeMessaging\"] });\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n\n        if (this.platformUtilsService.isFirefox() && this.popupUtilsService.inSidebar(window)) {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(\"nativeMessaginPermissionSidebarDesc\"),\n            this.i18nService.t(\"nativeMessaginPermissionSidebarTitle\"),\n            this.i18nService.t(\"ok\"),\n            null\n          );\n          this.biometric = false;\n          return;\n        }\n      }\n\n      if (!granted) {\n        await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"nativeMessaginPermissionErrorDesc\"),\n          this.i18nService.t(\"nativeMessaginPermissionErrorTitle\"),\n          this.i18nService.t(\"ok\"),\n          null\n        );\n        this.biometric = false;\n        return;\n      }\n\n      const submitted = Swal.fire({\n        heightAuto: false,\n        buttonsStyling: false,\n        titleText: this.i18nService.t(\"awaitDesktop\"),\n        text: this.i18nService.t(\"awaitDesktopDesc\"),\n        icon: \"info\",\n        iconHtml: '<i class=\"swal-custom-icon bwi bwi-info-circle text-info\"></i>',\n        showCancelButton: true,\n        cancelButtonText: this.i18nService.t(\"cancel\"),\n        showConfirmButton: false,\n        allowOutsideClick: false,\n      });\n\n      await this.stateService.setBiometricAwaitingAcceptance(true);\n      await this.cryptoService.toggleKey();\n\n      await Promise.race([\n        submitted.then(async (result) => {\n          if (result.dismiss === Swal.DismissReason.cancel) {\n            this.biometric = false;\n            await this.stateService.setBiometricAwaitingAcceptance(null);\n          }\n        }),\n        this.platformUtilsService\n          .authenticateBiometric()\n          .then((result) => {\n            this.biometric = result;\n\n            Swal.close();\n            if (this.biometric === false) {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorEnableBiometricTitle\"),\n                this.i18nService.t(\"errorEnableBiometricDesc\")\n              );\n            }\n          })\n          .catch((e) => {\n            // Handle connection errors\n            this.biometric = false;\n\n            const error = BiometricErrors[e as BiometricErrorTypes];\n\n            this.platformUtilsService.showDialog(\n              this.i18nService.t(error.description),\n              this.i18nService.t(error.title),\n              this.i18nService.t(\"ok\"),\n              null,\n              \"error\"\n            );\n          }),\n      ]);\n    } else {\n      await this.stateService.setBiometricUnlock(null);\n      await this.stateService.setBiometricFingerprintValidated(false);\n    }\n  }\n\n  async updateAutoBiometricsPrompt() {\n    await this.stateService.setDisableAutoBiometricsPrompt(!this.enableAutoBiometricsPrompt);\n  }\n\n  async lock() {\n    await this.vaultTimeoutService.lock();\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async changePassword() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"changeMasterPasswordConfirmation\"),\n      this.i18nService.t(\"changeMasterPassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\n        \"https://bitwarden.com/help/master-password/#change-your-master-password\"\n      );\n    }\n  }\n\n  async twoStep() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepLoginConfirmation\"),\n      this.i18nService.t(\"twoStepLogin\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/setup-two-step-login/\");\n    }\n  }\n\n  async share() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"learnOrgConfirmation\"),\n      this.i18nService.t(\"learnOrg\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/about-organizations/\");\n    }\n  }\n\n  async webVault() {\n    const url = this.environmentService.getWebVaultUrl();\n    BrowserApi.createNewTab(url);\n  }\n\n  import() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/import-data/\");\n  }\n\n  export() {\n    this.router.navigate([\"/export\"]);\n  }\n\n  help() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/\");\n  }\n\n  about() {\n    this.modalService.open(AboutComponent);\n  }\n\n  async fingerprint() {\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    const p = document.createElement(\"p\");\n    p.innerText = this.i18nService.t(\"yourAccountsFingerprint\") + \":\";\n    const p2 = document.createElement(\"p\");\n    p2.innerText = fingerprint.join(\"-\");\n    const div = document.createElement(\"div\");\n    div.appendChild(p);\n    div.appendChild(p2);\n\n    const result = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"close\"),\n      showConfirmButton: true,\n      confirmButtonText: this.i18nService.t(\"learnMore\"),\n    });\n\n    if (result.value) {\n      this.platformUtilsService.launchUri(\"https://bitwarden.com/help/fingerprint-phrase/\");\n    }\n  }\n\n  rate() {\n    const deviceType = this.platformUtilsService.getDevice();\n    BrowserApi.createNewTab((RateUrls as any)[deviceType]);\n  }\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-sync\",\n  templateUrl: \"sync.component.html\",\n})\nexport class SyncComponent implements OnInit {\n  lastSync = \"--\";\n  syncPromise: Promise<any>;\n\n  constructor(\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    await this.setLastSync();\n  }\n\n  async sync() {\n    this.syncPromise = this.syncService.fullSync(true);\n    const success = await this.syncPromise;\n    if (success) {\n      await this.setLastSync();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"syncingComplete\"));\n    } else {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"syncingFailed\"));\n    }\n  }\n\n  async setLastSync() {\n    const last = await this.syncService.getLastSync();\n    if (last != null) {\n      this.lastSync = last.toLocaleDateString() + \" \" + last.toLocaleTimeString();\n    } else {\n      this.lastSync = this.i18nService.t(\"never\");\n    }\n  }\n}\n","<div class=\"tab-page\">\n  <router-outlet></router-outlet>\n  <nav class=\"tabs\">\n    <ul>\n      <li routerLinkActive=\"active\" #rlaCurrentTab=\"routerLinkActive\" *ngIf=\"showCurrentTab\">\n        <button\n          type=\"button\"\n          routerLink=\"current\"\n          appA11yTitle=\"{{ 'currentTab' | i18n }}\"\n          [attr.aria-pressed]=\"rlaCurrentTab.isActive\"\n        >\n          <i class=\"bwi bwi-folder-closed-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"tab\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaMyVault=\"routerLinkActive\">\n        <button\n          type=\"button\"\n          routerLink=\"vault\"\n          appA11yTitle=\"{{ 'myVault' | i18n }}\"\n          [attr.aria-pressed]=\"rlaMyVault.isActive\"\n        >\n          <i class=\"bwi bwi-lock-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"vault\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaSend=\"routerLinkActive\">\n        <button\n          type=\"button\"\n          routerLink=\"send\"\n          appA11yTitle=\"{{ 'send' | i18n }}\"\n          [attr.aria-pressed]=\"rlaSend.isActive\"\n        >\n          <i class=\"bwi bwi-send-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"send\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaGenerator=\"routerLinkActive\">\n        <button\n          type=\"button\"\n          routerLink=\"generator\"\n          appA11yTitle=\"{{ 'passGen' | i18n }}\"\n          [attr.aria-pressed]=\"rlaGenerator.isActive\"\n        >\n          <i class=\"bwi bwi-generate-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"generator\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaSettings=\"routerLinkActive\">\n        <button\n          type=\"button\"\n          routerLink=\"settings\"\n          appA11yTitle=\"{{ 'settings' | i18n }}\"\n          [attr.aria-pressed]=\"rlaSettings.isActive\"\n        >\n          <i class=\"bwi bwi-cog-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"settings\" | i18n }}\n        </button>\n      </li>\n    </ul>\n  </nav>\n</div>\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"sync\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"content center-content\">\n    <button\n      type=\"button\"\n      class=\"btn block primary\"\n      (click)=\"sync()\"\n      #syncBtn\n      [disabled]=\"syncBtn.loading\"\n      [appApiAction]=\"syncPromise\"\n    >\n      <span [hidden]=\"syncBtn.loading\">{{ \"syncVaultNow\" | i18n }}</span>\n      <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!syncBtn.loading\" aria-hidden=\"true\"></i>\n    </button>\n    <p class=\"text-center text-muted small\">{{ \"lastSync\" | i18n }} {{ lastSync }}</p>\n  </div>\n</main>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"./services/popup-utils.service\";\n\n@Component({\n  selector: \"app-tabs\",\n  templateUrl: \"tabs.component.html\",\n})\nexport class TabsComponent implements OnInit {\n  showCurrentTab = true;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showCurrentTab = !this.popupUtilsService.inPopout(window);\n  }\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/item.view\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","export enum InitializerKey {\n  Cipher = 0,\n  CipherView = 1,\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetric-crypto-key\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/login-uri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./item.view\";\nimport { LoginUriView } from \"./login-uri.view\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUriView.fromJSON(uri));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secure-note\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { InitializerKey } from \"../../services/cryptography/initializer-key\";\nimport { LocalData } from \"../data/local.data\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachment.view\";\nimport { CardView } from \"./card.view\";\nimport { FieldView } from \"./field.view\";\nimport { IdentityView } from \"./identity.view\";\nimport { LoginView } from \"./login.view\";\nimport { PasswordHistoryView } from \"./password-history.view\";\nimport { SecureNoteView } from \"./secure-note.view\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View, InitializerMetadata {\n  readonly initializerKey = InitializerKey.CipherView;\n\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: LocalData;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  creationDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.creationDate = c.creationDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CipherView>>): CipherView {\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { FieldView } from \"../models/view/field.view\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  createWithServer: (cipher: Cipher) => Promise<any>;\n  updateWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { BreachAccountResponse } from \"../models/response/breach-account.response\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { CollectionData } from \"../models/data/collection.data\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/tree-node\";\nimport { CollectionView } from \"../models/view/collection.view\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Observable, Subject, takeUntil, concatMap } from \"rxjs\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SecureNoteType } from \"@bitwarden/common/enums/secureNoteType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CardView } from \"@bitwarden/common/models/view/card.view\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\nimport { IdentityView } from \"@bitwarden/common/models/view/identity.view\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\nimport { LoginView } from \"@bitwarden/common/models/view/login.view\";\nimport { SecureNoteView } from \"@bitwarden/common/models/view/secure-note.view\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders$: Observable<FolderView[]>;\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n\n  protected destroy$ = new Subject<void>();\n  protected writeableCollections: CollectionView[];\n  private personalOwnershipPolicyAppliesToActiveUser: boolean;\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"cardBrandMir\"), value: \"Mir\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.PersonalOwnership)\n      .pipe(\n        concatMap(async (policyAppliesToActiveUser) => {\n          this.personalOwnershipPolicyAppliesToActiveUser = policyAppliesToActiveUser;\n          await this.init();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (this.personalOwnershipPolicyAppliesToActiveUser) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders$ = this.folderService.folderViews$;\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  getCardExpMonthDisplay() {\n    return this.cardExpMonthOptions.find((x) => x.value == this.cipher.card.expMonth)?.name;\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipher.id == null\n      ? this.cipherService.createWithServer(cipher)\n      : this.cipherService.updateWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { FieldView } from \"@bitwarden/common/models/view/field.view\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<div class=\"box\">\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <!-- Current custom fields -->\n    <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n      <div\n        role=\"group\"\n        class=\"box-content-row box-content-row-multi box-draggable-row\"\n        appBoxRow\n        cdkDrag\n        *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n        [ngClass]=\"{ 'box-content-row-checkbox': f.type === fieldType.Boolean }\"\n        attr.aria-label=\"{{ f.name }}\"\n      >\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"removeField(f)\"\n          appA11yTitle=\"{{ 'remove' | i18n }}\"\n          *ngIf=\"!(!cipher.edit && editMode)\"\n        >\n          <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <label for=\"fieldName{{ i }}\" class=\"sr-only\">{{ \"name\" | i18n }}</label>\n        <label for=\"fieldValue{{ i }}\" class=\"sr-only\">{{ \"value\" | i18n }}</label>\n        <div class=\"row-main\">\n          <input\n            id=\"fieldName{{ i }}\"\n            type=\"text\"\n            name=\"Field.Name{{ i }}\"\n            [(ngModel)]=\"f.name\"\n            class=\"row-label\"\n            placeholder=\"{{ 'name' | i18n }}\"\n            appInputVerbatim\n            [readonly]=\"!cipher.edit && editMode\"\n          />\n          <!-- Text -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"text\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            *ngIf=\"f.type === fieldType.Text\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            appInputVerbatim\n            attr.aria-describedby=\"fieldName{{ i }}\"\n            [readonly]=\"!cipher.edit && editMode\"\n          />\n          <!-- Hidden -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"{{ f.showValue ? 'text' : 'password' }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            class=\"monospaced\"\n            appInputVerbatim\n            *ngIf=\"f.type === fieldType.Hidden\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            [disabled]=\"!cipher.viewPassword && !f.newField\"\n            attr.aria-describedby=\"fieldName{{ i }}\"\n            [readonly]=\"!cipher.edit && editMode\"\n          />\n          <!-- Linked -->\n          <select\n            id=\"fieldValue{{ i }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.linkedId\"\n            *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n            attr.aria-describedby=\"fieldName{{ i }}\"\n          >\n            <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <!-- Boolean -->\n        <input\n          id=\"fieldValue{{ i }}\"\n          name=\"Field.Value{{ i }}\"\n          type=\"checkbox\"\n          [(ngModel)]=\"f.value\"\n          *ngIf=\"f.type === fieldType.Boolean\"\n          appTrueFalseValue\n          trueValue=\"true\"\n          falseValue=\"false\"\n          attr.aria-describedby=\"fieldName{{ i }}\"\n          [readonly]=\"!cipher.edit && editMode\"\n        />\n        <div\n          class=\"action-buttons\"\n          *ngIf=\"f.type === fieldType.Hidden && (cipher.viewPassword || f.newField)\"\n        >\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n            (click)=\"toggleFieldValue(f)\"\n            [attr.aria-pressed]=\"f.showValue\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n            ></i>\n          </button>\n        </div>\n        <div\n          class=\"drag-handle\"\n          appA11yTitle=\"{{ 'dragToSort' | i18n }}\"\n          *ngIf=\"!(!cipher.edit && editMode)\"\n          cdkDragHandle\n        >\n          <i class=\"bwi bwi-hamburger\" aria-hidden=\"true\"></i>\n        </div>\n      </div>\n    </div>\n    <!-- Add new custom field -->\n    <div\n      class=\"box-content-row box-content-row-newmulti\"\n      *ngIf=\"!(!cipher.edit && editMode)\"\n      appBoxRow\n    >\n      <button type=\"button\" appStopClick (click)=\"addField()\">\n        <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i>\n        {{ \"newCustomField\" | i18n }}\n      </button>\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\" class=\"field-type\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"@bitwarden/angular/components/add-edit-custom-fields.component\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"cipher\">\n    <app-callout type=\"info\" *ngIf=\"allowOwnershipOptions() && !allowPersonal\">\n      {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n    </app-callout>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"itemInformation\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"type\">{{ \"type\" | i18n }}</label>\n          <select id=\"type\" name=\"Type\" [(ngModel)]=\"cipher.type\">\n            <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"cipher.name\"\n            [readonly]=\"!cipher.edit && editMode\"\n          />\n        </div>\n        <!-- Login -->\n        <div *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"loginUsername\"\n                type=\"text\"\n                name=\"Login.Username\"\n                [(ngModel)]=\"cipher.login.username\"\n                inputmode=\"email\"\n                appInputVerbatim\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'generateUsername' | i18n }}\"\n                (click)=\"generateUsername()\"\n                *ngIf=\"!(!cipher.edit && editMode)\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"loginPassword\"\n                class=\"monospaced\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Login.Password\"\n                [(ngModel)]=\"cipher.login.password\"\n                appInputVerbatim\n                [disabled]=\"!cipher.viewPassword\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                #checkPasswordBtn\n                class=\"row-btn btn\"\n                appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                (click)=\"checkPassword()\"\n                [appApiAction]=\"checkPasswordPromise\"\n                [disabled]=\"checkPasswordBtn.loading\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg bwi-check-circle\"\n                  [hidden]=\"checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                <i\n                  class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                  [hidden]=\"!checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                (click)=\"generatePassword()\"\n                *ngIf=\"cipher.viewPassword && !(!cipher.edit && editMode)\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n            <input\n              id=\"loginTotp\"\n              type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n              name=\"Login.Totp\"\n              class=\"monospaced\"\n              [(ngModel)]=\"cipher.login.totp\"\n              appInputVerbatim\n              [disabled]=\"!cipher.viewPassword\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n        </div>\n        <!-- Card -->\n        <div *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n            <input\n              id=\"cardCardholderName\"\n              type=\"text\"\n              name=\"Card.CardCardholderName\"\n              [(ngModel)]=\"cipher.card.cardholderName\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <input\n                id=\"cardNumber\"\n                class=\"monospaced\"\n                type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                name=\"Card.Number\"\n                [(ngModel)]=\"cipher.card.number\"\n                appInputVerbatim\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardNumber()\"\n                [attr.aria-pressed]=\"showCardNumber\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n            <span *ngIf=\"!(!cipher.edit && editMode); else readonlyCardBrand\">\n              <select id=\"cardBrand\" name=\"Card.Brand\" [(ngModel)]=\"cipher.card.brand\">\n                <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </span>\n            <ng-template #readonlyCardBrand>\n              <input\n                id=\"cardBrand\"\n                name=\"Card.Brand\"\n                type=\"text\"\n                [readonly]=\"true\"\n                [value]=\"cipher.card.brand\"\n              />\n            </ng-template>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n            <span *ngIf=\"!(!cipher.edit && editMode); else readonlyCardExpMonth\">\n              <select id=\"cardExpMonth\" name=\"Card.ExpMonth\" [(ngModel)]=\"cipher.card.expMonth\">\n                <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </span>\n            <ng-template #readonlyCardExpMonth>\n              <input\n                id=\"cardExpMonth\"\n                name=\"Card.ExpMonth\"\n                type=\"text\"\n                [readonly]=\"true\"\n                [value]=\"getCardExpMonthDisplay()\"\n              />\n            </ng-template>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n            <input\n              id=\"cardExpYear\"\n              type=\"text\"\n              name=\"Card.ExpYear\"\n              [(ngModel)]=\"cipher.card.expYear\"\n              placeholder=\"{{ 'ex' | i18n }} {{ currentDate | date: 'yyyy' }}\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <input\n                id=\"cardCode\"\n                class=\"monospaced\"\n                type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                name=\"Card.Code\"\n                [(ngModel)]=\"cipher.card.code\"\n                appInputVerbatim\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardCode()\"\n                [attr.aria-pressed]=\"showCardCode\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <!-- Identity -->\n        <div *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n            <span *ngIf=\"!(!cipher.edit && editMode); else readonlyIdTitle\">\n              <select id=\"idTitle\" name=\"Identity.Title\" [(ngModel)]=\"cipher.identity.title\">\n                <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </span>\n            <ng-template #readonlyIdTitle>\n              <input\n                id=\"idTitle\"\n                name=\"Identity.Title\"\n                type=\"text\"\n                [readonly]=\"true\"\n                [value]=\"cipher.identity.title\"\n              />\n            </ng-template>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n            <input\n              id=\"idFirstName\"\n              type=\"text\"\n              name=\"Identity.FirstName\"\n              [(ngModel)]=\"cipher.identity.firstName\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n            <input\n              id=\"idMiddleName\"\n              type=\"text\"\n              name=\"Identity.MiddleName\"\n              [(ngModel)]=\"cipher.identity.middleName\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n            <input\n              id=\"idLastName\"\n              type=\"text\"\n              name=\"Identity.LastName\"\n              [(ngModel)]=\"cipher.identity.lastName\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n            <input\n              id=\"idUsername\"\n              type=\"text\"\n              name=\"Identity.Username\"\n              [(ngModel)]=\"cipher.identity.username\"\n              appInputVerbatim\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n            <input\n              id=\"idCompany\"\n              type=\"text\"\n              name=\"Identity.Company\"\n              [(ngModel)]=\"cipher.identity.company\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n            <input\n              id=\"idSsn\"\n              type=\"text\"\n              name=\"Identity.SSN\"\n              [(ngModel)]=\"cipher.identity.ssn\"\n              appInputVerbatim\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n            <input\n              id=\"idPassportNumber\"\n              type=\"text\"\n              name=\"Identity.PassportNumber\"\n              [(ngModel)]=\"cipher.identity.passportNumber\"\n              appInputVerbatim\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n            <input\n              id=\"idLicenseNumber\"\n              type=\"text\"\n              name=\"Identity.LicenseNumber\"\n              [(ngModel)]=\"cipher.identity.licenseNumber\"\n              appInputVerbatim\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"idEmail\"\n              type=\"text\"\n              name=\"Identity.Email\"\n              [(ngModel)]=\"cipher.identity.email\"\n              appInputVerbatim\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n            <input\n              id=\"idPhone\"\n              type=\"text\"\n              name=\"Identity.Phone\"\n              [(ngModel)]=\"cipher.identity.phone\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n            <input\n              id=\"idAddress1\"\n              type=\"text\"\n              name=\"Identity.Address1\"\n              [(ngModel)]=\"cipher.identity.address1\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n            <input\n              id=\"idAddress2\"\n              type=\"text\"\n              name=\"Identity.Address2\"\n              [(ngModel)]=\"cipher.identity.address2\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n            <input\n              id=\"idAddress3\"\n              type=\"text\"\n              name=\"Identity.Address3\"\n              [(ngModel)]=\"cipher.identity.address3\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n            <input\n              id=\"idCity\"\n              type=\"text\"\n              name=\"Identity.City\"\n              [(ngModel)]=\"cipher.identity.city\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n            <input\n              id=\"idState\"\n              type=\"text\"\n              name=\"Identity.State\"\n              [(ngModel)]=\"cipher.identity.state\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n            <input\n              id=\"idPostalCode\"\n              type=\"text\"\n              name=\"Identity.PostalCode\"\n              [(ngModel)]=\"cipher.identity.postalCode\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n            <input\n              id=\"idCountry\"\n              type=\"text\"\n              name=\"Identity.Country\"\n              [(ngModel)]=\"cipher.identity.country\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"cipher.type === cipherType.Login\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"cipher.login.hasUris\">\n          <div\n            role=\"group\"\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n            attr.aria-label=\"{{ 'uriPosition' | i18n: i + 1 }}\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(u)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"loginUri{{ i }}\"\n                type=\"text\"\n                name=\"Login.Uris[{{ i }}].Uri\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"u.showUriOptionsInput === true\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"Login.Uris[{{ i }}].CurrentUris\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"!u.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"matchDetection\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                id=\"loginUriMatch{{ i }}\"\n                name=\"Login.Uris[{{ i }}].Match\"\n                [(ngModel)]=\"u.match\"\n                [hidden]=\"u.showOptions === false || (u.showOptions == null && u.match == null)\"\n                (change)=\"loginUriMatchChanged(u)\"\n              >\n                <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(u)\"\n                [attr.aria-pressed]=\"u.showCurrentUris === true\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleOptions' | i18n }}\"\n                (click)=\"toggleUriOptions(u)\"\n                [attr.aria-pressed]=\"u.showOptions === true\"\n              >\n                <i class=\"bwi bwi-lg bwi-cog\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti single-line\"\n          *ngIf=\"!(!cipher.edit && editMode)\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"showAutoFillOnPageLoadOptions\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"autofillOnPageLoad\">{{ \"itemAutoFillOnPageLoad\" | i18n }} </label>\n          <select\n            id=\"autofillOnPageLoad\"\n            name=\"AutofillOnPageLoad\"\n            [(ngModel)]=\"cipher.login.autofillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autofillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"cipher.folderId\">\n            <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favorite\">{{ \"favorite\" | i18n }}</label>\n          <input id=\"favorite\" type=\"checkbox\" name=\"Favorite\" [(ngModel)]=\"cipher.favorite\" />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"canUseReprompt\">\n          <label for=\"passwordPrompt\">\n            {{ \"passwordPrompt\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <input\n            id=\"passwordPrompt\"\n            type=\"checkbox\"\n            name=\"PasswordPrompt\"\n            [ngModel]=\"reprompt\"\n            (change)=\"repromptChanged()\"\n            [disabled]=\"!cipher.edit && editMode\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default single-line\"\n          appStopClick\n          (click)=\"attachments()\"\n          *ngIf=\"editMode && showAttachments && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"attachments\" | i18n }}</div>\n          <i\n            class=\"bwi bwi-external-link bwi-lg bwi-fw\"\n            aria-hidden=\"true\"\n            *ngIf=\"openAttachmentsInPopup\"\n          ></i>\n          <i\n            class=\"bwi bwi-angle-right row-sub-icon\"\n            aria-hidden=\"true\"\n            *ngIf=\"!openAttachmentsInPopup\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          (click)=\"editCollections()\"\n          *ngIf=\"editMode && cipher.organizationId && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"collections\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right row-sub-icon\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <textarea\n            id=\"notes\"\n            name=\"Notes\"\n            rows=\"6\"\n            [(ngModel)]=\"cipher.notes\"\n            [readonly]=\"!cipher.edit && editMode\"\n          ></textarea>\n        </div>\n      </div>\n    </div>\n    <app-vault-add-edit-custom-fields\n      *ngIf=\"!(!cipher.hasFields && !cipher.edit && editMode)\"\n      [cipher]=\"cipher\"\n      [thisCipherType]=\"cipher.type\"\n      [editMode]=\"editMode\"\n    >\n    </app-vault-add-edit-custom-fields>\n    <div class=\"box\" *ngIf=\"allowOwnershipOptions()\">\n      <h2 class=\"box-header\">\n        {{ \"ownership\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n          <select\n            id=\"organizationId\"\n            class=\"form-control\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"cipher.organizationId\"\n            (change)=\"organizationChanged()\"\n          >\n            <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode && !cloneMode && !(!cipher.edit && editMode)\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteItem\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/add-edit.component\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AddEditComponent extends BaseAddEditComponent {\n  currentUris: string[];\n  showAttachments = true;\n  openAttachmentsInPopup: boolean;\n  showAutoFillOnPageLoadOptions: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    eventService: EventService,\n    policyService: PolicyService,\n    private popupUtilsService: PopupUtilsService,\n    organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      }\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      if (params.collectionId) {\n        const collection = this.writeableCollections.find((c) => c.id === params.collectionId);\n        if (collection != null) {\n          this.collectionIds = [collection.id];\n          this.organizationId = collection.organizationId;\n        }\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      this.editMode = !params.cipherId;\n\n      if (params.cloneMode != null) {\n        this.cloneMode = params.cloneMode === \"true\";\n      }\n      if (params.selectedVault) {\n        this.organizationId = params.selectedVault;\n      }\n      await this.load();\n\n      if (!this.editMode || this.cloneMode) {\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.name &&\n          (this.cipher.name == null || this.cipher.name === \"\")\n        ) {\n          this.cipher.name = params.name;\n        }\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.uri &&\n          (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n        ) {\n          this.cipher.login.uris[0].uri = params.uri;\n        }\n      }\n\n      this.openAttachmentsInPopup = this.popupUtilsService.inPopup(window);\n    });\n\n    if (!this.editMode) {\n      const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n      this.currentUris =\n        tabs == null\n          ? null\n          : tabs.filter((tab) => tab.url != null && tab.url !== \"\").map((tab) => tab.url);\n    }\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        if (this.cipher.name != null && this.cipher.name !== \"\") {\n          document.getElementById(\"loginUsername\").focus();\n        } else {\n          document.getElementById(\"name\").focus();\n        }\n      }\n    }, 200);\n  }\n\n  async load() {\n    await super.load();\n    this.showAutoFillOnPageLoadOptions =\n      this.cipher.type === CipherType.Login &&\n      (await this.stateService.getEnableAutoFillOnPageLoad());\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      if (this.cloneMode) {\n        this.router.navigate([\"/tabs/vault\"]);\n      } else {\n        this.location.back();\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  attachments() {\n    super.attachments();\n\n    if (this.openAttachmentsInPopup) {\n      const destinationUrl = this.router\n        .createUrlTree([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } })\n        .toString();\n      const currentBaseUrl = window.location.href.replace(this.router.url, \"\");\n      this.popupUtilsService.popOut(window, currentBaseUrl + destinationUrl);\n    } else {\n      this.router.navigate([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  editCollections() {\n    super.editCollections();\n    if (this.cipher.organizationId != null) {\n      this.router.navigate([\"/collections\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  cancel() {\n    super.cancel();\n    this.location.back();\n  }\n\n  async generateUsername(): Promise<boolean> {\n    const confirmed = await super.generateUsername();\n    if (confirmed) {\n      await this.saveCipherState();\n      this.router.navigate([\"generator\"], { queryParams: { type: \"username\" } });\n    }\n    return confirmed;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      await this.saveCipherState();\n      this.router.navigate([\"generator\"], { queryParams: { type: \"password\" } });\n    }\n    return confirmed;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/tabs/vault\"]);\n    }\n    return confirmed;\n  }\n\n  toggleUriInput(uri: LoginUriView) {\n    const u = uri as any;\n    u.showCurrentUris = !u.showCurrentUris;\n  }\n\n  allowOwnershipOptions(): boolean {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private saveCipherState() {\n    return this.stateService.setAddEditCipherInfo({\n      cipher: this.cipher,\n      collectionIds:\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id),\n    });\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements IEncrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: ArrayBuffer = null;\n  readonly ivBytes: ArrayBuffer = null;\n  readonly macBytes: ArrayBuffer = null;\n\n  constructor(readonly buffer: ArrayBuffer) {\n    const encBytes = new Uint8Array(buffer);\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH\n        ).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH).buffer;\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\"\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(buffer);\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64).buffer;\n    return new EncArrayBuffer(buffer);\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (status === 429) {\n      this.message = \"Rate limit exceeded. Try again later.\";\n    } else if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const encBuf = await EncArrayBuffer.fromResponse(response);\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"close()\" *ngIf=\"openedAttachmentsInPopup\">\n        {{ \"close\" | i18n }}\n      </button>\n      <button type=\"button\" (click)=\"back()\" *ngIf=\"!openedAttachmentsInPopup\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"attachments\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\" *ngIf=\"cipher && cipher.hasAttachments\">\n      <div class=\"box-content no-hover single-line\">\n        <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let a of cipher.attachments\">\n          <div class=\"row-main\">\n            {{ a.fileName }}\n          </div>\n          <small class=\"row-sub-label\">{{ a.sizeName }}</small>\n          <div class=\"action-buttons no-pad\">\n            <button\n              type=\"button\"\n              class=\"row-btn btn\"\n              type=\"button\"\n              appStopClick\n              appA11yTitle=\"{{ 'deleteAttachment' | i18n }}\"\n              (click)=\"delete(a)\"\n              #deleteBtn\n              [appApiAction]=\"deletePromises[a.id]\"\n              [disabled]=\"deleteBtn.loading\"\n            >\n              <i\n                class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                [hidden]=\"deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                [hidden]=\"!deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"newAttachment\" | i18n }}\n      </h2>\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  openedAttachmentsInPopup: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    private location: Location,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.init();\n    });\n\n    this.openedAttachmentsInPopup = history.length === 1;\n  }\n\n  back() {\n    this.location.back();\n  }\n\n  close() {\n    window.close();\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherStatus } from \"./cipher-status.model\";\n\nexport type VaultFilterFunction = (cipher: CipherView) => boolean;\n\nexport class VaultFilter {\n  cipherType?: CipherType;\n  selectedCollection = false; // This is needed because of how the \"Unassigned\" collection works. It has a null id.\n  selectedCollectionId?: string;\n  status?: CipherStatus;\n  selectedFolder = false; // This is needed because of how the \"No Folder\" folder works. It has a null id.\n  selectedFolderId?: string;\n  selectedOrganizationId?: string;\n  myVaultOnly = false;\n  refreshCollectionsAndFolders = false;\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.cipherType = null;\n    this.status = null;\n    this.selectedCollection = false;\n    this.selectedCollectionId = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n  }\n\n  resetOrganization() {\n    this.myVaultOnly = false;\n    this.selectedOrganizationId = null;\n    this.resetFilter();\n  }\n\n  buildFilter(): VaultFilterFunction {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.status === \"favorites\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.favorite;\n      }\n      if (this.status === \"trash\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.cipherType != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.cipherType;\n      }\n      if (this.selectedFolder && this.selectedFolderId == null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.selectedFolder && this.selectedFolderId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.selectedFolderId;\n      }\n      if (this.selectedCollection && this.selectedCollectionId == null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.organizationId != null &&\n          (cipher.collectionIds == null || cipher.collectionIds.length === 0);\n      }\n      if (this.selectedCollection && this.selectedCollectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.includes(this.selectedCollectionId);\n      }\n      if (this.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.selectedOrganizationId;\n      }\n      if (this.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/tree-node\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","import { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nexport class DynamicTreeNode<T extends CollectionView | FolderView> {\n  fullList: T[];\n  nestedList: TreeNode<T>[];\n\n  hasId(id: string): boolean {\n    return this.fullList != null && this.fullList.filter((i: T) => i.id === id).length > 0;\n  }\n\n  constructor(init?: Partial<DynamicTreeNode<T>>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { firstValueFrom, from, mergeMap, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport {\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\n\nconst NestingDelimiter = \"/\";\n\n@Injectable()\nexport class VaultFilterService {\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService\n  ) {}\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    return new Set(await this.stateService.getCollapsedGroupings());\n  }\n\n  async buildOrganizations(): Promise<Organization[]> {\n    let organizations = await this.organizationService.getAll();\n    if (organizations != null) {\n      organizations = organizations.filter(isNotProviderUser);\n    }\n\n    return organizations;\n  }\n\n  buildNestedFolders(organizationId?: string): Observable<DynamicTreeNode<FolderView>> {\n    const transformation = async (storedFolders: FolderView[]) => {\n      let folders: FolderView[];\n      if (organizationId != null) {\n        const ciphers = await this.cipherService.getAllDecrypted();\n        const orgCiphers = ciphers.filter((c) => c.organizationId == organizationId);\n        folders = storedFolders.filter(\n          (f) =>\n            orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n            ciphers.filter((c) => c.folderId == f.id).length < 1\n        );\n      } else {\n        folders = storedFolders;\n      }\n      const nestedFolders = await this.getAllFoldersNested(folders);\n      return new DynamicTreeNode<FolderView>({\n        fullList: folders,\n        nestedList: nestedFolders,\n      });\n    };\n\n    return this.folderService.folderViews$.pipe(\n      mergeMap((folders) => from(transformation(folders)))\n    );\n  }\n\n  async buildCollections(organizationId?: string): Promise<DynamicTreeNode<CollectionView>> {\n    const storedCollections = await this.collectionService.getAllDecrypted();\n    let collections: CollectionView[];\n    if (organizationId != null) {\n      collections = storedCollections.filter((c) => c.organizationId === organizationId);\n    } else {\n      collections = storedCollections;\n    }\n    const nestedCollections = await this.collectionService.getAllNested(collections);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: collections,\n      nestedList: nestedCollections,\n    });\n  }\n\n  async checkForSingleOrganizationPolicy(): Promise<boolean> {\n    return await firstValueFrom(\n      this.policyService.policyAppliesToActiveUser$(PolicyType.SingleOrg)\n    );\n  }\n\n  async checkForPersonalOwnershipPolicy(): Promise<boolean> {\n    return await firstValueFrom(\n      this.policyService.policyAppliesToActiveUser$(PolicyType.PersonalOwnership)\n    );\n  }\n\n  protected async getAllFoldersNested(folders: FolderView[]): Promise<TreeNode<FolderView>[]> {\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getFolderNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllFoldersNested(\n      await firstValueFrom(this.folderService.folderViews$)\n    );\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n}\n","import { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { VaultFilterService as BaseVaultFilterService } from \"@bitwarden/angular/vault/vault-filter/services/vault-filter.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nexport class VaultFilterService extends BaseVaultFilterService {\n  vaultFilter: VaultFilter = new VaultFilter();\n\n  allVaults = \"allVaults\";\n  myVault = \"myVault\";\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService\n    );\n    this.vaultFilter.myVaultOnly = false;\n    this.vaultFilter.selectedOrganizationId = null;\n  }\n\n  getVaultFilter() {\n    return this.vaultFilter;\n  }\n\n  setVaultFilter(filter: string) {\n    if (filter === this.allVaults) {\n      this.vaultFilter.myVaultOnly = false;\n      this.vaultFilter.selectedOrganizationId = null;\n    } else if (filter === this.myVault) {\n      this.vaultFilter.myVaultOnly = true;\n      this.vaultFilter.selectedOrganizationId = null;\n    } else {\n      this.vaultFilter.myVaultOnly = false;\n      this.vaultFilter.selectedOrganizationId = filter;\n    }\n  }\n\n  clear() {\n    this.setVaultFilter(this.allVaults);\n  }\n\n  filterCipherForSelectedVault(cipher: CipherView) {\n    if (!this.vaultFilter.selectedOrganizationId && !this.vaultFilter.myVaultOnly) {\n      return false;\n    }\n    if (this.vaultFilter.selectedOrganizationId) {\n      if (cipher.organizationId === this.vaultFilter.selectedOrganizationId) {\n        return false;\n      }\n    } else if (this.vaultFilter.myVaultOnly) {\n      if (!cipher.organizationId) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n  Mir: \"card-mir\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","<button\n  type=\"button\"\n  class=\"row-btn\"\n  (click)=\"view()\"\n  appStopClick\n  appStopProp\n  appA11yTitle=\"{{ 'view' | i18n }}\"\n  *ngIf=\"showView\"\n>\n  <i class=\"bwi bwi-lg bwi-list-alt\" aria-hidden=\"true\"></i>\n</button>\n<ng-container *ngIf=\"cipher.type === cipherType.Login\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'launch' | i18n }}\"\n    (click)=\"launchCipher()\"\n    *ngIf=\"!showView\"\n    [ngClass]=\"{ disabled: !cipher.login.canLaunch }\"\n    [attr.disabled]=\"!cipher.login.canLaunch ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.username, 'username', 'Username')\"\n    [ngClass]=\"{ disabled: !cipher.login.username }\"\n    [attr.disabled]=\"!cipher.login.username ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-user\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.password, 'password', 'Password')\"\n    [ngClass]=\"{ disabled: !cipher.login.password || !cipher.viewPassword }\"\n    [attr.disabled]=\"!cipher.login.password ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.totp, 'verificationCodeTotp', 'TOTP')\"\n    [ngClass]=\"{ disabled: !displayTotpCopyButton(cipher) }\"\n    [attr.disabled]=\"!displayTotpCopyButton(cipher) ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-clock\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.Card\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.number, 'number', 'Card Number')\"\n    [ngClass]=\"{ disabled: !cipher.card.number }\"\n    [attr.disabled]=\"!cipher.card.number ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-hashtag\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.code, 'securityCode', 'Security Code')\"\n    [ngClass]=\"{ disabled: !cipher.card.code }\"\n    [attr.disabled]=\"!cipher.card.code ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.SecureNote\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNote' | i18n }}\"\n    (click)=\"copy(cipher, cipher.notes, 'note', 'Note')\"\n    [ngClass]=\"{ disabled: !cipher.notes }\"\n    [attr.disabled]=\"!cipher.notes ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Component({\n  selector: \"app-action-buttons\",\n  templateUrl: \"action-buttons.component.html\",\n})\nexport class ActionButtonsComponent {\n  @Output() onView = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() showView = false;\n\n  cipherType = CipherType;\n  userHasPremiumAccess = false;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private eventService: EventService,\n    private totpService: TotpService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  launchCipher() {\n    this.launchEvent.emit(this.cipher);\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.cipher.reprompt !== CipherRepromptType.None &&\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (aType === \"TOTP\") {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  view() {\n    this.onView.emit(this.cipher);\n  }\n}\n","<div\n  role=\"group\"\n  appA11yTitle=\"{{ cipher.name }}\"\n  class=\"box-content-row box-content-row-flex virtual-scroll-item\"\n  [ngClass]=\"{ 'override-last': !last }\"\n>\n  <button\n    type=\"button\"\n    (click)=\"selectCipher(cipher)\"\n    (dblclick)=\"launchCipher(cipher)\"\n    appStopClick\n    title=\"{{ title }} - {{ cipher.name }}\"\n    class=\"row-main\"\n  >\n    <app-vault-icon [cipher]=\"cipher\"></app-vault-icon>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        <span class=\"truncate-box\">\n          <span class=\"truncate\">{{ cipher.name }}</span>\n          <ng-container *ngIf=\"cipher.organizationId\">\n            <i\n              class=\"bwi bwi-collection text-muted\"\n              title=\"{{ 'shared' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n          </ng-container>\n          <ng-container *ngIf=\"cipher.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip text-muted\"\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n          </ng-container>\n        </span>\n      </span>\n      <span class=\"detail\">{{ cipher.subTitle }}</span>\n    </div>\n  </button>\n  <app-action-buttons\n    [cipher]=\"cipher\"\n    [showView]=\"showView\"\n    (onView)=\"viewCipher(cipher)\"\n    (launchEvent)=\"launchCipher(cipher)\"\n    class=\"action-buttons\"\n  >\n  </app-action-buttons>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Component({\n  selector: \"app-cipher-row\",\n  templateUrl: \"cipher-row.component.html\",\n})\nexport class CipherRowComponent {\n  @Output() onSelected = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Output() onView = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() last: boolean;\n  @Input() showView = false;\n  @Input() title: string;\n\n  selectCipher(c: CipherView) {\n    this.onSelected.emit(c);\n  }\n\n  launchCipher(c: CipherView) {\n    this.launchEvent.emit(c);\n  }\n\n  viewCipher(c: CipherView) {\n    this.onView.emit(c);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"ellipsis\",\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = \"...\") {\n    if (value.length <= limit) {\n      return value;\n    }\n    limit -= ellipsis.length;\n    if (completeWords && value.length > limit && value.indexOf(\" \") > 0) {\n      limit = value.substring(0, limit).lastIndexOf(\" \");\n    }\n    return value.substring(0, limit) + ellipsis;\n  }\n}\n","<ng-container *ngIf=\"loaded && organizations$ | async as organizations\">\n  <div class=\"content org-filter-content\" *ngIf=\"loaded && shouldShow(organizations)\">\n    <ng-container *ngIf=\"selectedVault$ | async as vaultFilterDisplay\">\n      <button\n        #toggleVaults\n        class=\"org-filter\"\n        (click)=\"openOverlay()\"\n        aria-haspopup=\"menu\"\n        aria-controls=\"cdk-overlay-container\"\n        [attr.aria-expanded]=\"isOpen\"\n        [attr.aria-label]=\"vaultFilterDisplay\"\n      >\n        {{ vaultFilterDisplay | ellipsis: 45 }}&nbsp;\n        <i\n          class=\"bwi bwi-sm\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-angle-down': !isOpen, 'bwi-chevron-up': isOpen }\"\n        ></i>\n      </button>\n    </ng-container>\n    <ng-template class=\"vault-select-container\" #vaultSelectorTemplate>\n      <div\n        class=\"vault-select\"\n        [@transformPanel]=\"'open'\"\n        cdkTrapFocus\n        cdkTrapFocusAutoCapture\n        role=\"dialog\"\n        aria-modal=\"true\"\n      >\n        <button\n          appStopClick\n          (click)=\"selectAllVaults()\"\n          [ngClass]=\"{ active: !myVaultOnly && !selectOrganizationId }\"\n        >\n          <i class=\"bwi bwi-fw bwi-filter\" aria-hidden=\"true\"></i>\n          &nbsp;{{ \"allVaults\" | i18n }}\n        </button>\n        <button *ngIf=\"!enforcePersonalOwnership\" appStopClick (click)=\"selectMyVault()\">\n          <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n          &nbsp;{{ \"myVault\" | i18n }}\n        </button>\n        <button\n          *ngFor=\"let organization of organizations\"\n          appStopClick\n          (click)=\"selectOrganization(organization)\"\n        >\n          <i\n            *ngIf=\"organization.planProductType !== 1\"\n            class=\"bwi bwi-fw bwi-business\"\n            aria-hidden=\"true\"\n          ></i>\n          <i\n            *ngIf=\"organization.planProductType === 1\"\n            class=\"bwi bwi-fw bwi-family\"\n            aria-hidden=\"true\"\n          ></i>\n          <span\n            >&nbsp;{{ organization.name | ellipsis: (organization.enabled ? 21 : 18):true }}</span\n          >\n          <i\n            *ngIf=\"!organization.enabled\"\n            class=\"bwi bwi-fw bwi-exclamation-triangle text-danger\"\n            aria-label=\"{{ 'organizationIsDisabled' | i18n }}\"\n            appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n          ></i>\n        </button>\n      </div>\n    </ng-template>\n  </div>\n</ng-container>\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { ConnectedPosition, Overlay, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  HostListener,\n  OnDestroy,\n} from \"@angular/core\";\nimport { BehaviorSubject, concatMap, map, merge, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\n\n@Component({\n  selector: \"app-vault-select\",\n  templateUrl: \"vault-select.component.html\",\n  animations: [\n    trigger(\"transformPanel\", [\n      state(\n        \"void\",\n        style({\n          opacity: 0,\n        })\n      ),\n      transition(\n        \"void => open\",\n        animate(\n          \"100ms linear\",\n          style({\n            opacity: 1,\n          })\n        )\n      ),\n      transition(\"* => void\", animate(\"100ms linear\", style({ opacity: 0 }))),\n    ]),\n  ],\n})\nexport class VaultSelectComponent implements OnInit, OnDestroy {\n  @Output() onVaultSelectionChanged = new EventEmitter();\n\n  @ViewChild(\"toggleVaults\", { read: ElementRef })\n  buttonRef: ElementRef<HTMLButtonElement>;\n  @ViewChild(\"vaultSelectorTemplate\", { read: TemplateRef }) templateRef: TemplateRef<HTMLElement>;\n\n  private _selectedVault = new BehaviorSubject<string>(null);\n\n  isOpen = false;\n  loaded = false;\n  organizations$: Observable<Organization[]>;\n  selectedVault$: Observable<string> = this._selectedVault.asObservable();\n\n  enforcePersonalOwnership = false;\n  overlayPostition: ConnectedPosition[] = [\n    {\n      originX: \"start\",\n      originY: \"bottom\",\n      overlayX: \"start\",\n      overlayY: \"top\",\n    },\n  ];\n\n  private overlayRef: OverlayRef;\n  private _destroy = new Subject<void>();\n\n  shouldShow(organizations: Organization[]): boolean {\n    return (\n      (organizations.length > 0 && !this.enforcePersonalOwnership) ||\n      (organizations.length > 1 && this.enforcePersonalOwnership)\n    );\n  }\n\n  constructor(\n    private vaultFilterService: VaultFilterService,\n    private i18nService: I18nService,\n    private overlay: Overlay,\n    private viewContainerRef: ViewContainerRef,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService\n  ) {}\n\n  @HostListener(\"document:keydown.escape\", [\"$event\"])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (this.isOpen) {\n      event.preventDefault();\n      this.close();\n    }\n  }\n\n  async ngOnInit() {\n    this.organizations$ = this.organizationService.organizations$\n      .pipe(takeUntil(this._destroy))\n      .pipe(map((orgs) => orgs.sort((a, b) => a.name.localeCompare(b.name))));\n\n    this.organizations$\n      .pipe(\n        concatMap(async (organizations) => {\n          this.enforcePersonalOwnership =\n            await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n\n          if (this.shouldShow(organizations)) {\n            if (this.enforcePersonalOwnership && !this.vaultFilterService.vaultFilter.myVaultOnly) {\n              const firstOrganization = organizations[0];\n              this._selectedVault.next(firstOrganization.name);\n              this.vaultFilterService.setVaultFilter(firstOrganization.id);\n            } else if (this.vaultFilterService.vaultFilter.myVaultOnly) {\n              this._selectedVault.next(this.i18nService.t(this.vaultFilterService.myVault));\n            } else if (this.vaultFilterService.vaultFilter.selectedOrganizationId != null) {\n              const selectedOrganization = organizations.find(\n                (o) => o.id === this.vaultFilterService.vaultFilter.selectedOrganizationId\n              );\n              this._selectedVault.next(selectedOrganization.name);\n            } else {\n              this._selectedVault.next(this.i18nService.t(this.vaultFilterService.allVaults));\n            }\n          }\n        })\n      )\n      .pipe(takeUntil(this._destroy))\n      .subscribe();\n\n    this.loaded = true;\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n    this._selectedVault.complete();\n  }\n\n  openOverlay() {\n    const viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    const positionStrategyBuilder = this.overlay.position();\n\n    const positionStrategy = positionStrategyBuilder\n      .flexibleConnectedTo(this.buttonRef.nativeElement)\n      .withFlexibleDimensions(true)\n      .withPush(true)\n      .withViewportMargin(10)\n      .withGrowAfterOpen(true)\n      .withPositions(this.overlayPostition);\n\n    this.overlayRef = this.overlay.create({\n      hasBackdrop: true,\n      positionStrategy,\n      maxHeight: viewPortHeight - 160,\n      backdropClass: \"cdk-overlay-transparent-backdrop\",\n      scrollStrategy: this.overlay.scrollStrategies.close(),\n    });\n\n    const templatePortal = new TemplatePortal(this.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n    this.isOpen = true;\n\n    // Handle closing\n    merge(\n      this.overlayRef.outsidePointerEvents(),\n      this.overlayRef.backdropClick(),\n      this.overlayRef.detachments()\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    ).subscribe(() => {\n      this.close();\n    });\n  }\n\n  close() {\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n      this.overlayRef = undefined;\n    }\n    this.isOpen = false;\n  }\n\n  selectOrganization(organization: Organization) {\n    if (!organization.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"disabledOrganizationFilterError\")\n      );\n    } else {\n      this._selectedVault.next(organization.name);\n      this.vaultFilterService.setVaultFilter(organization.id);\n      this.onVaultSelectionChanged.emit();\n      this.close();\n    }\n  }\n  selectAllVaults() {\n    this._selectedVault.next(this.i18nService.t(this.vaultFilterService.allVaults));\n    this.vaultFilterService.setVaultFilter(this.vaultFilterService.allVaults);\n    this.onVaultSelectionChanged.emit();\n    this.close();\n  }\n  selectMyVault() {\n    this._selectedVault.next(this.i18nService.t(this.vaultFilterService.myVault));\n    this.vaultFilterService.setVaultFilter(this.vaultFilterService.myVault);\n    this.onVaultSelectionChanged.emit();\n    this.close();\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ searchPlaceholder || ('searchVault' | i18n) }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ 'stacked-boxes': showGroupings() }\">\n  <ng-container *ngIf=\"showGroupings()\">\n    <app-vault-select\n      *ngIf=\"showVaultFilter\"\n      (onVaultSelectionChanged)=\"changeVaultSelection()\"\n    ></app-vault-select>\n    <div class=\"box list\" *ngIf=\"nestedFolders && nestedFolders.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let c of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectCollection(c.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-collection\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ c.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"ciphers\">\n    <div *ngIf=\"!ciphers.length\">\n      <app-vault-select\n        *ngIf=\"showVaultFilter && !showGroupings()\"\n        (onVaultSelectionChanged)=\"changeVaultSelection()\"\n      ></app-vault-select>\n      <div class=\"no-items\">\n        <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n        <ng-container *ngIf=\"loaded\">\n          <img class=\"no-items-image\" aria-hidden=\"true\" />\n          <p>{{ \"noItemsInList\" | i18n }}</p>\n          <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n            {{ \"addItem\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers.length\"\n      #virtualScrollViewport\n      ><app-vault-select\n        *ngIf=\"showVaultFilter && !showGroupings()\"\n        (onVaultSelectionChanged)=\"changeVaultSelection()\"\n      ></app-vault-select>\n      <div class=\"box list only-list\">\n        <h2 class=\"box-header\">\n          {{ groupingTitle }}\n          <span class=\"flex-right\">{{ isSearching() ? ciphers.length : ciphers.length }}</span>\n        </h2>\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let c of ciphers; let last = last\"\n            [cipher]=\"c\"\n            [last]=\"last\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          ></app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"@bitwarden/angular/components/ciphers.component\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { BrowserComponentState } from \"../../models/browserComponentState\";\nimport { BrowserStateService } from \"../../services/abstractions/browser-state.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"CiphersComponent\";\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnInit, OnDestroy {\n  groupingTitle: string;\n  state: BrowserComponentState;\n  folderId: string = null;\n  collectionId: string = null;\n  type: CipherType = null;\n  nestedFolders: TreeNode<FolderView>[];\n  nestedCollections: TreeNode<CollectionView>[];\n  searchTypeSearch = false;\n  showOrganizations = false;\n  vaultFilter: VaultFilter;\n  deleted = true;\n  noneFolder = false;\n  showVaultFilter = false;\n\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private applySavedState = true;\n  private scrollingContainer = \"cdk-virtual-scroll-viewport\";\n\n  constructor(\n    searchService: SearchService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private stateService: BrowserStateService,\n    private popupUtils: PopupUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private vaultFilterService: VaultFilterService\n  ) {\n    super(searchService);\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/ciphers\");\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.showOrganizations = this.organizationService.hasOrganizations();\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserCipherComponentState();\n        if (this.state?.searchText) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.deleted) {\n        this.showVaultFilter = true;\n        this.groupingTitle = this.i18nService.t(\"trash\");\n        this.searchPlaceholder = this.i18nService.t(\"searchTrash\");\n        await this.load(this.buildFilter(), true);\n      } else if (params.type) {\n        this.showVaultFilter = true;\n        this.searchPlaceholder = this.i18nService.t(\"searchType\");\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case CipherType.Login:\n            this.groupingTitle = this.i18nService.t(\"logins\");\n            break;\n          case CipherType.Card:\n            this.groupingTitle = this.i18nService.t(\"cards\");\n            break;\n          case CipherType.Identity:\n            this.groupingTitle = this.i18nService.t(\"identities\");\n            break;\n          case CipherType.SecureNote:\n            this.groupingTitle = this.i18nService.t(\"secureNotes\");\n            break;\n          default:\n            break;\n        }\n        await this.load(this.buildFilter());\n      } else if (params.folderId) {\n        this.showVaultFilter = true;\n        this.folderId = params.folderId === \"none\" ? null : params.folderId;\n        this.searchPlaceholder = this.i18nService.t(\"searchFolder\");\n        if (this.folderId != null) {\n          this.showOrganizations = false;\n          const folderNode = await this.vaultFilterService.getFolderNested(this.folderId);\n          if (folderNode != null && folderNode.node != null) {\n            this.groupingTitle = folderNode.node.name;\n            this.nestedFolders =\n              folderNode.children != null && folderNode.children.length > 0\n                ? folderNode.children\n                : null;\n          }\n        } else {\n          this.noneFolder = true;\n          this.groupingTitle = this.i18nService.t(\"noneFolder\");\n        }\n        await this.load(this.buildFilter());\n      } else if (params.collectionId) {\n        this.showVaultFilter = false;\n        this.collectionId = params.collectionId;\n        this.searchPlaceholder = this.i18nService.t(\"searchCollection\");\n        const collectionNode = await this.collectionService.getNested(this.collectionId);\n        if (collectionNode != null && collectionNode.node != null) {\n          this.groupingTitle = collectionNode.node.name;\n          this.nestedCollections =\n            collectionNode.children != null && collectionNode.children.length > 0\n              ? collectionNode.children\n              : null;\n        }\n        await this.load(\n          (c) => c.collectionIds != null && c.collectionIds.indexOf(this.collectionId) > -1\n        );\n      } else {\n        this.showVaultFilter = true;\n        this.groupingTitle = this.i18nService.t(\"allItems\");\n        await this.load(this.buildFilter());\n      }\n\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(\n          () =>\n            this.popupUtils.setContentScrollY(window, this.state.scrollY, this.scrollingContainer),\n          0\n        );\n      }\n      await this.stateService.setBrowserCipherComponentState(null);\n    });\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        super.selectCipher(cipher);\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  selectFolder(folder: FolderView) {\n    if (folder.id != null) {\n      this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id } });\n    }\n  }\n\n  selectCollection(collection: CollectionView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  addCipher() {\n    if (this.deleted) {\n      return false;\n    }\n    super.addCipher();\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: {\n        folderId: this.folderId,\n        type: this.type,\n        collectionId: this.collectionId,\n        selectedVault: this.vaultFilter.selectedOrganizationId,\n      },\n    });\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  showGroupings() {\n    return (\n      !this.isSearching() &&\n      ((this.nestedFolders && this.nestedFolders.length) ||\n        (this.nestedCollections && this.nestedCollections.length))\n    );\n  }\n\n  async changeVaultSelection() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    await this.load(this.buildFilter(), this.deleted);\n  }\n\n  private buildFilter(): (cipher: CipherView) => boolean {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.deleted && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.type != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.type;\n      }\n      if (this.folderId != null && this.folderId != \"none\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.folderId;\n      }\n      if (this.noneFolder) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.collectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.indexOf(this.collectionId) > -1;\n      }\n      if (this.vaultFilter.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.vaultFilter.selectedOrganizationId;\n      }\n      if (this.vaultFilter.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window, this.scrollingContainer),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserCipherComponentState(this.state);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"back()\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"collections\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"@bitwarden/angular/components/collections.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private location: Location,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.onSavedCollections.subscribe(() => {\n      this.back();\n    });\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  back() {\n    this.location.back();\n  }\n}\n","import { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport AutofillField from \"../../models/autofillField\";\nimport AutofillForm from \"../../models/autofillForm\";\nimport AutofillPageDetails from \"../../models/autofillPageDetails\";\n\nexport interface PageDetail {\n  frameId: number;\n  tab: chrome.tabs.Tab;\n  details: AutofillPageDetails;\n}\n\nexport interface AutoFillOptions {\n  cipher: CipherView;\n  pageDetails: PageDetail[];\n  doc?: typeof window.document;\n  tab: chrome.tabs.Tab;\n  skipUsernameOnlyFill?: boolean;\n  onlyEmptyFields?: boolean;\n  onlyVisibleFields?: boolean;\n  fillNewPassword?: boolean;\n  skipLastUsed?: boolean;\n}\n\nexport interface FormData {\n  form: AutofillForm;\n  password: AutofillField;\n  username: AutofillField;\n  passwords: AutofillField[];\n}\n\nexport abstract class AutofillService {\n  getFormsWithPasswordFields: (pageDetails: AutofillPageDetails) => FormData[];\n  doAutoFill: (options: AutoFillOptions) => Promise<string>;\n  doAutoFillOnTab: (\n    pageDetails: PageDetail[],\n    tab: chrome.tabs.Tab,\n    fromCommand: boolean\n  ) => Promise<string>;\n  doAutoFillActiveTab: (pageDetails: PageDetail[], fromCommand: boolean) => Promise<string>;\n}\n","<header>\n  <h1 class=\"sr-only\">{{ \"currentTab\" | i18n }}</h1>\n  <div class=\"left\">\n    <app-pop-out *ngIf=\"!inSidebar\"></app-pop-out>\n    <button\n      type=\"button\"\n      (click)=\"refresh()\"\n      appA11yTitle=\"{{ 'refresh' | i18n }}\"\n      *ngIf=\"inSidebar\"\n    >\n      <i class=\"bwi bwi-refresh-tab bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search$.next()\"\n      autocomplete=\"off\"\n      (keydown)=\"closeOnEsc($event)\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"no-items\" *ngIf=\"!loaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <ng-container *ngIf=\"loaded\">\n    <app-vault-select (onVaultSelectionChanged)=\"load()\"></app-vault-select>\n    <div class=\"box list\" *ngIf=\"loginCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"typeLogins\" | i18n }}\n        <span class=\"flex-right\">{{ loginCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content no-hover\">\n        <app-cipher-row\n          *ngFor=\"let loginCipher of loginCiphers\"\n          [cipher]=\"loginCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        >\n        </app-cipher-row>\n        <div class=\"box-content-row padded no-hover\" *ngIf=\"!loginCiphers.length\">\n          <p class=\"text-center\">{{ \"autoFillInfo\" | i18n }}</p>\n          <button type=\"button\" class=\"btn primary link block\" (click)=\"addCipher()\">\n            {{ \"addLogin\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"cardCiphers && cardCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"cards\" | i18n }}\n        <span class=\"flex-right\">{{ cardCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let cardCipher of cardCiphers\"\n          [cipher]=\"cardCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"identityCiphers && identityCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"identities\" | i18n }}\n        <span class=\"flex-right\">{{ identityCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let identityCipher of identityCiphers\"\n          [cipher]=\"identityCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, takeUntil } from \"rxjs/operators\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"CurrentTabComponent\";\n\n@Component({\n  selector: \"app-current-tab\",\n  templateUrl: \"current-tab.component.html\",\n})\nexport class CurrentTabComponent implements OnInit, OnDestroy {\n  pageDetails: any[] = [];\n  tab: chrome.tabs.Tab;\n  cardCiphers: CipherView[];\n  identityCiphers: CipherView[];\n  loginCiphers: CipherView[];\n  url: string;\n  hostname: string;\n  searchText: string;\n  inSidebar = false;\n  searchTypeSearch = false;\n  loaded = false;\n  isLoading = false;\n  showOrganizations = false;\n  protected search$ = new Subject<void>();\n  private destroy$ = new Subject<void>();\n\n  private totpCode: string;\n  private totpTimeout: number;\n  private loadedTimeout: number;\n  private searchTimeout: number;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private popupUtilsService: PopupUtilsService,\n    private autofillService: AutofillService,\n    private i18nService: I18nService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private searchService: SearchService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService,\n    private vaultFilterService: VaultFilterService\n  ) {}\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (this.isLoading) {\n              window.setTimeout(() => {\n                this.load();\n              }, 500);\n            }\n            break;\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    if (!this.syncService.syncInProgress) {\n      await this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(async () => {\n        if (!this.isLoading) {\n          await this.load();\n        }\n      }, 5000);\n    }\n\n    this.search$\n      .pipe(debounceTime(500), takeUntil(this.destroy$))\n      .subscribe(() => this.searchVault());\n  }\n\n  ngOnDestroy() {\n    window.clearTimeout(this.loadedTimeout);\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async refresh() {\n    await this.load();\n  }\n\n  addCipher() {\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: {\n        name: this.hostname,\n        uri: this.url,\n        selectedVault: this.vaultFilterService.getVaultFilter().selectedOrganizationId,\n      },\n    });\n  }\n\n  viewCipher(cipher: CipherView) {\n    this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n  }\n\n  async fillCipher(cipher: CipherView) {\n    if (\n      cipher.reprompt !== CipherRepromptType.None &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    this.totpCode = null;\n    if (this.totpTimeout != null) {\n      window.clearTimeout(this.totpTimeout);\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        tab: this.tab,\n        cipher: cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n      if (this.popupUtilsService.inPopup(window)) {\n        if (this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari()) {\n          BrowserApi.closePopup(window);\n        } else {\n          // Slight delay to fix bug in Chromium browsers where popup closes without copying totp to clipboard\n          setTimeout(() => BrowserApi.closePopup(window), 50);\n        }\n      }\n    } catch {\n      this.ngZone.run(() => {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n  searchVault() {\n    if (!this.searchService.isSearchable(this.searchText)) {\n      return;\n    }\n\n    this.router.navigate([\"/tabs/vault\"], { queryParams: { searchText: this.searchText } });\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async load() {\n    this.isLoading = false;\n    this.tab = await BrowserApi.getTabFromCurrentWindow();\n    if (this.tab != null) {\n      this.url = this.tab.url;\n    } else {\n      this.loginCiphers = [];\n      this.isLoading = this.loaded = true;\n      return;\n    }\n\n    this.hostname = Utils.getHostname(this.url);\n    this.pageDetails = [];\n    BrowserApi.tabSendMessage(this.tab, {\n      command: \"collectPageDetails\",\n      tab: this.tab,\n      sender: BroadcasterSubscriptionId,\n    });\n\n    const otherTypes: CipherType[] = [];\n    const dontShowCards = await this.stateService.getDontShowCardsCurrentTab();\n    const dontShowIdentities = await this.stateService.getDontShowIdentitiesCurrentTab();\n    this.showOrganizations = this.organizationService.hasOrganizations();\n    if (!dontShowCards) {\n      otherTypes.push(CipherType.Card);\n    }\n    if (!dontShowIdentities) {\n      otherTypes.push(CipherType.Identity);\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(\n      this.url,\n      otherTypes.length > 0 ? otherTypes : null\n    );\n\n    this.loginCiphers = [];\n    this.cardCiphers = [];\n    this.identityCiphers = [];\n\n    ciphers.forEach((c) => {\n      if (!this.vaultFilterService.filterCipherForSelectedVault(c)) {\n        switch (c.type) {\n          case CipherType.Login:\n            this.loginCiphers.push(c);\n            break;\n          case CipherType.Card:\n            this.cardCiphers.push(c);\n            break;\n          case CipherType.Identity:\n            this.identityCiphers.push(c);\n            break;\n          default:\n            break;\n        }\n      }\n    });\n\n    this.loginCiphers = this.loginCiphers.sort((a, b) =>\n      this.cipherService.sortCiphersByLastUsedThenName(a, b)\n    );\n    this.isLoading = this.loaded = true;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHistoryView } from \"@bitwarden/common/models/view/password-history.view\";\n\n@Directive()\nexport class PasswordHistoryComponent implements OnInit {\n  cipherId: string;\n  history: PasswordHistoryView[] = [];\n\n  constructor(\n    protected cipherService: CipherService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  protected async init() {\n    const cipher = await this.cipherService.get(this.cipherId);\n    const decCipher = await cipher.decrypt();\n    this.history = decCipher.passwordHistory == null ? [] : decCipher.passwordHistory;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <span class=\"text monospaced no-ellipsis\">\n              {{ h.password }}\n            </span>\n            <span class=\"detail\">{{ h.lastUsedDate | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PasswordHistoryComponent as BasePasswordHistoryComponent } from \"@bitwarden/angular/components/password-history.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-history\",\n  templateUrl: \"password-history.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PasswordHistoryComponent extends BasePasswordHistoryComponent {\n  constructor(\n    cipherService: CipherService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {\n    super(cipherService, platformUtilsService, i18nService, window);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n      await this.init();\n    });\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","type CheckableBase = {\n  checked?: boolean;\n};\n\nexport type Checkable<T> = T & CheckableBase;\n\nexport function isChecked(item: CheckableBase): boolean {\n  return !!item.checked;\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, map, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport {\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { Checkable, isChecked } from \"@bitwarden/common/types/checkable\";\n\n@Directive()\nexport class ShareComponent implements OnInit, OnDestroy {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<void>;\n  cipher: CipherView;\n  collections: Checkable<CollectionView>[] = [];\n  organizations$: Observable<Organization[]>;\n\n  protected writeableCollections: Checkable<CollectionView>[] = [];\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => {\n        return orgs\n          .filter(\n            (o) =>\n              o.enabled && o.status === OrganizationUserStatusType.Confirmed && isNotProviderUser(o)\n          )\n          .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n      })\n    );\n\n    this.organizations$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (this.organizationId == null && orgs.length > 0) {\n        this.organizationId = orgs[0].id;\n      }\n    });\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => (c.checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections.filter(isChecked).map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgs = await firstValueFrom(this.organizations$);\n    const orgName =\n      orgs.find((o) => o.id === this.organizationId)?.name ?? this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if (this.collections[i].checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <ng-container *ngIf=\"organizations$ | async as organizations\">\n    <header>\n      <div class=\"left\">\n        <button type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n      </div>\n      <h1 class=\"center\">\n        <span class=\"title\">{{ \"moveToOrganization\" | i18n }}</span>\n      </h1>\n      <div class=\"right\">\n        <button\n          type=\"submit\"\n          [disabled]=\"form.loading || !canSave\"\n          *ngIf=\"organizations && organizations.length\"\n        >\n          <span [hidden]=\"form.loading\">{{ \"move\" | i18n }}</span>\n          <i\n            class=\"bwi bwi-spinner bwi-lg bwi-spin\"\n            [hidden]=\"!form.loading\"\n            aria-hidden=\"true\"\n          ></i>\n        </button>\n      </div>\n    </header>\n    <main tabindex=\"-1\">\n      <div class=\"box\">\n        <div class=\"box-content\" *ngIf=\"!organizations || !organizations.length\">\n          <div class=\"box-content-row padded no-hover\">\n            {{ \"noOrganizationsList\" | i18n }}\n          </div>\n        </div>\n        <div class=\"box-content\" *ngIf=\"organizations && organizations.length\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n            <select\n              id=\"organization\"\n              name=\"OrganizationId\"\n              [(ngModel)]=\"organizationId\"\n              (change)=\"filterCollections()\"\n            >\n              <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"moveToOrgDesc\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box\" *ngIf=\"organizations && organizations.length\">\n        <h2 class=\"box-header\">\n          {{ \"collections\" | i18n }}\n        </h2>\n        <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n          <div class=\"box-content-row padded no-hover\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n        </div>\n        <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n          <div\n            class=\"box-content-row box-content-row-checkbox\"\n            *ngFor=\"let c of collections; let i = index\"\n            appBoxRow\n          >\n            <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n            <input\n              id=\"collection_{{ i }}\"\n              type=\"checkbox\"\n              [(ngModel)]=\"c.checked\"\n              name=\"Collection[{{ i }}].Checked\"\n            />\n          </div>\n        </div>\n      </div>\n    </main>\n  </ng-container>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ShareComponent as BaseShareComponent } from \"@bitwarden/angular/components/share.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ShareComponent extends BaseShareComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private router: Router,\n    organizationService: OrganizationService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.onSharedCipher.subscribe(() => {\n      this.router.navigate([\"view-cipher\", { cipherId: this.cipherId }]);\n    });\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    const success = await super.submit();\n    if (success) {\n      this.cancel();\n    }\n    return success;\n  }\n\n  cancel() {\n    this.router.navigate([\"/view-cipher\"], {\n      replaceUrl: true,\n      queryParams: { cipherId: this.cipher.id },\n    });\n  }\n}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\nimport { DeepJsonify } from \"@bitwarden/common/types/deep-jsonify\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserGroupingsComponentState extends BrowserComponentState {\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  ciphers: CipherView[];\n  collectionCounts: Map<string, number>;\n  folderCounts: Map<string, number>;\n  typeCounts: Map<CipherType, number>;\n  folders: FolderView[];\n  collections: CollectionView[];\n  deletedCount: number;\n\n  toJSON() {\n    return Utils.merge(this, {\n      collectionCounts: Utils.mapToRecord(this.collectionCounts),\n      folderCounts: Utils.mapToRecord(this.folderCounts),\n      typeCounts: Utils.mapToRecord(this.typeCounts),\n    });\n  }\n\n  static fromJSON(json: DeepJsonify<BrowserGroupingsComponentState>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new BrowserGroupingsComponentState(), json, {\n      favoriteCiphers: json.favoriteCiphers?.map((c) => CipherView.fromJSON(c)),\n      noFolderCiphers: json.noFolderCiphers?.map((c) => CipherView.fromJSON(c)),\n      ciphers: json.ciphers?.map((c) => CipherView.fromJSON(c)),\n      collectionCounts: Utils.recordToMap(json.collectionCounts),\n      folderCounts: Utils.recordToMap(json.folderCounts),\n      typeCounts: Utils.recordToMap(json.typeCounts),\n      folders: json.folders?.map((f) => FolderView.fromJSON(f)),\n    });\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" cdk-scrollable>\n  <app-vault-select\n    (onVaultSelectionChanged)=\"vaultFilterChanged()\"\n    class=\"select-index-top\"\n  ></app-vault-select>\n  <div class=\"no-items\" *ngIf=\"(!ciphers || !ciphers.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n        {{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"ciphers && ciphers.length && !showSearching()\">\n    <div class=\"box list\" *ngIf=\"favoriteCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"favorites\" | i18n }}\n        <span class=\"flex-right\">{{ favoriteCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let favoriteCipher of favoriteCiphers\"\n          [cipher]=\"favoriteCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n        <span class=\"flex-right\">4</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(cipherType.Login)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-globe\"></i></div>\n            <span class=\"text\">{{ \"typeLogin\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Login) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(cipherType.Card)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-credit-card\"></i></div>\n            <span class=\"text\">{{ \"typeCard\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Card) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(cipherType.Identity)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-id-card\"></i></div>\n            <span class=\"text\">{{ \"typeIdentity\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Identity) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(cipherType.SecureNote)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-sticky-note\"></i></div>\n            <span class=\"text\">{{ \"typeSecureNote\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.SecureNote) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedFolders?.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n        <span class=\"flex-right\">{{ folderCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ folderCounts.get(f.node.id) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"showCollections && nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n        <span class=\"flex-right\">{{ nestedCollections.length }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let nestedCollection of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectCollection(nestedCollection.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-collection\"></i></div>\n            <span class=\"text\">{{ nestedCollection.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{\n            collectionCounts.get(nestedCollection.node.id) || 0\n          }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"showNoFolderCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"noneFolder\" | i18n }}\n        <div class=\"flex-right\">{{ noFolderCiphers.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let noFolderCipher of noFolderCiphers\"\n          [cipher]=\"noFolderCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"deletedCount\">\n      <h2 class=\"box-header\">\n        {{ \"trash\" | i18n }}\n        <span class=\"flex-right\">{{ deletedCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button type=\"button\" class=\"box-content-row\" appStopClick (click)=\"selectTrash()\">\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-trash\"></i></div>\n            <span class=\"text\">{{ \"trash\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ deletedCount }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!ciphers || !ciphers.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers && ciphers.length > 0\"\n    >\n      <div class=\"box list full-list\">\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let searchedCipher of ciphers\"\n            [cipher]=\"searchedCipher\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          >\n          </app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { BrowserGroupingsComponentState } from \"../../models/browserGroupingsComponentState\";\nimport { BrowserStateService } from \"../../services/abstractions/browser-state.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\nexport class VaultFilterComponent implements OnInit, OnDestroy {\n  get showNoFolderCiphers(): boolean {\n    return (\n      this.noFolderCiphers != null &&\n      this.noFolderCiphers.length < this.noFolderListSize &&\n      this.collections.length === 0\n    );\n  }\n\n  get folderCount(): number {\n    return this.nestedFolders.length - (this.showNoFolderCiphers ? 0 : 1);\n  }\n  folders: FolderView[];\n  nestedFolders: TreeNode<FolderView>[];\n  collections: CollectionView[];\n  nestedCollections: TreeNode<CollectionView>[];\n  loaded = false;\n  cipherType = CipherType;\n  ciphers: CipherView[];\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  folderCounts = new Map<string, number>();\n  collectionCounts = new Map<string, number>();\n  typeCounts = new Map<CipherType, number>();\n  searchText: string;\n  state: BrowserGroupingsComponentState;\n  showLeftHeader = true;\n  searchPending = false;\n  searchTypeSearch = false;\n  deletedCount = 0;\n  vaultFilter: VaultFilter;\n  selectedOrganization: string = null;\n  showCollections = true;\n\n  private loadedTimeout: number;\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private noFolderListSize = 100;\n  private searchTimeout: any = null;\n  private hasSearched = false;\n  private hasLoadedAllCiphers = false;\n  private allCiphers: CipherView[] = null;\n\n  constructor(\n    private cipherService: CipherService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private route: ActivatedRoute,\n    private popupUtils: PopupUtilsService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private location: Location,\n    private browserStateService: BrowserStateService,\n    private vaultFilterService: VaultFilterService\n  ) {\n    this.noFolderListSize = 100;\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    await this.browserStateService.setBrowserCipherComponentState(null);\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    const restoredScopeState = await this.restoreState();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.state = await this.browserStateService.getBrowserGroupingComponentState();\n      if (this.state?.searchText) {\n        this.searchText = this.state.searchText;\n      } else if (params.searchText) {\n        this.searchText = params.searchText;\n        this.location.replaceState(\"vault\");\n      }\n\n      if (!this.syncService.syncInProgress) {\n        this.load();\n      } else {\n        this.loadedTimeout = window.setTimeout(() => {\n          if (!this.loaded) {\n            this.load();\n          }\n        }, 5000);\n      }\n\n      if (!this.syncService.syncInProgress || restoredScopeState) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async load() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n\n    this.updateSelectedOrg();\n    await this.loadCollectionsAndFolders();\n    await this.loadCiphers();\n\n    if (this.showNoFolderCiphers && this.nestedFolders.length > 0) {\n      // Remove \"No Folder\" from folder listing\n      this.nestedFolders = this.nestedFolders.slice(0, this.nestedFolders.length - 1);\n    }\n\n    this.loaded = true;\n  }\n\n  async loadCiphers() {\n    this.allCiphers = await this.cipherService.getAllDecrypted();\n    if (!this.hasLoadedAllCiphers) {\n      this.hasLoadedAllCiphers = !this.searchService.isSearchable(this.searchText);\n    }\n    await this.search(null);\n    this.getCounts();\n  }\n\n  async loadCollections() {\n    const allCollections = await this.vaultFilterService.buildCollections(\n      this.selectedOrganization\n    );\n    this.collections = allCollections.fullList;\n    this.nestedCollections = allCollections.nestedList;\n  }\n\n  async loadFolders() {\n    const allFolders = await firstValueFrom(\n      this.vaultFilterService.buildNestedFolders(this.selectedOrganization)\n    );\n    this.folders = allFolders.fullList;\n    this.nestedFolders = allFolders.nestedList;\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    const filterDeleted = (c: CipherView) => !c.isDeleted;\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.ciphers = await this.searchService.searchCiphers(\n        this.searchText,\n        filterDeleted,\n        this.allCiphers\n      );\n      this.ciphers = this.ciphers.filter(\n        (c) => !this.vaultFilterService.filterCipherForSelectedVault(c)\n      );\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      if (!this.hasLoadedAllCiphers && !this.hasSearched) {\n        await this.loadCiphers();\n      } else {\n        this.ciphers = await this.searchService.searchCiphers(\n          this.searchText,\n          filterDeleted,\n          this.allCiphers\n        );\n      }\n      this.ciphers = this.ciphers.filter(\n        (c) => !this.vaultFilterService.filterCipherForSelectedVault(c)\n      );\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async selectType(type: CipherType) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { type: type } });\n  }\n\n  async selectFolder(folder: FolderView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id || \"none\" } });\n  }\n\n  async selectCollection(collection: CollectionView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async selectTrash() {\n    this.router.navigate([\"/ciphers\"], { queryParams: { deleted: true } });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  async addCipher() {\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: { selectedVault: this.vaultFilter.selectedOrganizationId },\n    });\n  }\n\n  async vaultFilterChanged() {\n    if (this.showSearching) {\n      await this.search();\n    }\n    this.updateSelectedOrg();\n    await this.loadCollectionsAndFolders();\n    this.getCounts();\n  }\n\n  updateSelectedOrg() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    if (this.vaultFilter.selectedOrganizationId != null) {\n      this.selectedOrganization = this.vaultFilter.selectedOrganizationId;\n    } else {\n      this.selectedOrganization = null;\n    }\n  }\n\n  getCounts() {\n    let favoriteCiphers: CipherView[] = null;\n    let noFolderCiphers: CipherView[] = null;\n    const folderCounts = new Map<string, number>();\n    const collectionCounts = new Map<string, number>();\n    const typeCounts = new Map<CipherType, number>();\n\n    this.deletedCount = this.allCiphers.filter(\n      (c) => c.isDeleted && !this.vaultFilterService.filterCipherForSelectedVault(c)\n    ).length;\n\n    this.ciphers?.forEach((c) => {\n      if (!this.vaultFilterService.filterCipherForSelectedVault(c)) {\n        if (c.isDeleted) {\n          return;\n        }\n        if (c.favorite) {\n          if (favoriteCiphers == null) {\n            favoriteCiphers = [];\n          }\n          favoriteCiphers.push(c);\n        }\n\n        if (c.folderId == null) {\n          if (noFolderCiphers == null) {\n            noFolderCiphers = [];\n          }\n          noFolderCiphers.push(c);\n        }\n\n        if (typeCounts.has(c.type)) {\n          typeCounts.set(c.type, typeCounts.get(c.type) + 1);\n        } else {\n          typeCounts.set(c.type, 1);\n        }\n\n        if (folderCounts.has(c.folderId)) {\n          folderCounts.set(c.folderId, folderCounts.get(c.folderId) + 1);\n        } else {\n          folderCounts.set(c.folderId, 1);\n        }\n\n        if (c.collectionIds != null) {\n          c.collectionIds.forEach((colId) => {\n            if (collectionCounts.has(colId)) {\n              collectionCounts.set(colId, collectionCounts.get(colId) + 1);\n            } else {\n              collectionCounts.set(colId, 1);\n            }\n          });\n        }\n      }\n    });\n\n    this.favoriteCiphers = favoriteCiphers;\n    this.noFolderCiphers = noFolderCiphers;\n    this.typeCounts = typeCounts;\n    this.folderCounts = folderCounts;\n    this.collectionCounts = collectionCounts;\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async loadCollectionsAndFolders() {\n    this.showCollections = !this.vaultFilter.myVaultOnly;\n    await this.loadFolders();\n    await this.loadCollections();\n  }\n\n  private async saveState() {\n    this.state = Object.assign(new BrowserGroupingsComponentState(), {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      favoriteCiphers: this.favoriteCiphers,\n      noFolderCiphers: this.noFolderCiphers,\n      ciphers: this.ciphers,\n      collectionCounts: this.collectionCounts,\n      folderCounts: this.folderCounts,\n      typeCounts: this.typeCounts,\n      folders: this.folders,\n      collections: this.collections,\n      deletedCount: this.deletedCount,\n    });\n    await this.browserStateService.setBrowserGroupingComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.browserStateService.getBrowserGroupingComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.favoriteCiphers != null) {\n      this.favoriteCiphers = this.state.favoriteCiphers;\n    }\n    if (this.state.noFolderCiphers != null) {\n      this.noFolderCiphers = this.state.noFolderCiphers;\n    }\n    if (this.state.ciphers != null) {\n      this.ciphers = this.state.ciphers;\n    }\n    if (this.state.collectionCounts != null) {\n      this.collectionCounts = this.state.collectionCounts;\n    }\n    if (this.state.folderCounts != null) {\n      this.folderCounts = this.state.folderCounts;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n    if (this.state.folders != null) {\n      this.folders = this.state.folders;\n    }\n    if (this.state.collections != null) {\n      this.collections = this.state.collections;\n    }\n    if (this.state.deletedCount != null) {\n      this.deletedCount = this.state.deletedCount;\n    }\n\n    return true;\n  }\n}\n","import { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\n\nconst BroadcasterSubscriptionId = \"ViewComponent\";\n\n@Directive()\nexport class ViewComponent implements OnDestroy, OnInit {\n  @Input() cipherId: string;\n  @Output() onEditCipher = new EventEmitter<CipherView>();\n  @Output() onCloneCipher = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n\n  cipher: CipherView;\n  showPassword: boolean;\n  showPasswordCount: boolean;\n  showCardNumber: boolean;\n  showCardCode: boolean;\n  canAccessPremium: boolean;\n  showPremiumRequiredTotp: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  fieldType = FieldType;\n  checkPasswordPromise: Promise<number>;\n  folder: FolderView;\n\n  private totpInterval: any;\n  private previousCipherId: string;\n  private passwordReprompted = false;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected totpService: TotpService,\n    protected tokenService: TokenService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected win: Window,\n    protected broadcasterService: BroadcasterService,\n    protected ngZone: NgZone,\n    protected changeDetectorRef: ChangeDetectorRef,\n    protected eventService: EventService,\n    protected apiService: ApiService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n              this.changeDetectorRef.detectChanges();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.cleanUp();\n  }\n\n  async load() {\n    this.cleanUp();\n\n    const cipher = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipher.decrypt();\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.showPremiumRequiredTotp =\n      this.cipher.login.totp && !this.canAccessPremium && !this.cipher.organizationUseTotp;\n\n    if (this.cipher.folderId) {\n      this.folder = await (\n        await firstValueFrom(this.folderService.folderViews$)\n      ).find((f) => f.id == this.cipher.folderId);\n    }\n\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n\n    if (this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n  }\n\n  async edit() {\n    if (await this.promptPassword()) {\n      this.onEditCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async clone() {\n    if (await this.promptPassword()) {\n      this.onCloneCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async share() {\n    if (await this.promptPassword()) {\n      this.onShareCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.deleteCipher();\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.restoreCipher();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async togglePassword() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showPassword = !this.showPassword;\n    this.showPasswordCount = false;\n    if (this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async togglePasswordCount() {\n    if (!this.showPassword) {\n      return;\n    }\n\n    this.showPasswordCount = !this.showPasswordCount;\n  }\n\n  async toggleCardNumber() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardCode() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardCode = !this.showCardCode;\n    if (this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  async checkPassword() {\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  launch(uri: LoginUriView, cipherId?: string) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    if (cipherId) {\n      this.cipherService.updateLastLaunchedDate(cipherId);\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  async copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.promptPassword())\n    ) {\n      return;\n    }\n\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(value, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n    } else if (aType === \"H_Field\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n    }\n  }\n\n  setTextDataOnDrag(event: DragEvent, data: string) {\n    event.dataTransfer.setData(\"text\", data);\n  }\n\n  async downloadAttachment(attachment: AttachmentView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (this.cipher.organizationId == null && !this.canAccessPremium) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n\n  protected async promptPassword() {\n    if (this.cipher.reprompt === CipherRepromptType.None || this.passwordReprompted) {\n      return true;\n    }\n\n    return (this.passwordReprompted = await this.passwordRepromptService.showPasswordPrompt());\n  }\n\n  private cleanUp() {\n    this.totpCode = null;\n    this.cipher = null;\n    this.showPassword = false;\n    this.showCardNumber = false;\n    this.showCardCode = false;\n    this.passwordReprompted = false;\n    if (this.totpInterval) {\n      clearInterval(this.totpInterval);\n    }\n  }\n\n  private async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { FieldView } from \"@bitwarden/common/models/view/field.view\";\n\n@Directive()\nexport class ViewCustomFieldsComponent {\n  @Input() cipher: CipherView;\n  @Input() promptPassword: () => Promise<boolean>;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  fieldType = FieldType;\n\n  constructor(private eventService: EventService) {}\n\n  async toggleFieldValue(field: FieldView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const f = field as any;\n    f.showValue = !f.showValue;\n    f.showCount = false;\n    if (f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  async toggleFieldCount(field: FieldView) {\n    if (!field.showValue) {\n      return;\n    }\n\n    field.showCount = !field.showCount;\n  }\n\n  setTextDataOnDrag(event: DragEvent, data: string) {\n    event.dataTransfer.setData(\"text\", data);\n  }\n}\n","import { Pipe } from \"@angular/core\";\n\nimport { ColorPasswordPipe } from \"./color-password.pipe\";\n\n/*\n An updated pipe that extends ColourPasswordPipe to include a character count\n*/\n@Pipe({ name: \"colorPasswordCount\" })\nexport class ColorPasswordCountPipe extends ColorPasswordPipe {\n  transform(password: string) {\n    const template = (character: string, type: string, index: number) =>\n      `<span class=\"password-character password-${type}\">\n                ${character}<span class=\"password-count\">${index + 1}</span>\n            </span>`;\n    const colorizedPasswordCount = this.generateTemplate(password, template);\n\n    return colorizedPasswordCount;\n  }\n}\n","<ng-container>\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let field of cipher.fields\">\n      <div class=\"row-main\">\n        <span\n          *ngIf=\"field.type != fieldType.Linked\"\n          class=\"row-label draggable\"\n          draggable=\"true\"\n          (dragstart)=\"setTextDataOnDrag($event, field.value)\"\n          >{{ field.name }}</span\n        >\n        <span *ngIf=\"field.type === fieldType.Linked\" class=\"row-label\">{{ field.name }}</span>\n        <div *ngIf=\"field.type === fieldType.Text\">\n          {{ field.value || \"&nbsp;\" }}\n        </div>\n        <div *ngIf=\"field.type === fieldType.Hidden\">\n          <span *ngIf=\"!field.showValue\" class=\"monospaced\">{{ field.maskedValue }}</span>\n          <span\n            *ngIf=\"field.showValue && !field.showCount\"\n            class=\"monospaced show-whitespace\"\n            [innerHTML]=\"field.value | colorPassword\"\n          ></span>\n          <span\n            *ngIf=\"field.showValue && field.showCount\"\n            [innerHTML]=\"field.value | colorPasswordCount\"\n          ></span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Boolean\">\n          <i class=\"bwi bwi-check-square\" *ngIf=\"field.value === 'true'\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-square\" *ngIf=\"field.value !== 'true'\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ field.value }}</span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Linked\" class=\"box-content-row-flex\">\n          <div class=\"icon icon-small\">\n            <i\n              class=\"bwi bwi-link\"\n              aria-hidden=\"true\"\n              appA11yTitle=\"{{ 'linkedValue' | i18n }}\"\n            ></i>\n            <span class=\"sr-only\">{{ \"linkedValue\" | i18n }}</span>\n          </div>\n          <span>{{ cipher.linkedFieldI18nKey(field.linkedId) | i18n }}</span>\n        </div>\n      </div>\n      <div class=\"action-buttons action-buttons-fixed\">\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword && field.showValue\"\n          (click)=\"toggleFieldCount(field)\"\n          [attr.aria-pressed]=\"field.showCount\"\n        >\n          <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword\"\n          (click)=\"toggleFieldValue(field)\"\n          [attr.aria-pressed]=\"field.showValue\"\n        >\n          <i\n            class=\"bwi bwi-lg\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{ 'bwi-eye': !field.showValue, 'bwi-eye-slash': field.showValue }\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'copyValue' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n          *ngIf=\"\n            field.value &&\n            field.type !== fieldType.Boolean &&\n            field.type !== fieldType.Linked &&\n            !(field.type === fieldType.Hidden && !cipher.viewPassword)\n          \"\n          (click)=\"\n            copy(field.value, 'value', field.type === fieldType.Hidden ? 'H_Field' : 'Field')\n          \"\n        >\n          <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { ViewCustomFieldsComponent as BaseViewCustomFieldsComponent } from \"@bitwarden/angular/components/view-custom-fields.component\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\n\n@Component({\n  selector: \"app-vault-view-custom-fields\",\n  templateUrl: \"view-custom-fields.component.html\",\n})\nexport class ViewCustomFieldsComponent extends BaseViewCustomFieldsComponent {\n  constructor(eventService: EventService) {\n    super(eventService);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"viewItem\" | i18n }}</span>\n  </h1>\n  <div class=\"right\" *ngIf=\"cipher\">\n    <button type=\"button\" (click)=\"edit()\" *ngIf=\"!cipher.isDeleted\">\n      {{ \"edit\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" *ngIf=\"cipher\">\n  <div class=\"box\">\n    <h2 class=\"box-header\">\n      {{ \"itemInformation\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <label\n          for=\"name\"\n          class=\"draggable\"\n          draggable=\"true\"\n          (dragstart)=\"setTextDataOnDrag($event, cipher.name)\"\n          >{{ \"name\" | i18n }}</label\n        >\n        <input id=\"name\" type=\"text\" [value]=\"cipher.name\" readonly aria-readonly=\"true\" />\n      </div>\n      <!-- Login -->\n      <div *ngIf=\"cipher.login\">\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.username\">\n          <div class=\"row-main\">\n            <label\n              for=\"loginUsername\"\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.username)\"\n              >{{ \"username\" | i18n }}\n            </label>\n            <input\n              id=\"loginUsername\"\n              type=\"text\"\n              [value]=\"cipher.login.username\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n              (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.password\">\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.password)\"\n              >{{ \"password\" | i18n }}</span\n            >\n            <div *ngIf=\"!showPassword\" class=\"monospaced\">\n              {{ cipher.login.maskedPassword }}\n            </div>\n            <div\n              *ngIf=\"showPassword && !showPasswordCount\"\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"cipher.login.password | colorPassword\"\n            ></div>\n            <div\n              *ngIf=\"showPassword && showPasswordCount\"\n              [innerHTML]=\"cipher.login.password | colorPasswordCount\"\n            ></div>\n          </div>\n          <div class=\"action-buttons action-buttons-fixed\">\n            <button\n              type=\"button\"\n              #checkPasswordBtn\n              class=\"row-btn btn\"\n              appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n              (click)=\"checkPassword()\"\n              [appApiAction]=\"checkPasswordPromise\"\n              [disabled]=\"checkPasswordBtn.loading\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg bwi-check-circle\"\n                [hidden]=\"checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                [hidden]=\"!checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n              (click)=\"togglePasswordCount()\"\n              *ngIf=\"showPassword\"\n              [attr.aria-pressed]=\"showPasswordCount\"\n            >\n              <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              *ngIf=\"cipher.viewPassword\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n              (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div\n          class=\"box-content-row box-content-row-flex totp\"\n          [ngClass]=\"{ low: totpLow }\"\n          *ngIf=\"cipher.login.totp && totpCode\"\n        >\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, totpCode)\"\n              >{{ \"verificationCodeTotp\" | i18n }}</span\n            >\n            <span class=\"totp-code\">{{ totpCodeFormatted }}</span>\n          </div>\n          <span class=\"totp-countdown\" aria-hidden=\"true\">\n            <span class=\"totp-sec\">{{ totpSec }}</span>\n            <svg>\n              <g>\n                <circle\n                  class=\"totp-circle inner\"\n                  r=\"12.6\"\n                  cy=\"16\"\n                  cx=\"16\"\n                  [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                ></circle>\n                <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n              </g>\n            </svg>\n          </span>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              title=\"{{ 'copyVerificationCode' | i18n }}\"\n              (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              <span class=\"sr-only\">{{ \"copyValue\" | i18n }}</span>\n              <span\n                class=\"sr-only exists-only-on-parent-focus\"\n                aria-live=\"polite\"\n                aria-atomic=\"true\"\n                >{{ totpSec }}</span\n              >\n            </button>\n          </div>\n        </div>\n\n        <div class=\"box-content-row box-content-row-flex totp\" *ngIf=\"showPremiumRequiredTotp\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"verificationCodeTotp\" | i18n }}</span>\n            <span class=\"row-label\">\n              <a routerLink=\"/premium\">\n                {{ \"premiumSubcriptionRequired\" | i18n }}\n              </a>\n            </span>\n          </div>\n        </div>\n      </div>\n      <!-- Card -->\n      <div *ngIf=\"cipher.card\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.cardholderName\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.card.cardholderName)\"\n            >{{ \"cardholderName\" | i18n }}</span\n          >\n          {{ cipher.card.cardholderName }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.number\">\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.card.number)\"\n              >{{ \"number\" | i18n }}</span\n            >\n            <span [hidden]=\"showCardNumber\" class=\"monospaced\">{{\n              cipher.card.maskedNumber | creditCardNumber: cipher.card.brand\n            }}</span>\n            <span [hidden]=\"!showCardNumber\" class=\"monospaced\">{{\n              cipher.card.number | creditCardNumber: cipher.card.brand\n            }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'number' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardNumber()\"\n              [attr.aria-pressed]=\"showCardNumber\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n              (click)=\"copy(cipher.card.number, 'number', 'Card Number')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.brand\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.card.brand)\"\n            >{{ \"brand\" | i18n }}</span\n          >\n          {{ cipher.card.brand }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.expiration\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.card.expiration)\"\n            >{{ \"expiration\" | i18n }}</span\n          >\n          {{ cipher.card.expiration }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.code\">\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.card.code)\"\n              >{{ \"securityCode\" | i18n }}</span\n            >\n            <span [hidden]=\"showCardCode\" class=\"monospaced\">{{ cipher.card.maskedCode }}</span>\n            <span [hidden]=\"!showCardCode\" class=\"monospaced\">{{ cipher.card.code }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'securityCode' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardCode()\"\n              [attr.aria-pressed]=\"showCardCode\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n              (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Identity -->\n      <div *ngIf=\"cipher.identity\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.fullName\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.fullName)\"\n            >{{ \"identityName\" | i18n }}</span\n          >\n          {{ cipher.identity.fullName }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.username\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.username)\"\n            >{{ \"username\" | i18n }}</span\n          >\n          {{ cipher.identity.username }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.company\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.company)\"\n            >{{ \"company\" | i18n }}</span\n          >\n          {{ cipher.identity.company }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.ssn\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.ssn)\"\n            >{{ \"ssn\" | i18n }}</span\n          >\n          {{ cipher.identity.ssn }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.passportNumber\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.passportNumber)\"\n            >{{ \"passportNumber\" | i18n }}</span\n          >\n          {{ cipher.identity.passportNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.licenseNumber\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.licenseNumber)\"\n            >{{ \"licenseNumber\" | i18n }}</span\n          >\n          {{ cipher.identity.licenseNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.email\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.email)\"\n            >{{ \"email\" | i18n }}</span\n          >\n          {{ cipher.identity.email }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.phone\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.phone)\"\n            >{{ \"phone\" | i18n }}</span\n          >\n          {{ cipher.identity.phone }}\n        </div>\n        <div\n          class=\"box-content-row\"\n          *ngIf=\"cipher.identity.address1 || cipher.identity.city || cipher.identity.country\"\n        >\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"\n              setTextDataOnDrag(\n                $event,\n                (cipher.identity.address1 ? cipher.identity.address1 + '\\n' : '') +\n                  (cipher.identity.address2 ? cipher.identity.address2 + '\\n' : '') +\n                  (cipher.identity.address3 ? cipher.identity.address3 + '\\n' : '') +\n                  (cipher.identity.fullAddressPart2\n                    ? cipher.identity.fullAddressPart2 + '\\n'\n                    : '') +\n                  (cipher.identity.country ? cipher.identity.country : '')\n              )\n            \"\n            >{{ \"address\" | i18n }}</span\n          >\n          <div *ngIf=\"cipher.identity.address1\">{{ cipher.identity.address1 }}</div>\n          <div *ngIf=\"cipher.identity.address2\">{{ cipher.identity.address2 }}</div>\n          <div *ngIf=\"cipher.identity.address3\">{{ cipher.identity.address3 }}</div>\n          <div *ngIf=\"cipher.identity.fullAddressPart2\">{{ cipher.identity.fullAddressPart2 }}</div>\n          <div *ngIf=\"cipher.identity.country\">{{ cipher.identity.country }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.login && cipher.login.hasUris\">\n    <div class=\"box-content\">\n      <div\n        class=\"box-content-row box-content-row-flex\"\n        *ngFor=\"let u of cipher.login.uris; let i = index\"\n      >\n        <div class=\"row-main\">\n          <label\n            for=\"hostOrUri{{ i }}\"\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, u.uri)\"\n            *ngIf=\"!u.isWebsite\"\n            >{{ \"uri\" | i18n }}</label\n          >\n          <label\n            for=\"hostOrUri{{ i }}\"\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, u.uri)\"\n            *ngIf=\"u.isWebsite\"\n            >{{ \"website\" | i18n }}</label\n          >\n          <span title=\"{{ u.uri }}\">\n            <input\n              id=\"hostOrUri{{ i }}\"\n              type=\"text\"\n              [value]=\"u.hostOrUri\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </span>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'launch' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'launch' | i18n }}\"\n            *ngIf=\"u.canLaunch\"\n            (click)=\"launch(u)\"\n          >\n            <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'copyUri' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n            (click)=\"copy(u.uri, u.isWebsite ? 'website' : 'uri', 'URI')\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.folderId\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <label\n          for=\"folderName\"\n          class=\"draggable\"\n          draggable=\"true\"\n          (dragstart)=\"setTextDataOnDrag($event, folder.name)\"\n          >{{ \"folder\" | i18n }}</label\n        >\n        <input id=\"folderName\" type=\"text\" name=\"folderName\" [value]=\"folder.name\" readonly />\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.notes\">\n    <h2 class=\"box-header\">\n      <label\n        for=\"notes\"\n        class=\"draggable\"\n        draggable=\"true\"\n        (dragstart)=\"setTextDataOnDrag($event, cipher.notes)\"\n        >{{ \"notes\" | i18n }}</label\n      >\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <textarea\n          id=\"notes\"\n          [value]=\"cipher.notes\"\n          rows=\"6\"\n          readonly\n          aria-readonly=\"true\"\n        ></textarea>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.hasFields\">\n    <app-vault-view-custom-fields\n      [cipher]=\"cipher\"\n      [promptPassword]=\"promptPassword.bind(this)\"\n      [copy]=\"copy.bind(this)\"\n    ></app-vault-view-custom-fields>\n  </div>\n  <div\n    class=\"box\"\n    *ngIf=\"cipher.hasAttachments && (canAccessPremium || cipher.organizationId) && showAttachments\"\n  >\n    <h2 class=\"box-header\">\n      {{ \"attachments\" | i18n }}\n    </h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        *ngFor=\"let attachment of cipher.attachments\"\n        appStopClick\n        (click)=\"downloadAttachment(attachment)\"\n      >\n        <span class=\"row-main\">{{ attachment.fileName }}</span>\n        <small class=\"row-sub-label\">{{ attachment.sizeName }}</small>\n        <i\n          class=\"bwi bwi-download bwi-fw row-sub-icon\"\n          *ngIf=\"!attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n        <i\n          class=\"bwi bwi-spinner bwi-fw bwi-spin row-sub-icon\"\n          *ngIf=\"attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"fillCipher()\"\n        *ngIf=\"cipher.type !== cipherType.SecureNote && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-pencil-square bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFill\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"fillCipherAndSave()\"\n        *ngIf=\"cipher.type === cipherType.Login && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-bookmark bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFillAndSave\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"clone()\"\n        *ngIf=\"!cipher.organizationId && !cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-files bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"cloneItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"share()\"\n        *ngIf=\"!cipher.organizationId\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-arrow-circle-right bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"moveToOrganization\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"restore()\"\n        *ngIf=\"cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-undo bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"restoreItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"delete()\"\n        *ngIf=\"cipher.edit\"\n      >\n        <div class=\"row-main text-danger\">\n          <div class=\"icon text-danger\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ (cipher.isDeleted ? \"permanentlyDeleteItem\" : \"deleteItem\") | i18n }}</span>\n        </div>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-footer\">\n      <div>\n        <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n        {{ cipher.revisionDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.creationDate\">\n        <b class=\"font-weight-semibold\">{{ \"dateCreated\" | i18n }}:</b>\n        {{ cipher.creationDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.passwordRevisionDisplayDate\">\n        <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n        {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.hasPasswordHistory\">\n        <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n        <button\n          routerLink=\"/cipher-password-history\"\n          [queryParams]=\"{ cipherId: cipher.id }\"\n          appStopClick\n          title=\"{{ 'passwordHistory' | i18n }}\"\n        >\n          {{ cipher.passwordHistory.length }}\n        </button>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ViewComponent as BaseViewComponent } from \"@bitwarden/angular/components/view.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"ChildViewComponent\";\n\n@Component({\n  selector: \"app-vault-view\",\n  templateUrl: \"view.component.html\",\n})\nexport class ViewComponent extends BaseViewComponent {\n  showAttachments = true;\n  pageDetails: any[] = [];\n  tab: any;\n  loadPageDetailsTimeout: number;\n  inPopout = false;\n  cipherType = CipherType;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    totpService: TotpService,\n    tokenService: TokenService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    broadcasterService: BroadcasterService,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    stateService: StateService,\n    eventService: EventService,\n    private autofillService: AutofillService,\n    private messagingService: MessagingService,\n    private popupUtilsService: PopupUtilsService,\n    apiService: ApiService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      totpService,\n      tokenService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      auditService,\n      window,\n      broadcasterService,\n      ngZone,\n      changeDetectorRef,\n      eventService,\n      apiService,\n      passwordRepromptService,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  ngOnInit() {\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n\n      await this.load();\n    });\n\n    super.ngOnInit();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadPageDetailsTimeout != null) {\n              window.clearTimeout(this.loadPageDetailsTimeout);\n            }\n            this.loadPageDetailsTimeout = window.setTimeout(() => this.loadPageDetails(), 500);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    await super.load();\n    await this.loadPageDetails();\n  }\n\n  async edit() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n    if (!(await super.edit())) {\n      return false;\n    }\n\n    this.router.navigate([\"/edit-cipher\"], { queryParams: { cipherId: this.cipher.id } });\n    return true;\n  }\n\n  async clone() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n\n    if (!(await super.clone())) {\n      return false;\n    }\n\n    this.router.navigate([\"/clone-cipher\"], {\n      queryParams: {\n        cloneMode: true,\n        cipherId: this.cipher.id,\n      },\n    });\n    return true;\n  }\n\n  async share() {\n    if (!(await super.share())) {\n      return false;\n    }\n\n    if (this.cipher.organizationId == null) {\n      this.router.navigate([\"/share-cipher\"], {\n        replaceUrl: true,\n        queryParams: { cipherId: this.cipher.id },\n      });\n    }\n    return true;\n  }\n\n  async fillCipher() {\n    const didAutofill = await this.doAutofill();\n    if (didAutofill) {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"autoFillSuccess\"));\n    }\n  }\n\n  async fillCipherAndSave() {\n    const didAutofill = await this.doAutofill();\n\n    if (didAutofill) {\n      if (this.tab == null) {\n        throw new Error(\"No tab found.\");\n      }\n\n      if (this.cipher.login.uris == null) {\n        this.cipher.login.uris = [];\n      } else {\n        if (this.cipher.login.uris.some((uri) => uri.uri === this.tab.url)) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n          );\n          return;\n        }\n      }\n\n      const loginUri = new LoginUriView();\n      loginUri.uri = this.tab.url;\n      this.cipher.login.uris.push(loginUri);\n\n      try {\n        const cipher: Cipher = await this.cipherService.encrypt(this.cipher);\n        await this.cipherService.updateWithServer(cipher);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n        );\n        this.messagingService.send(\"editedCipher\");\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"unexpectedError\"));\n      }\n    }\n  }\n\n  async restore() {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n    if (await super.restore()) {\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  async delete() {\n    if (await super.delete()) {\n      this.messagingService.send(\"deletedCipher\");\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  close() {\n    this.location.back();\n  }\n\n  private async loadPageDetails() {\n    this.pageDetails = [];\n    this.tab = await BrowserApi.getTabFromCurrentWindow();\n    if (this.tab == null) {\n      return;\n    }\n    BrowserApi.tabSendMessage(this.tab, {\n      command: \"collectPageDetails\",\n      tab: this.tab,\n      sender: BroadcasterSubscriptionId,\n    });\n  }\n\n  private async doAutofill() {\n    if (!(await this.promptPassword())) {\n      return false;\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return false;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        tab: this.tab,\n        cipher: this.cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      this.changeDetectorRef.detectChanges();\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable, NgModule } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, RouteReuseStrategy, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { LockGuard } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard } from \"@bitwarden/angular/guards/unauth.guard\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { GeneratorComponent } from \"./generator/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { DebounceNavigationService } from \"./services/debounceNavigationService\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { VaultFilterComponent } from \"./vault/vault-filter.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"home\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"vault\",\n    redirectTo: \"/tabs/vault\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"home\",\n    component: HomeComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"home\" },\n  },\n  {\n    path: \"login\",\n    component: LoginComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"login\" },\n  },\n  {\n    path: \"lock\",\n    component: LockComponent,\n    canActivate: [LockGuard],\n    data: { state: \"lock\" },\n  },\n  {\n    path: \"2fa\",\n    component: TwoFactorComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"2fa\" },\n  },\n  {\n    path: \"2fa-options\",\n    component: TwoFactorOptionsComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"2fa-options\" },\n  },\n  {\n    path: \"sso\",\n    component: SsoComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"sso\" },\n  },\n  {\n    path: \"set-password\",\n    component: SetPasswordComponent,\n    data: { state: \"set-password\" },\n  },\n  {\n    path: \"remove-password\",\n    component: RemovePasswordComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"remove-password\" },\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"register\" },\n  },\n  {\n    path: \"hint\",\n    component: HintComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"hint\" },\n  },\n  {\n    path: \"environment\",\n    component: EnvironmentComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"environment\" },\n  },\n  {\n    path: \"ciphers\",\n    component: CiphersComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"ciphers\" },\n  },\n  {\n    path: \"view-cipher\",\n    component: ViewComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"view-cipher\" },\n  },\n  {\n    path: \"cipher-password-history\",\n    component: PasswordHistoryComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"cipher-password-history\" },\n  },\n  {\n    path: \"add-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard, DebounceNavigationService],\n    data: { state: \"add-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"edit-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard, DebounceNavigationService],\n    data: { state: \"edit-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"share-cipher\",\n    component: ShareComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"share-cipher\" },\n  },\n  {\n    path: \"collections\",\n    component: CollectionsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"collections\" },\n  },\n  {\n    path: \"attachments\",\n    component: AttachmentsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"attachments\" },\n  },\n  {\n    path: \"generator\",\n    component: GeneratorComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"generator\" },\n  },\n  {\n    path: \"generator-history\",\n    component: PasswordGeneratorHistoryComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"generator-history\" },\n  },\n  {\n    path: \"export\",\n    component: ExportComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"export\" },\n  },\n  {\n    path: \"folders\",\n    component: FoldersComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"folders\" },\n  },\n  {\n    path: \"add-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"add-folder\" },\n  },\n  {\n    path: \"edit-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"edit-folder\" },\n  },\n  {\n    path: \"sync\",\n    component: SyncComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"sync\" },\n  },\n  {\n    path: \"excluded-domains\",\n    component: ExcludedDomainsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"excluded-domains\" },\n  },\n  {\n    path: \"premium\",\n    component: PremiumComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"premium\" },\n  },\n  {\n    path: \"options\",\n    component: OptionsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"options\" },\n  },\n  {\n    path: \"clone-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"clone-cipher\" },\n  },\n  {\n    path: \"send-type\",\n    component: SendTypeComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"send-type\" },\n  },\n  {\n    path: \"add-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"add-send\" },\n  },\n  {\n    path: \"edit-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"edit-send\" },\n  },\n  {\n    path: \"update-temp-password\",\n    component: UpdateTempPasswordComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"update-temp-password\" },\n  },\n  {\n    path: \"tabs\",\n    component: TabsComponent,\n    data: { state: \"tabs\" },\n    children: [\n      {\n        path: \"\",\n        redirectTo: \"/tabs/vault\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"current\",\n        component: CurrentTabComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_current\" },\n        runGuardsAndResolvers: \"always\",\n      },\n      {\n        path: \"vault\",\n        component: VaultFilterComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_vault\" },\n      },\n      {\n        path: \"generator\",\n        component: GeneratorComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_generator\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_settings\" },\n      },\n      {\n        path: \"send\",\n        component: SendGroupingsComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_send\" },\n      },\n    ],\n  },\n];\n\n@Injectable()\nexport class NoRouteReuseStrategy implements RouteReuseStrategy {\n  shouldDetach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  // eslint-disable-next-line\n  store(route: ActivatedRouteSnapshot, handle: {}) {\n    /* Nothing */\n  }\n\n  shouldAttach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  retrieve(route: ActivatedRouteSnapshot): any {\n    return null;\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) {\n    return false;\n  }\n}\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      onSameUrlNavigation: \"reload\",\n      /*enableTracing: true,*/\n    }),\n  ],\n  exports: [RouterModule],\n  providers: [{ provide: RouteReuseStrategy, useClass: NoRouteReuseStrategy }],\n})\nexport class AppRoutingModule {}\n","import { animate, group, query, style, transition, trigger } from \"@angular/animations\";\n\nconst queryShown = query(\n  \":enter, :leave\",\n  [style({ position: \"fixed\", width: \"100%\", height: \"100%\" })],\n  {\n    optional: true,\n  }\n);\n\n// ref: https://github.com/angular/angular/issues/15477\nconst queryChildRoute = query(\"router-outlet ~ *\", [style({}), animate(1, style({}))], {\n  optional: true,\n});\n\nconst speed = \"0.4s\";\n\nexport function queryTranslate(\n  direction: string,\n  axis: string,\n  from: number,\n  to: number,\n  zIndex = 1000\n) {\n  return query(\n    \":\" + direction,\n    [\n      style({\n        transform: \"translate\" + axis + \"(\" + from + \"%)\",\n        zIndex: zIndex,\n        boxShadow: \"0 3px 2px -2px gray\",\n      }),\n      animate(speed + \" ease-in-out\", style({ transform: \"translate\" + axis + \"(\" + to + \"%)\" })),\n    ],\n    { optional: true }\n  );\n}\n\nexport function queryTranslateX(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"X\", from, to, zIndex);\n}\n\nexport function queryTranslateY(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"Y\", from, to, zIndex);\n}\n\nconst inSlideLeft = [\n  queryShown,\n  group([queryTranslateX(\"enter\", 100, 0), queryTranslateX(\"leave\", 0, -100), queryChildRoute]),\n];\n\nconst outSlideRight = [\n  queryShown,\n  group([queryTranslateX(\"enter\", -100, 0), queryTranslateX(\"leave\", 0, 100)]),\n];\n\nconst inSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\nconst outSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, 100, 1010)]),\n];\n\nconst inSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", -100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\n// eslint-disable-next-line\nconst outSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, -100, 1010)]),\n];\n\nexport function tabsToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null || toState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return (\n    (fromState.indexOf(\"ciphers_\") === 0 && fromState.indexOf(\"ciphers_direction=b\") === -1) ||\n    fromState === \"tabs\"\n  );\n}\n\nexport function ciphersToTabs(fromState: string, toState: string) {\n  if (fromState == null || toState === null || fromState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return toState.indexOf(\"ciphers_direction=b\") === 0 || toState === \"tabs\";\n}\n\nexport function ciphersToView(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    fromState.indexOf(\"ciphers_\") === 0 &&\n    (toState === \"view-cipher\" || toState === \"add-cipher\" || toState === \"clone-cipher\")\n  );\n}\n\nexport function viewToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    (fromState === \"view-cipher\" || fromState === \"add-cipher\" || fromState === \"clone-cipher\") &&\n    toState.indexOf(\"ciphers_\") === 0\n  );\n}\n\nexport const routerTransition = trigger(\"routerTransition\", [\n  transition(\"void => home\", inSlideLeft),\n  transition(\"void => tabs\", inSlideLeft),\n\n  transition(\"home => environment, home => login, home => register\", inSlideUp),\n\n  transition(\"login => home\", outSlideDown),\n  transition(\"login => hint\", inSlideUp),\n  transition(\"login => tabs, login => 2fa\", inSlideLeft),\n\n  transition(\"hint => login, register => home, environment => home\", outSlideDown),\n\n  transition(\"2fa => login\", outSlideRight),\n  transition(\"2fa => 2fa-options\", inSlideUp),\n  transition(\"2fa-options => 2fa\", outSlideDown),\n  transition(\"2fa => tabs\", inSlideLeft),\n\n  transition(tabsToCiphers, inSlideLeft),\n  transition(ciphersToTabs, outSlideRight),\n\n  transition(ciphersToView, inSlideUp),\n  transition(viewToCiphers, outSlideDown),\n\n  transition(\"tabs => view-cipher\", inSlideUp),\n  transition(\"view-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => edit-cipher, view-cipher => cipher-password-history\", inSlideUp),\n  transition(\n    \"edit-cipher => view-cipher, cipher-password-history => view-cipher, edit-cipher => tabs\",\n    outSlideDown\n  ),\n\n  transition(\"view-cipher => clone-cipher\", inSlideUp),\n  transition(\"clone-cipher => view-cipher, clone-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => share-cipher\", inSlideUp),\n  transition(\"share-cipher => view-cipher\", outSlideDown),\n\n  transition(\"tabs => add-cipher\", inSlideUp),\n  transition(\"add-cipher => tabs\", outSlideDown),\n\n  transition(\"generator => generator-history, tabs => generator-history\", inSlideLeft),\n  transition(\"generator-history => generator, generator-history => tabs\", outSlideRight),\n\n  transition(\n    \"add-cipher => generator, edit-cipher => generator, clone-cipher => generator\",\n    inSlideUp\n  ),\n  transition(\n    \"generator => add-cipher, generator => edit-cipher, generator => clone-cipher\",\n    outSlideDown\n  ),\n\n  transition(\"edit-cipher => attachments, edit-cipher => collections\", inSlideLeft),\n  transition(\"attachments => edit-cipher, collections => edit-cipher\", outSlideRight),\n\n  transition(\"clone-cipher => attachments, clone-cipher => collections\", inSlideLeft),\n  transition(\"attachments => clone-cipher, collections => clone-cipher\", outSlideRight),\n\n  transition(\"tabs => export\", inSlideLeft),\n  transition(\"export => tabs\", outSlideRight),\n\n  transition(\"tabs => folders\", inSlideLeft),\n  transition(\"folders => tabs\", outSlideRight),\n\n  transition(\"folders => edit-folder, folders => add-folder\", inSlideUp),\n  transition(\"edit-folder => folders, add-folder => folders\", outSlideDown),\n\n  transition(\"tabs => sync\", inSlideLeft),\n  transition(\"sync => tabs\", outSlideRight),\n\n  transition(\"tabs => excluded-domains\", inSlideLeft),\n  transition(\"excluded-domains => tabs\", outSlideRight),\n\n  transition(\"tabs => options\", inSlideLeft),\n  transition(\"options => tabs\", outSlideRight),\n\n  transition(\"tabs => premium\", inSlideLeft),\n  transition(\"premium => tabs\", outSlideRight),\n\n  transition(\"tabs => lock\", inSlideDown),\n\n  transition(\"tabs => send-type\", inSlideLeft),\n  transition(\"send-type => tabs\", outSlideRight),\n\n  transition(\"tabs => add-send, send-type => add-send\", inSlideUp),\n  transition(\"add-send => tabs, add-send => send-type\", outSlideDown),\n\n  transition(\"tabs => edit-send, send-type => edit-send\", inSlideUp),\n  transition(\"edit-send => tabs, edit-send => send-type\", outSlideDown),\n]);\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  SecurityContext,\n} from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router, RouterOutlet } from \"@angular/router\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { BrowserStateService } from \"../services/abstractions/browser-state.service\";\n\nimport { routerTransition } from \"./app-routing.animations\";\n\n@Component({\n  selector: \"app-root\",\n  styles: [],\n  animations: [routerTransition],\n  template: ` <div [@routerTransition]=\"getState(o)\">\n    <router-outlet #o=\"outlet\"></router-outlet>\n  </div>`,\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  private lastActivity: number = null;\n  private activeUserId: string;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private toastrService: ToastrService,\n    private broadcasterService: BroadcasterService,\n    private authService: AuthService,\n    private i18nService: I18nService,\n    private router: Router,\n    private stateService: BrowserStateService,\n    private messagingService: MessagingService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private sanitizer: DomSanitizer,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    // Component states must not persist between closing and reopening the popup, otherwise they become dead objects\n    // Clear them aggressively to make sure this doesn't occur\n    await this.clearComponentStates();\n\n    this.stateService.activeAccount$.pipe(takeUntil(this.destroy$)).subscribe((userId) => {\n      this.activeUserId = userId;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    (window as any).bitwardenPopupMainMessageListener = async (\n      msg: any,\n      sender: any,\n      sendResponse: any\n    ) => {\n      if (msg.command === \"doneLoggingOut\") {\n        this.ngZone.run(async () => {\n          this.authService.logOut(async () => {\n            if (msg.expired) {\n              this.showToast({\n                type: \"warning\",\n                title: this.i18nService.t(\"loggedOut\"),\n                text: this.i18nService.t(\"loginExpired\"),\n              });\n            }\n\n            if (this.activeUserId === null) {\n              this.router.navigate([\"home\"]);\n            }\n          });\n          this.changeDetectorRef.detectChanges();\n        });\n      } else if (msg.command === \"authBlocked\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"home\"]);\n        });\n      } else if (msg.command === \"locked\") {\n        if (msg.userId == null || msg.userId === (await this.stateService.getUserId())) {\n          this.ngZone.run(() => {\n            this.router.navigate([\"lock\"]);\n          });\n        }\n      } else if (msg.command === \"showDialog\") {\n        await this.showDialog(msg);\n      } else if (msg.command === \"showToast\") {\n        this.ngZone.run(() => {\n          this.showToast(msg);\n        });\n      } else if (msg.command === \"reloadProcess\") {\n        const forceWindowReload =\n          this.platformUtilsService.isSafari() ||\n          this.platformUtilsService.isFirefox() ||\n          this.platformUtilsService.isOpera();\n        // Wait to make sure background has reloaded first.\n        window.setTimeout(\n          () => BrowserApi.reloadExtension(forceWindowReload ? window : null),\n          2000\n        );\n      } else if (msg.command === \"reloadPopup\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"/\"]);\n        });\n      } else if (msg.command === \"convertAccountToKeyConnector\") {\n        this.ngZone.run(async () => {\n          this.router.navigate([\"/remove-password\"]);\n        });\n      } else {\n        msg.webExtSender = sender;\n        this.broadcasterService.send(msg);\n      }\n    };\n\n    BrowserApi.messageListener(\"app.component\", (window as any).bitwardenPopupMainMessageListener);\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.router.events.pipe(takeUntil(this.destroy$)).subscribe(async (event) => {\n      if (event instanceof NavigationEnd) {\n        const url = event.urlAfterRedirects || event.url || \"\";\n        if (\n          url.startsWith(\"/tabs/\") &&\n          (window as any).previousPopupUrl != null &&\n          (window as any).previousPopupUrl.startsWith(\"/tabs/\")\n        ) {\n          await this.clearComponentStates();\n        }\n        if (url.startsWith(\"/tabs/\")) {\n          await this.stateService.setAddEditCipherInfo(null);\n        }\n        (window as any).previousPopupUrl = url;\n\n        // Clear route direction after animation (400ms)\n        if ((window as any).routeDirection != null) {\n          window.setTimeout(() => {\n            (window as any).routeDirection = null;\n          }, 400);\n        }\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  getState(outlet: RouterOutlet) {\n    if (outlet.activatedRouteData.state === \"ciphers\") {\n      const routeDirection =\n        (window as any).routeDirection != null ? (window as any).routeDirection : \"\";\n      return (\n        \"ciphers_direction=\" +\n        routeDirection +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.folderId +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.collectionId\n      );\n    } else {\n      return outlet.activatedRouteData.state;\n    }\n  }\n\n  private async recordActivity() {\n    if (this.activeUserId == null) {\n      return;\n    }\n\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    await this.stateService.setLastActive(now, { userId: this.activeUserId });\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private async showDialog(msg: any) {\n    let iconClasses: string = null;\n    const type = msg.type;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const cancelText = msg.cancelText;\n    const confirmText = msg.confirmText;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml:\n        iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined,\n      text: msg.text,\n      html: msg.html,\n      titleText: msg.title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n      timer: 300000,\n    });\n\n    this.messagingService.send(\"showDialogResolve\", {\n      dialogId: msg.dialogId,\n      confirmed: confirmed.value,\n    });\n  }\n\n  private async clearComponentStates() {\n    if (!(await this.stateService.getIsAuthenticated())) {\n      return;\n    }\n\n    await Promise.all([\n      this.stateService.setBrowserGroupingComponentState(null),\n      this.stateService.setBrowserCipherComponentState(null),\n      this.stateService.setBrowserSendComponentState(null),\n      this.stateService.setBrowserSendTypeComponentState(null),\n    ]);\n  }\n}\n","import { InjectionToken } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const MEMORY_STORAGE = new InjectionToken<AbstractStorageService>(\"MEMORY_STORAGE\");\nexport const SECURE_STORAGE = new InjectionToken<AbstractStorageService>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\nexport const LOG_MAC_FAILURES = new InjectionToken<string>(\"LOG_MAC_FAILURES\");\n","export abstract class AccountService {}\n\nexport abstract class InternalAccountService extends AccountService {\n  abstract delete(): void;\n}\n","import { ServerConfigResponse } from \"../../models/response/server-config.response\";\n\nexport abstract class ConfigApiServiceAbstraction {\n  get: () => Promise<ServerConfigResponse>;\n}\n","import { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { Decryptable } from \"../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../interfaces/initializer-metadata.interface\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport abstract class EncryptService {\n  abstract encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString>;\n  abstract encryptToBytes: (\n    plainValue: ArrayBuffer,\n    key?: SymmetricCryptoKey\n  ) => Promise<EncArrayBuffer>;\n  abstract decryptToUtf8: (encString: EncString, key: SymmetricCryptoKey) => Promise<string>;\n  abstract decryptToBytes: (encThing: IEncrypted, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  abstract resolveLegacyKey: (key: SymmetricCryptoKey, encThing: IEncrypted) => SymmetricCryptoKey;\n  abstract decryptItems: <T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ) => Promise<T[]>;\n}\n","import { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { ProviderData } from \"../models/data/provider.data\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport abstract class SettingsService {\n  settings$: Observable<AccountSettingsSettings>;\n\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { MemoryStorageOptions, StorageOptions } from \"../models/domain/storage-options\";\n\nexport abstract class AbstractStorageService {\n  abstract get<T>(key: string, options?: StorageOptions): Promise<T>;\n  abstract has(key: string, options?: StorageOptions): Promise<boolean>;\n  abstract save<T>(key: string, obj: T, options?: StorageOptions): Promise<void>;\n  abstract remove(key: string, options?: StorageOptions): Promise<void>;\n}\n\nexport abstract class AbstractCachedStorageService extends AbstractStorageService {\n  abstract getBypassCache<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n}\n\nexport interface MemoryStorageServiceInterface {\n  get<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\nexport abstract class SyncNotifierService {\n  sync$: Observable<SyncEventArgs>;\n  next: (event: SyncEventArgs) => void;\n}\n","import { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\n\nexport abstract class UserVerificationApiServiceAbstraction {\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postAccountRequestOTP: () => Promise<void>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/global-state\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/global-state\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport {\n  ServerConfigResponse,\n  ThirdPartyServerConfigResponse,\n  EnvironmentServerConfigResponse,\n} from \"../response/server-config.response\";\n\nexport class ServerConfigData {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: string;\n\n  constructor(serverConfigResponse: Partial<ServerConfigResponse>) {\n    this.version = serverConfigResponse?.version;\n    this.gitHash = serverConfigResponse?.gitHash;\n    this.server = serverConfigResponse?.server\n      ? new ThirdPartyServerConfigData(serverConfigResponse.server)\n      : null;\n    this.utcDate = new Date().toISOString();\n    this.environment = serverConfigResponse?.environment\n      ? new EnvironmentServerConfigData(serverConfigResponse.environment)\n      : null;\n  }\n\n  static fromJSON(obj: Jsonify<ServerConfigData>): ServerConfigData {\n    return Object.assign(new ServerConfigData({}), obj, {\n      server: obj?.server ? ThirdPartyServerConfigData.fromJSON(obj.server) : null,\n      environment: obj?.environment ? EnvironmentServerConfigData.fromJSON(obj.environment) : null,\n    });\n  }\n}\n\nexport class ThirdPartyServerConfigData {\n  name: string;\n  url: string;\n\n  constructor(response: Partial<ThirdPartyServerConfigResponse>) {\n    this.name = response.name;\n    this.url = response.url;\n  }\n\n  static fromJSON(obj: Jsonify<ThirdPartyServerConfigData>): ThirdPartyServerConfigData {\n    return Object.assign(new ThirdPartyServerConfigData({}), obj);\n  }\n}\n\nexport class EnvironmentServerConfigData {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(response: Partial<EnvironmentServerConfigResponse>) {\n    this.vault = response.vault;\n    this.api = response.api;\n    this.identity = response.identity;\n    this.notifications = response.notifications;\n    this.sso = response.sso;\n  }\n\n  static fromJSON(obj: Jsonify<EnvironmentServerConfigData>): EnvironmentServerConfigData {\n    return Object.assign(new EnvironmentServerConfigData({}), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { CollectionData } from \"../data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../data/encrypted-organization-key.data\";\nimport { EventData } from \"../data/event.data\";\nimport { FolderData } from \"../data/folder.data\";\nimport { OrganizationData } from \"../data/organization.data\";\nimport { PolicyData } from \"../data/policy.data\";\nimport { ProviderData } from \"../data/provider.data\";\nimport { SendData } from \"../data/send.data\";\nimport { ServerConfigData } from \"../data/server-config.data\";\nimport { CipherView } from \"../view/cipher.view\";\nimport { CollectionView } from \"../view/collection.view\";\nimport { SendView } from \"../view/send.view\";\n\nimport { EncString } from \"./enc-string\";\nimport { EnvironmentUrls } from \"./environment-urls\";\nimport { GeneratedPasswordHistory } from \"./generated-password-history\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n\n  toJSON() {\n    return {\n      encrypted: this.encrypted,\n      decrypted:\n        this.decrypted instanceof ArrayBuffer\n          ? Utils.fromBufferToByteString(this.decrypted)\n          : this.decrypted,\n    };\n  }\n\n  static fromJSON<TEncrypted, TDecrypted>(\n    obj: { encrypted?: Jsonify<TEncrypted>; decrypted?: string | Jsonify<TDecrypted> },\n    decryptedFromJson?: (decObj: Jsonify<TDecrypted> | string) => TDecrypted,\n    encryptedFromJson?: (encObj: Jsonify<TEncrypted>) => TEncrypted\n  ) {\n    if (obj == null) {\n      return null;\n    }\n\n    const pair = new EncryptionPair<TEncrypted, TDecrypted>();\n    if (obj?.encrypted != null) {\n      pair.encrypted = encryptedFromJson\n        ? encryptedFromJson(obj.encrypted)\n        : (obj.encrypted as TEncrypted);\n    }\n    if (obj?.decrypted != null) {\n      pair.decrypted = decryptedFromJson\n        ? decryptedFromJson(obj.decrypted)\n        : (obj.decrypted as TDecrypted);\n    }\n    return pair;\n  }\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\n// This is a temporary structure to handle migrated `DataEncryptionPair` to\n//  avoid needing a data migration at this stage. It should be replaced with\n//  proper data migrations when `DataEncryptionPair` is deprecated.\nexport class TemporaryDataEncryption<TEncrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders? = new TemporaryDataEncryption<FolderData>();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  > = new EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Record<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Record<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n\n  toJSON() {\n    return Utils.merge(this, {\n      publicKey: Utils.fromBufferToByteString(this.publicKey),\n    });\n  }\n\n  static fromJSON(obj: DeepJsonify<AccountKeys>): AccountKeys {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(\n      new AccountKeys(),\n      { cryptoMasterKey: SymmetricCryptoKey.fromJSON(obj?.cryptoMasterKey) },\n      {\n        cryptoSymmetricKey: EncryptionPair.fromJSON(\n          obj?.cryptoSymmetricKey,\n          SymmetricCryptoKey.fromJSON\n        ),\n      },\n      { organizationKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.organizationKeys) },\n      { providerKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.providerKeys) },\n      {\n        privateKey: EncryptionPair.fromJSON<string, ArrayBuffer>(\n          obj?.privateKey,\n          (decObj: string) => Utils.fromByteStringToArray(decObj).buffer\n        ),\n      },\n      {\n        publicKey: Utils.fromByteStringToArray(obj?.publicKey)?.buffer,\n      }\n    );\n  }\n\n  static initRecordEncryptionPairsFromJSON(obj: any) {\n    return EncryptionPair.fromJSON(obj, (decObj: any) => {\n      if (obj == null) {\n        return null;\n      }\n\n      const record: Record<string, SymmetricCryptoKey> = {};\n      for (const id in decObj) {\n        record[id] = SymmetricCryptoKey.fromJSON(decObj[id]);\n      }\n      return record;\n    });\n  }\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  name?: string;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n\n  static fromJSON(obj: Jsonify<AccountProfile>): AccountProfile {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountProfile(), obj);\n  }\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: AccountSettingsSettings; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n  serverConfig?: ServerConfigData;\n\n  static fromJSON(obj: Jsonify<AccountSettings>): AccountSettings {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountSettings(), obj, {\n      environmentUrls: EnvironmentUrls.fromJSON(obj?.environmentUrls),\n      pinProtected: EncryptionPair.fromJSON<string, EncString>(\n        obj?.pinProtected,\n        EncString.fromJSON\n      ),\n      serverConfig: ServerConfigData.fromJSON(obj?.serverConfig),\n    });\n  }\n}\n\nexport type AccountSettingsSettings = {\n  equivalentDomains?: string[][];\n};\n\nexport class AccountTokens {\n  accessToken?: string;\n  refreshToken?: string;\n  securityStamp?: string;\n\n  static fromJSON(obj: Jsonify<AccountTokens>): AccountTokens {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountTokens(), obj);\n  }\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n\n  static fromJSON(json: Jsonify<Account>): Account {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Account({}), json, {\n      keys: AccountKeys.fromJSON(json?.keys),\n      profile: AccountProfile.fromJSON(json?.profile),\n      settings: AccountSettings.fromJSON(json?.settings),\n      tokens: AccountTokens.fromJSON(json?.tokens),\n    });\n  }\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Five = 5, // Migrate to new storage of encrypted organization keys\n  Six = 6, // Delete account.keys.legacyEtmKey property\n  Latest = Six,\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environment-urls\";\nimport { WindowState } from \"./window-state\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n  enableDuckDuckGoBrowserIntegration?: boolean;\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n\n  AuthRequest = 15,\n  AuthRequestResponse = 16,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      case NotificationType.AuthRequest:\n      case NotificationType.AuthRequestResponse:\n        this.payload = new AuthRequestPushNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class AuthRequestPushNotification extends BaseResponse {\n  id: string;\n  userId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpTransportType,\n  HubConnection,\n  HubConnectionBuilder,\n  IHubProtocol,\n} from \"@microsoft/signalr\";\nimport { MessagePackHubProtocol } from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"../abstractions/anonymousHub.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\n\nimport {\n  AuthRequestPushNotification,\n  NotificationResponse,\n} from \"./../models/response/notification.response\";\n\n@Injectable()\nexport class AnonymousHubService implements AnonymousHubServiceAbstraction {\n  private anonHubConnection: HubConnection;\n  private url: string;\n\n  constructor(\n    private environmentService: EnvironmentService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async createHubConnection(token: string) {\n    this.url = this.environmentService.getNotificationsUrl();\n\n    this.anonHubConnection = new HubConnectionBuilder()\n      .withUrl(this.url + \"/anonymous-hub?Token=\" + token, {\n        skipNegotiation: true,\n        transport: HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new MessagePackHubProtocol() as IHubProtocol)\n      .build();\n\n    this.anonHubConnection.start().catch((error) => this.logService.error(error));\n\n    this.anonHubConnection.on(\"AuthRequestResponseRecieved\", (data: any) => {\n      this.ProcessNotification(new NotificationResponse(data));\n    });\n  }\n\n  stopHubConnection() {\n    if (this.anonHubConnection) {\n      this.anonHubConnection.stop();\n    }\n  }\n\n  private async ProcessNotification(notification: NotificationResponse) {\n    await this.authService.authResponsePushNotifiction(\n      notification.payload as AuthRequestPushNotification\n    );\n  }\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n  protected passwordlessAuthRequest: string;\n\n  constructor(protected twoFactor: TokenTwoFactorRequest, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenTwoFactorRequest) {\n    this.twoFactor = twoFactor;\n  }\n\n  setPasswordlessAccessCode(accessCode: string) {\n    this.passwordlessAuthRequest = accessCode;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    //passswordless login\n    if (this.passwordlessAuthRequest) {\n      obj.authRequest = this.passwordlessAuthRequest;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nimport { LoginUriApi } from \"./login-uri.api\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/card.api\";\nimport { FieldApi } from \"../api/field.api\";\nimport { IdentityApi } from \"../api/identity.api\";\nimport { LoginApi } from \"../api/login.api\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\n\nimport { AttachmentResponse } from \"./attachment.response\";\nimport { BaseResponse } from \"./base.response\";\nimport { PasswordHistoryResponse } from \"./password-history.response\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class AuthRequestResponse extends BaseResponse {\n  id: string;\n  publicKey: string;\n  requestDeviceType: DeviceType;\n  requestIpAddress: string;\n  key: string;\n  masterPasswordHash: string;\n  creationDate: string;\n  requestApproved: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n    this.requestDeviceType = this.getResponseProperty(\"RequestDeviceType\");\n    this.requestIpAddress = this.getResponseProperty(\"RequestIpAddress\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.masterPasswordHash = this.getResponseProperty(\"MasterPasswordHash\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.requestApproved = this.getResponseProperty(\"RequestApproved\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nimport { ICaptchaProtectedResponse } from \"./captcha-protected.response\";\n\nexport class RegisterResponse extends BaseResponse implements ICaptchaProtectedResponse {\n  captchaBypassToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaBypassToken = this.getResponseProperty(\"CaptchaBypassToken\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billing.response\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { BillingSourceResponse } from \"./billing.response\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { SelectionReadOnlyResponse } from \"./selection-read-only.response\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { GlobalDomainResponse } from \"./global-domain.response\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventSystemUser } from \"../../enums/event-system-user\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n  systemUser: EventSystemUser;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n    this.systemUser = this.getResponseProperty(\"SystemUser\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { SelectionReadOnlyResponse } from \"./selection-read-only.response\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"../api/billing-sync-config.api\";\nimport { ScimConfigApi } from \"../api/scim-config.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi | ScimConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\nimport { CollectionResponse } from \"./collection.response\";\nimport { ListResponse } from \"./list.response\";\n\nexport class OrganizationExportResponse extends BaseResponse {\n  collections: ListResponse<CollectionResponse>;\n  ciphers: ListResponse<CipherResponse>;\n\n  constructor(response: any) {\n    super(response);\n    this.collections = this.getResponseProperty(\"Collections\");\n    this.ciphers = this.getResponseProperty(\"Ciphers\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n  manageScim: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n    this.manageScim = this.getResponseProperty(\"ManageScim\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { SelectionReadOnlyResponse } from \"./selection-read-only.response\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useScim = this.getResponseProperty(\"UseScim\") ?? false;\n    this.useCustomPermissions = this.getResponseProperty(\"UseCustomPermissions\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profile-organization.response\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { ProfileOrganizationResponse } from \"./profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"./profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"./profile-provider.response\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { ProfileResponse } from \"./profile.response\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n  userCount: number;\n  seats?: number;\n  plan?: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.userCount = this.getResponseProperty(\"UserCount\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.plan = this.getResponseProperty(\"Plan\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organization-user-bulk-public-key.response\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissions.api\";\nimport { BaseResponse } from \"../base.response\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { SendResponse } from \"./send.response\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\nimport { CollectionDetailsResponse } from \"./collection.response\";\nimport { DomainsResponse } from \"./domains.response\";\nimport { FolderResponse } from \"./folder.response\";\nimport { PolicyResponse } from \"./policy.response\";\nimport { ProfileResponse } from \"./profile.response\";\nimport { SendResponse } from \"./send.response\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { BitPayInvoiceRequest } from \"../models/request/bit-pay-invoice.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CollectionRequest } from \"../models/request/collection.request\";\nimport { DeleteRecoverRequest } from \"../models/request/delete-recover.request\";\nimport { DeviceVerificationRequest } from \"../models/request/device-verification.request\";\nimport { DeviceRequest } from \"../models/request/device.request\";\nimport { EmailTokenRequest } from \"../models/request/email-token.request\";\nimport { EmailRequest } from \"../models/request/email.request\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergency-access-accept.request\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergency-access-confirm.request\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergency-access-invite.request\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergency-access-password.request\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergency-access-update.request\";\nimport { EventRequest } from \"../models/request/event.request\";\nimport { GroupRequest } from \"../models/request/group.request\";\nimport { IapCheckRequest } from \"../models/request/iap-check.request\";\nimport { ApiTokenRequest } from \"../models/request/identity-token/api-token.request\";\nimport { PasswordTokenRequest } from \"../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../models/request/identity-token/sso-token.request\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { ImportCiphersRequest } from \"../models/request/import-ciphers.request\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/import-organization-ciphers.request\";\nimport { KdfRequest } from \"../models/request/kdf.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { OrganizationConnectionRequest } from \"../models/request/organization-connection.request\";\nimport { OrganizationImportRequest } from \"../models/request/organization-import.request\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organization-user-accept.request\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organization-user-bulk-confirm.request\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organization-user-bulk.request\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organization-user-confirm.request\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organization-user-invite.request\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organization-user-reset-password-enrollment.request\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organization-user-reset-password.request\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organization-user-update-groups.request\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organization-user-update.request\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organization-sponsorship-create.request\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organization-sponsorship-redeem.request\";\nimport { PasswordHintRequest } from \"../models/request/password-hint.request\";\nimport { PasswordRequest } from \"../models/request/password.request\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordless-create-auth.request\";\nimport { PaymentRequest } from \"../models/request/payment.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/provider-add-organization.request\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/provider-organization-create.request\";\nimport { ProviderSetupRequest } from \"../models/request/provider/provider-setup.request\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/provider-update.request\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/provider-user-accept.request\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/provider-user-confirm.request\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/provider-user-update.request\";\nimport { RegisterRequest } from \"../models/request/register.request\";\nimport { SecretVerificationRequest } from \"../models/request/secret-verification.request\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selection-read-only.request\";\nimport { SendAccessRequest } from \"../models/request/send-access.request\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { SetPasswordRequest } from \"../models/request/set-password.request\";\nimport { StorageRequest } from \"../models/request/storage.request\";\nimport { TaxInfoUpdateRequest } from \"../models/request/tax-info-update.request\";\nimport { TwoFactorEmailRequest } from \"../models/request/two-factor-email.request\";\nimport { TwoFactorProviderRequest } from \"../models/request/two-factor-provider.request\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/two-factor-recovery.request\";\nimport { UpdateDomainsRequest } from \"../models/request/update-domains.request\";\nimport { UpdateKeyRequest } from \"../models/request/update-key.request\";\nimport { UpdateProfileRequest } from \"../models/request/update-profile.request\";\nimport { UpdateTempPasswordRequest } from \"../models/request/update-temp-password.request\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/update-two-factor-authenticator.request\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/update-two-factor-duo.request\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/update-two-factor-email.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/update-two-factor-web-authn.request\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/update-two-factor-yubio-otp.request\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verify-delete-recover.request\";\nimport { VerifyEmailRequest } from \"../models/request/verify-email.request\";\nimport { ApiKeyResponse } from \"../models/response/api-key.response\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { AttachmentResponse } from \"../models/response/attachment.response\";\nimport { AuthRequestResponse } from \"../models/response/auth-request.response\";\nimport { RegisterResponse } from \"../models/response/authentication/register.response\";\nimport { BillingHistoryResponse } from \"../models/response/billing-history.response\";\nimport { BillingPaymentResponse } from \"../models/response/billing-payment.response\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collection.response\";\nimport { DeviceVerificationResponse } from \"../models/response/device-verification.response\";\nimport { DomainsResponse } from \"../models/response/domains.response\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergency-access.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { EventResponse } from \"../models/response/event.response\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/group.response\";\nimport { IdentityCaptchaResponse } from \"../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/key-connector-user-key.response\";\nimport { ListResponse } from \"../models/response/list.response\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organization-connection.response\";\nimport { OrganizationExportResponse } from \"../models/response/organization-export.response\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organization-sponsorship-sync-status.response\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organization-user-bulk-public-key.response\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organization-user-bulk.response\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n} from \"../models/response/organization-user.response\";\nimport { PaymentResponse } from \"../models/response/payment.response\";\nimport { PlanResponse } from \"../models/response/plan.response\";\nimport { PolicyResponse } from \"../models/response/policy.response\";\nimport { PreloginResponse } from \"../models/response/prelogin.response\";\nimport { ProfileResponse } from \"../models/response/profile.response\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/provider-organization.response\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/provider-user-bulk-public-key.response\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/provider-user-bulk.response\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/provider-user.response\";\nimport { ProviderResponse } from \"../models/response/provider/provider.response\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selection-read-only.response\";\nimport { SendAccessResponse } from \"../models/response/send-access.response\";\nimport { SendFileDownloadDataResponse } from \"../models/response/send-file-download-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SsoPreValidateResponse } from \"../models/response/sso-pre-validate.response\";\nimport { SubscriptionResponse } from \"../models/response/subscription.response\";\nimport { SyncResponse } from \"../models/response/sync.response\";\nimport { TaxInfoResponse } from \"../models/response/tax-info.response\";\nimport { TaxRateResponse } from \"../models/response/tax-rate.response\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/two-factor-authenticator.response\";\nimport { TwoFactorDuoResponse } from \"../models/response/two-factor-duo.response\";\nimport { TwoFactorEmailResponse } from \"../models/response/two-factor-email.response\";\nimport { TwoFactorProviderResponse } from \"../models/response/two-factor-provider.response\";\nimport { TwoFactorRecoverResponse } from \"../models/response/two-factor-recover.response\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/two-factor-web-authn.response\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/two-factor-yubi-key.response\";\nimport { UserKeyResponse } from \"../models/response/user-key.response\";\nimport { SendAccessView } from \"../models/view/send-access.view\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  async postAuthRequest(request: PasswordlessCreateAuthRequest): Promise<AuthRequestResponse> {\n    const r = await this.send(\"POST\", \"/auth-requests/\", request, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  async getAuthResponse(id: string, accessCode: string): Promise<AuthRequestResponse> {\n    const path = `/auth-requests/${id}/response?code=${accessCode}`;\n    const r = await this.send(\"GET\", path, null, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.environmentService.getIdentityUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  async postRegister(request: RegisterRequest): Promise<RegisterResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      true,\n      this.environmentService.getIdentityUrl()\n    );\n    return new RegisterResponse(r);\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<void> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getFullCipherDetails(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/details\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putPartialCipher(id: string, request: CipherPartialRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/partial\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  revokeOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/revoke\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async revokeManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/revoke\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  restoreOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/restore\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async restoreManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/restore\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, false, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async getKnownDevice(email: string, deviceIdentifier: string): Promise<boolean> {\n    const path = `/devices/knowndevice/${email}/${deviceIdentifier}`;\n    const r = await this.send(\"GET\", path, null, false, true);\n    return r as boolean;\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getOrganizationExport(organizationId: string): Promise<OrganizationExportResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/export\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationExportResponse(r);\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersionNumber()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    const tokenRequest = new ApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenTwoFactorRequest(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    const responseType = response.headers.get(\"content-type\");\n    const responseIsJson = responseType != null && responseType.indexOf(\"application/json\") !== -1;\n    if (hasResponse && response.status === 200 && responseIsJson) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    if (authed) {\n      if (\n        response.status === 401 ||\n        response.status === 403 ||\n        (tokenError &&\n          response.status === 400 &&\n          responseJson != null &&\n          responseJson.error === \"invalid_grant\")\n      ) {\n        await this.logoutCallback(true);\n        return null;\n      }\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: AbstractStorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../../models/domain/log-in-credentials\";\nimport { DeviceRequest } from \"../../models/request/device.request\";\nimport { ApiTokenRequest } from \"../../models/request/identity-token/api-token.request\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../../models/request/identity-token/sso-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\nimport { KeysRequest } from \"../../models/request/keys.request\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identity-two-factor.response\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials:\n      | ApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenTwoFactorRequest) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenTwoFactorRequest(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenTwoFactorRequest();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            name: accountInformation.name,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { ApiTokenRequest } from \"../../models/request/identity-token/api-token.request\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captcha-protected.request\";\nimport { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport { PasswordLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport { PasswordlessLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordlessLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get accessCode() {\n    return this.passwordlessCredentials.accessCode;\n  }\n\n  get authRequestId() {\n    return this.passwordlessCredentials.authRequestId;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n  private passwordlessCredentials: PasswordlessLogInCredentials;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.passwordlessCredentials.decKey);\n    await this.cryptoService.setKeyHash(this.passwordlessCredentials.localPasswordHash);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordlessLogInCredentials) {\n    this.passwordlessCredentials = credentials;\n\n    this.tokenRequest = new PasswordTokenRequest(\n      credentials.email,\n      credentials.accessCode,\n      null,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    this.tokenRequest.setPasswordlessAccessCode(credentials.authRequestId);\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { SsoTokenRequest } from \"../../models/request/identity-token/sso-token.request\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { PasswordlessLogInStrategy } from \"../misc/logInStrategies/passwordlessLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { AuthRequestPushNotification } from \"../models/response/notification.response\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    if (\n      this.logInStrategy instanceof PasswordLogInStrategy ||\n      this.logInStrategy instanceof PasswordlessLogInStrategy\n    ) {\n      return this.logInStrategy.email;\n    }\n\n    return null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  get accessCode(): string {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy\n      ? this.logInStrategy.accessCode\n      : null;\n  }\n\n  get authRequestId(): string {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy\n      ? this.logInStrategy.authRequestId\n      : null;\n  }\n\n  private logInStrategy:\n    | ApiLogInStrategy\n    | PasswordLogInStrategy\n    | SsoLogInStrategy\n    | PasswordlessLogInStrategy;\n  private sessionTimeout: any;\n\n  private pushNotificationSubject = new Subject<string>();\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials:\n      | ApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy:\n      | ApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy;\n\n    switch (credentials.type) {\n      case AuthenticationType.Password:\n        strategy = new PasswordLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n      case AuthenticationType.Sso:\n        strategy = new SsoLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.Api:\n        strategy = new ApiLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.environmentService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.Passwordless:\n        strategy = new PasswordlessLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  authingWithPasswordless(): boolean {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  async authResponsePushNotifiction(notification: AuthRequestPushNotification): Promise<any> {\n    this.pushNotificationSubject.next(notification.id);\n  }\n\n  getPushNotifcationObs$(): Observable<any> {\n    return this.pushNotificationSubject.asObservable();\n  }\n\n  private saveState(\n    strategy:\n      | ApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy\n  ) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { AttachmentResponse } from \"../response/attachment.response\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/card.api\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/field.api\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identity.api\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/login-uri.api\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/login.api\";\n\nimport { LoginUriData } from \"./login-uri.data\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/password-history.response\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipher.response\";\n\nimport { AttachmentData } from \"./attachment.data\";\nimport { CardData } from \"./card.data\";\nimport { FieldData } from \"./field.data\";\nimport { IdentityData } from \"./identity.data\";\nimport { LoginData } from \"./login.data\";\nimport { PasswordHistoryData } from \"./password-history.data\";\nimport { SecureNoteData } from \"./secure-note.data\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.creationDate = response.creationDate;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachment.data\";\nimport { AttachmentView } from \"../view/attachment.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      view.key = await this.decryptAttachmentKey(orgId, encKey);\n    }\n\n    return view;\n  }\n\n  private async decryptAttachmentKey(orgId: string, encKey?: SymmetricCryptoKey) {\n    try {\n      if (encKey == null) {\n        encKey = await this.getKeyForDecryption(orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      const decValue = await encryptService.decryptToBytes(this.key, encKey);\n      return new SymmetricCryptoKey(decValue);\n    } catch (e) {\n      // TODO: error?\n    }\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Attachment>>): Attachment {\n    if (obj == null) {\n      return null;\n    }\n\n    const key = EncString.fromJSON(obj.key);\n    const fileName = EncString.fromJSON(obj.fileName);\n\n    return Object.assign(new Attachment(), obj, {\n      key,\n      fileName,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardData } from \"../data/card.data\";\nimport { CardView } from \"../view/card.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Card>>): Card {\n    if (obj == null) {\n      return null;\n    }\n\n    const cardholderName = EncString.fromJSON(obj.cardholderName);\n    const brand = EncString.fromJSON(obj.brand);\n    const number = EncString.fromJSON(obj.number);\n    const expMonth = EncString.fromJSON(obj.expMonth);\n    const expYear = EncString.fromJSON(obj.expYear);\n    const code = EncString.fromJSON(obj.code);\n    return Object.assign(new Card(), obj, {\n      cardholderName,\n      brand,\n      number,\n      expMonth,\n      expYear,\n      code,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/field.data\";\nimport { FieldView } from \"../view/field.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Field>>): Field {\n    if (obj == null) {\n      return null;\n    }\n\n    const name = EncString.fromJSON(obj.name);\n    const value = EncString.fromJSON(obj.value);\n\n    return Object.assign(new Field(), obj, {\n      name,\n      value,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityData } from \"../data/identity.data\";\nimport { IdentityView } from \"../view/identity.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n\n  static fromJSON(obj: Jsonify<Identity>): Identity {\n    if (obj == null) {\n      return null;\n    }\n\n    const title = EncString.fromJSON(obj.title);\n    const firstName = EncString.fromJSON(obj.firstName);\n    const middleName = EncString.fromJSON(obj.middleName);\n    const lastName = EncString.fromJSON(obj.lastName);\n    const address1 = EncString.fromJSON(obj.address1);\n    const address2 = EncString.fromJSON(obj.address2);\n    const address3 = EncString.fromJSON(obj.address3);\n    const city = EncString.fromJSON(obj.city);\n    const state = EncString.fromJSON(obj.state);\n    const postalCode = EncString.fromJSON(obj.postalCode);\n    const country = EncString.fromJSON(obj.country);\n    const company = EncString.fromJSON(obj.company);\n    const email = EncString.fromJSON(obj.email);\n    const phone = EncString.fromJSON(obj.phone);\n    const ssn = EncString.fromJSON(obj.ssn);\n    const username = EncString.fromJSON(obj.username);\n    const passportNumber = EncString.fromJSON(obj.passportNumber);\n    const licenseNumber = EncString.fromJSON(obj.licenseNumber);\n\n    return Object.assign(new Identity(), obj, {\n      title,\n      firstName,\n      middleName,\n      lastName,\n      address1,\n      address2,\n      address3,\n      city,\n      state,\n      postalCode,\n      country,\n      company,\n      email,\n      phone,\n      ssn,\n      username,\n      passportNumber,\n      licenseNumber,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/login-uri.data\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n\n  static fromJSON(obj: Jsonify<LoginUri>): LoginUri {\n    if (obj == null) {\n      return null;\n    }\n\n    const uri = EncString.fromJSON(obj.uri);\n    return Object.assign(new LoginUri(), obj, {\n      uri,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginData } from \"../data/login.data\";\nimport { LoginView } from \"../view/login.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { LoginUri } from \"./login-uri\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Login>>): Login {\n    if (obj == null) {\n      return null;\n    }\n\n    const username = EncString.fromJSON(obj.username);\n    const password = EncString.fromJSON(obj.password);\n    const totp = EncString.fromJSON(obj.totp);\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUri.fromJSON(uri));\n\n    return Object.assign(new Login(), obj, {\n      username,\n      password,\n      totp,\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { PasswordHistoryData } from \"../data/password-history.data\";\nimport { PasswordHistoryView } from \"../view/password-history.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Password>>): Password {\n    if (obj == null) {\n      return null;\n    }\n\n    const password = EncString.fromJSON(obj.password);\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new Password(), obj, {\n      password,\n      lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secure-note.data\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nimport Domain from \"./domain-base\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n\n  static fromJSON(obj: Jsonify<SecureNote>): SecureNote {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new SecureNote(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerKey } from \"../../services/cryptography/initializer-key\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { LocalData } from \"../data/local.data\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secure-note\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Cipher extends Domain implements Decryptable<CipherView> {\n  readonly initializerKey = InitializerKey.Cipher;\n\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: LocalData;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  creationDate: Date;\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: LocalData = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.creationDate = this.creationDate != null ? this.creationDate.toISOString() : null;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n\n  static fromJSON(obj: Jsonify<Cipher>) {\n    if (obj == null) {\n      return null;\n    }\n\n    const domain = new Cipher();\n    const name = EncString.fromJSON(obj.name);\n    const notes = EncString.fromJSON(obj.notes);\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => Attachment.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => Field.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => Password.fromJSON(ph));\n\n    Object.assign(domain, obj, {\n      name,\n      notes,\n      revisionDate,\n      deletedDate,\n      attachments,\n      fields,\n      passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        domain.card = Card.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        domain.login = Login.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return domain;\n  }\n}\n","import { CipherView } from \"../view/cipher.view\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/card.api\";\nimport { FieldApi } from \"../api/field.api\";\nimport { IdentityApi } from \"../api/identity.api\";\nimport { LoginUriApi } from \"../api/login-uri.api\";\nimport { LoginApi } from \"../api/login.api\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachment.request\";\nimport { PasswordHistoryRequest } from \"./password-history.request\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipher-with-id.request\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nexport class CipherPartialRequest {\n  folderId: string;\n  favorite: boolean;\n\n  constructor(cipher: Cipher) {\n    this.folderId = cipher.folderId;\n    this.favorite = cipher.favorite;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domain-base\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/login-uri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secure-note\";\nimport { SortedCiphersCache } from \"../models/domain/sorted-ciphers-cache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipher-bulk-restore.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { AttachmentView } from \"../models/view/attachment.view\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { FieldView } from \"../models/view/field.view\";\nimport { PasswordHistoryView } from \"../models/view/password-history.view\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService,\n    private encryptService: EncryptService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n    cipher.edit = model.edit;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    if ((await this.getDecryptedCipherCache()) != null) {\n      await this.reindexCiphers();\n      return await this.getDecryptedCipherCache();\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const ciphers = await this.getAll();\n    const orgKeys = await this.cryptoService.getOrgKeys();\n    const userKey = await this.cryptoService.getKeyForUserEncryption();\n\n    // Group ciphers by orgId or under 'null' for the user's ciphers\n    const grouped = ciphers.reduce((agg, c) => {\n      agg[c.organizationId] ??= [];\n      agg[c.organizationId].push(c);\n      return agg;\n    }, {} as Record<string, Cipher[]>);\n\n    const decCiphers = (\n      await Promise.all(\n        Object.entries(grouped).map(([orgId, groupedCiphers]) =>\n          this.encryptService.decryptItems(groupedCiphers, orgKeys.get(orgId) ?? userKey)\n        )\n      )\n    )\n      .flat()\n      .sort(this.getLocaleSortingFunction());\n\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  private async reindexCiphers() {\n    const userId = await this.stateService.getUserId();\n    const reindexRequired =\n      this.searchService != null && (this.searchService().indexedEntityId ?? userId) !== userId;\n    if (reindexRequired) {\n      await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n    }\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : firstValueFrom(this.settingsService.settings$).then(\n            (settings: AccountSettingsSettings) => {\n              let matches: any[] = [];\n              settings?.equivalentDomains?.forEach((eqDomain: any) => {\n                if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                  matches = matches.concat(eqDomain);\n                }\n              });\n\n              if (!matches.length) {\n                matches.push(domain);\n              }\n\n              return matches;\n            }\n          );\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const response = await this.apiService.getCiphersOrganization(organizationId);\n    if (response?.data == null || response.data.length < 1) {\n      return [];\n    }\n\n    const ciphers = response.data.map((cr) => new Cipher(new CipherData(cr)));\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const decCiphers = await this.encryptService.decryptItems(ciphers, key);\n\n    decCiphers.sort(this.getLocaleSortingFunction());\n    return decCiphers;\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async createWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.collectionIds != null) {\n      const request = new CipherCreateRequest(cipher);\n      response = await this.apiService.postCipherCreate(request);\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.postCipher(request);\n    }\n    cipher.id = response.id;\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async updateWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.edit) {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    } else {\n      const request = new CipherPartialRequest(cipher);\n      response = await this.apiService.putPartialCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const encBuf = await EncArrayBuffer.fromResponse(attachmentResponse);\n    const decBuf = await this.cryptoService.decryptFromBytes(encBuf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collection.response\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/tree-node\";\nimport { CollectionGroupDetailsResponse } from \"../response/collection.response\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { CollectionData } from \"../data/collection.data\";\nimport { CollectionView } from \"../view/collection.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/tree-node\";\nimport { CollectionView } from \"../models/view/collection.view\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ServerConfigResponse extends BaseResponse {\n  version: string;\n  gitHash: string;\n  server: ThirdPartyServerConfigResponse;\n  environment: EnvironmentServerConfigResponse;\n\n  constructor(response: any) {\n    super(response);\n\n    if (response == null) {\n      return;\n    }\n\n    this.version = this.getResponseProperty(\"Version\");\n    this.gitHash = this.getResponseProperty(\"GitHash\");\n    this.server = new ThirdPartyServerConfigResponse(this.getResponseProperty(\"Server\"));\n    this.environment = new EnvironmentServerConfigResponse(this.getResponseProperty(\"Environment\"));\n  }\n}\n\nexport class EnvironmentServerConfigResponse extends BaseResponse {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.vault = this.getResponseProperty(\"Vault\");\n    this.api = this.getResponseProperty(\"Api\");\n    this.identity = this.getResponseProperty(\"Identity\");\n    this.notifications = this.getResponseProperty(\"Notifications\");\n    this.sso = this.getResponseProperty(\"Sso\");\n  }\n}\n\nexport class ThirdPartyServerConfigResponse extends BaseResponse {\n  name: string;\n  url: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.name = this.getResponseProperty(\"Name\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import {\n  ServerConfigData,\n  ThirdPartyServerConfigData,\n  EnvironmentServerConfigData,\n} from \"../../models/data/server-config.data\";\n\nconst dayInMilliseconds = 24 * 3600 * 1000;\nconst eighteenHoursInMilliseconds = 18 * 3600 * 1000;\n\nexport class ServerConfig {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: Date;\n\n  constructor(serverConfigData: ServerConfigData) {\n    this.version = serverConfigData.version;\n    this.gitHash = serverConfigData.gitHash;\n    this.server = serverConfigData.server;\n    this.utcDate = new Date(serverConfigData.utcDate);\n    this.environment = serverConfigData.environment;\n\n    if (this.server?.name == null && this.server?.url == null) {\n      this.server = null;\n    }\n  }\n\n  private getAgeInMilliseconds(): number {\n    return new Date().getTime() - this.utcDate?.getTime();\n  }\n\n  isValid(): boolean {\n    return this.getAgeInMilliseconds() <= dayInMilliseconds;\n  }\n\n  expiresSoon(): boolean {\n    return this.getAgeInMilliseconds() >= eighteenHoursInMilliseconds;\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EFFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptedOrganizationKeyData } from \"../data/encrypted-organization-key.data\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport abstract class BaseEncryptedOrganizationKey {\n  decrypt: (cryptoService: CryptoService) => Promise<SymmetricCryptoKey>;\n\n  static fromData(data: EncryptedOrganizationKeyData) {\n    switch (data.type) {\n      case \"organization\":\n        return new EncryptedOrganizationKey(data.key);\n\n      case \"provider\":\n        return new ProviderEncryptedOrganizationKey(data.key, data.providerId);\n\n      default:\n        return null;\n    }\n  }\n}\n\nexport class EncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const decValue = await cryptoService.rsaDecrypt(this.key);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"organization\",\n      key: this.key,\n    };\n  }\n}\n\nexport class ProviderEncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string, private providerId: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const providerKey = await cryptoService.getProviderKey(this.providerId);\n    const decValue = await cryptoService.decryptToBytes(new EncString(this.key), providerKey);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"provider\",\n      key: this.key,\n      providerId: this.providerId,\n    };\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { BaseEncryptedOrganizationKey } from \"../models/domain/encrypted-organization-key\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { ProfileOrganizationResponse } from \"../models/response/profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"../models/response/profile-provider.response\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private encryptService: EncryptService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[] = [],\n    providerOrgs: ProfileProviderOrganizationResponse[] = []\n  ): Promise<void> {\n    const encOrgKeyData: { [orgId: string]: EncryptedOrganizationKeyData } = {};\n\n    orgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"organization\",\n        key: org.key,\n      };\n    });\n\n    providerOrgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"provider\",\n        providerId: org.providerId,\n        key: org.key,\n      };\n    });\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(encOrgKeyData);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const result: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeyData = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeyData == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId of Object.keys(encOrgKeyData)) {\n      if (result.has(orgId)) {\n        continue;\n      }\n\n      const encOrgKey = BaseEncryptedOrganizationKey.fromData(encOrgKeyData[orgId]);\n      const decOrgKey = await encOrgKey.decrypt(this);\n      result.set(orgId, decOrgKey);\n\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(result);\n    }\n\n    return result;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForUserEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encrypt\n   */\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.encrypt(plainValue, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encryptToBytes\n   */\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    key = await this.getKeyForUserEncryption(key);\n    return this.encryptService.encryptToBytes(plainValue, key);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForUserEncryption(key);\n    return this.encryptService.decryptToBytes(encString, keyForEnc);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToUtf8\n   */\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.decryptToUtf8(encString, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptFromBytes(encBuffer: EncArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuffer == null) {\n      throw new Error(\"No buffer provided for decryption.\");\n    }\n\n    key = await this.getKeyForUserEncryption(key);\n\n    return this.encryptService.decryptToBytes(encBuffer, key);\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // ---HELPERS---\n\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  async getKeyForUserEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    // Legacy support: encryption used to be done with the user key (derived from master password).\n    // Users who have not migrated will have a null encKey and must use the user key instead.\n    return await this.getKey();\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EFFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EFFLongWordList.length);\n      hashNumber = hashNumber.divide(EFFLongWordList.length);\n      phrase.push(EFFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { CryptoFunctionService } from \"../../abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"../../abstractions/encrypt.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Utils } from \"../../misc/utils\";\nimport { EncArrayBuffer } from \"../../models/domain/enc-array-buffer\";\nimport { EncString } from \"../../models/domain/enc-string\";\nimport { EncryptedObject } from \"../../models/domain/encrypted-object\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nexport class EncryptServiceImplementation implements EncryptService {\n  constructor(\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  async decryptToBytes(encThing: IEncrypted, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        key.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey\n    );\n\n    return result ?? null;\n  }\n\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    return await Promise.all(items.map((item) => item.decrypt(key)));\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: IEncrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Cipher } from \"../../models/domain/cipher\";\nimport { CipherView } from \"../../models/view/cipher.view\";\n\nimport { InitializerKey } from \"./initializer-key\";\n\n/**\n * Internal reference of classes so we can reconstruct objects properly.\n * Each entry should be keyed using the Decryptable.initializerKey property\n */\nconst classInitializers: Record<InitializerKey, (obj: any) => any> = {\n  [InitializerKey.Cipher]: Cipher.fromJSON,\n  [InitializerKey.CipherView]: CipherView.fromJSON,\n};\n\nexport function getClassInitializer<T extends InitializerMetadata>(\n  className: InitializerKey\n): (obj: Jsonify<T>) => T {\n  return classInitializers[className];\n}\n","import { defaultIfEmpty, filter, firstValueFrom, fromEvent, map, Subject, takeUntil } from \"rxjs\";\nimport { Jsonify } from \"type-fest\";\n\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Utils } from \"../../misc/utils\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nimport { EncryptServiceImplementation } from \"./encrypt.service.implementation\";\nimport { getClassInitializer } from \"./get-class-initializer\";\n\n// TTL (time to live) is not strictly required but avoids tying up memory resources if inactive\nconst workerTTL = 3 * 60000; // 3 minutes\n\nexport class MultithreadEncryptServiceImplementation extends EncryptServiceImplementation {\n  private worker: Worker;\n  private timeout: any;\n\n  private clear$ = new Subject<void>();\n\n  /**\n   * Sends items to a web worker to decrypt them.\n   * This utilises multithreading to decrypt items faster without interrupting other operations (e.g. updating UI).\n   */\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    this.logService.info(\"Starting decryption using multithreading\");\n\n    this.worker ??= new Worker(\n      new URL(\n        /* webpackChunkName: 'encrypt-worker' */\n        \"@bitwarden/common/services/cryptography/encrypt.worker.ts\",\n        import.meta.url\n      )\n    );\n\n    this.restartTimeout();\n\n    const request = {\n      id: Utils.newGuid(),\n      items: items,\n      key: key,\n    };\n\n    this.worker.postMessage(JSON.stringify(request));\n\n    return await firstValueFrom(\n      fromEvent(this.worker, \"message\").pipe(\n        filter((response: MessageEvent) => response.data?.id === request.id),\n        map((response) => JSON.parse(response.data.items)),\n        map((items) =>\n          items.map((jsonItem: Jsonify<T>) => {\n            const initializer = getClassInitializer<T>(jsonItem.initializerKey);\n            return initializer(jsonItem);\n          })\n        ),\n        takeUntil(this.clear$),\n        defaultIfEmpty([])\n      )\n    );\n  }\n\n  private clear() {\n    this.clear$.next();\n    this.worker?.terminate();\n    this.worker = null;\n    this.clearTimeout();\n  }\n\n  private restartTimeout() {\n    this.clearTimeout();\n    this.timeout = setTimeout(() => this.clear(), workerTTL);\n  }\n\n  private clearTimeout() {\n    if (this.timeout != null) {\n      clearTimeout(this.timeout);\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/event.data\";\nimport { EventRequest } from \"../models/request/event.request\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false,\n    organizationId: string = null\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    if (organizationId != null) {\n      if (!orgIds.has(organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    event.organizationId = organizationId;\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      req.organizationId = e.organizationId;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CardView } from \"../view/card.view\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/enc-string\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/field.view\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identity.view\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/enc-string\";\nimport { LoginUri as LoginUriDomain } from \"../domain/login-uri\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/login.view\";\n\nimport { LoginUriExport } from \"./login-uri.export\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secure-note\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { CardExport } from \"./card.export\";\nimport { FieldExport } from \"./field.export\";\nimport { IdentityExport } from \"./identity.export\";\nimport { LoginExport } from \"./login.export\";\nimport { SecureNoteExport } from \"./secure-note.export\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { CipherExport } from \"./cipher.export\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CollectionView } from \"../view/collection.view\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collection.view\";\n\nimport { CollectionExport } from \"./collection.export\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/event.view\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FolderData } from \"../data/folder.data\";\nimport { FolderView } from \"../view/folder.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n\n  static fromJSON(obj: Jsonify<Folder>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new Folder(), obj, { name: EncString.fromJSON(obj.name), revisionDate });\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folder.view\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folder.view\";\n\nimport { FolderExport } from \"./folder.export\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import * as papa from \"papaparse\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipher-with-ids.export\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collection-with-id.export\";\nimport { EventExport } from \"../models/export/event.export\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folder-with-id.export\";\nimport { CollectionDetailsResponse } from \"../models/response/collection.response\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { EventView } from \"../models/view/event.view\";\nimport { FolderView } from \"../models/view/folder.view\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folderViews$).then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folders$).then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getOrganizationExport(organizationId).then((exportData) => {\n        const exportPromises: any = [];\n        if (exportData != null) {\n          if (\n            exportData.collections != null &&\n            exportData.collections.data != null &&\n            exportData.collections.data.length > 0\n          ) {\n            exportData.collections.data.forEach((c) => {\n              const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n              exportPromises.push(\n                collection.decrypt().then((decCol) => {\n                  decCollections.push(decCol);\n                })\n              );\n            });\n          }\n          if (\n            exportData.ciphers != null &&\n            exportData.ciphers.data != null &&\n            exportData.ciphers.data.length > 0\n          ) {\n            exportData.ciphers.data\n              .filter((c) => c.deletedDate === null)\n              .forEach((c) => {\n                const cipher = new Cipher(new CipherData(c));\n                exportPromises.push(\n                  cipher.decrypt().then((decCipher) => {\n                    decCiphers.push(decCipher);\n                  })\n                );\n              });\n          }\n        }\n        return Promise.all(exportPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\n\nexport class BitwardenFileUploadService {\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService();\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { FolderResponse } from \"../response/folder.response\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { FolderRequest } from \"../../models/request/folder.request\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\n\nexport class FolderApiService implements FolderApiServiceAbstraction {\n  constructor(private folderService: InternalFolderService, private apiService: ApiService) {}\n\n  async save(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.folderService.upsert(data);\n  }\n\n  async delete(id: string): Promise<any> {\n    await this.deleteFolder(id);\n    await this.folderService.delete(id);\n  }\n\n  async get(id: string): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  private async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  private deleteFolder(id: string): Promise<any> {\n    return this.apiService.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { CipherData } from \"../../models/data/cipher.data\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { FolderView } from \"../../models/view/folder.view\";\n\nexport class FolderService implements InternalFolderServiceAbstraction {\n  protected _folders: BehaviorSubject<Folder[]> = new BehaviorSubject([]);\n  protected _folderViews: BehaviorSubject<FolderView[]> = new BehaviorSubject([]);\n\n  folders$ = this._folders.asObservable();\n  folderViews$ = this._folderViews.asObservable();\n\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._folders.next([]);\n            this._folderViews.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedFolders();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async clearCache(): Promise<void> {\n    this._folderViews.next([]);\n  }\n\n  // TODO: This should be moved to EncryptService or something\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = this._folders.getValue();\n\n    return folders.find((folder) => folder.id === id);\n  }\n\n  /**\n   * @deprecated Only use in CLI!\n   */\n  async getAllDecryptedFromState(): Promise<FolderView[]> {\n    const data = await this.stateService.getEncryptedFolders();\n    const folders = Object.values(data || {}).map((f) => new Folder(f));\n\n    return this.decryptFolders(folders);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<void> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<void> {\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._folders.next([]);\n      this._folderViews.next([]);\n    }\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  private async updateObservables(foldersMap: { [id: string]: FolderData }) {\n    const folders = Object.values(foldersMap || {}).map((f) => new Folder(f));\n\n    this._folders.next(folders);\n\n    if (await this.cryptoService.hasKey()) {\n      this._folderViews.next(await this.decryptFolders(folders));\n    }\n  }\n\n  private async decryptFolders(folders: Folder[]) {\n    const decryptFolderPromises = folders.map((f) => f.decrypt());\n    const decryptedFolders = await Promise.all(decryptFolderPromises);\n\n    decryptedFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decryptedFolders.push(noneFolder);\n\n    return decryptedFolders;\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keys.request\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","import { LoginService as LoginServiceAbstraction } from \"../abstractions/login.service\";\n\nexport class LoginService implements LoginServiceAbstraction {\n  private _email: string;\n  private _rememberEmail: boolean;\n\n  getEmail() {\n    return this._email;\n  }\n\n  getRememberEmail() {\n    return this._rememberEmail;\n  }\n\n  setEmail(value: string) {\n    this._email = value;\n  }\n\n  setRememberEmail(value: boolean) {\n    this._rememberEmail = value;\n  }\n\n  clearValues() {\n    this._email = null;\n    this._rememberEmail = null;\n  }\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync/sync.service.abstraction\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notification.response\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keys.response\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { PlanResponse } from \"./plan.response\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { OrganizationResponse } from \"./organization.response\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscription.response\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/base.response\";\nimport { SsoConfigView } from \"../view/sso-config.view\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: string;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/sso-config.api\";\nimport { BaseResponse } from \"../base.response\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  identifier: string;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\nimport { OrganizationData } from \"../data/organization.data\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useScim = obj.useScim;\n    this.useCustomPermissions = obj.useCustomPermissions;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return (this.isAdmin || this.permissions.accessEventLogs) && this.useEvents;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return (this.isAdmin || this.permissions.manageGroups) && this.useGroups;\n  }\n\n  get canManageSso() {\n    return (this.isAdmin || this.permissions.manageSso) && this.useSso;\n  }\n\n  get canManageScim() {\n    return (this.isAdmin || this.permissions.manageScim) && this.useScim;\n  }\n\n  get canManagePolicies() {\n    return (this.isAdmin || this.permissions.managePolicies) && this.usePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n\n  static fromJSON(json: Jsonify<Organization>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Organization(), json, {\n      familySponsorshipLastSyncDate: new Date(json.familySponsorshipLastSyncDate),\n      familySponsorshipValidUntil: new Date(json.familySponsorshipValidUntil),\n    });\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { InternalOrganizationService as InternalOrganizationServiceAbstraction } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { Organization } from \"../../models/domain/organization\";\n\nexport class OrganizationService implements InternalOrganizationServiceAbstraction {\n  protected _organizations = new BehaviorSubject<Organization[]>([]);\n\n  organizations$ = this._organizations.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (!unlocked) {\n            this._organizations.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getOrganizations();\n          this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizationsMap = await this.stateService.getOrganizations({ userId: userId });\n    return Object.values(organizationsMap || {}).map((o) => new Organization(o));\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const organizations = this._organizations.getValue();\n    return organizations.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  hasOrganizations(): boolean {\n    const organizations = this._organizations.getValue();\n    return organizations.length > 0;\n  }\n\n  async upsert(organization: OrganizationData): Promise<void> {\n    let organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      organizations = {};\n    }\n\n    organizations[organization.id] = organization;\n\n    await this.replace(organizations);\n  }\n\n  async delete(id: string): Promise<void> {\n    const organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      return;\n    }\n\n    if (organizations[id] == null) {\n      return;\n    }\n\n    delete organizations[id];\n    await this.replace(organizations);\n  }\n\n  get(id: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.id === id);\n  }\n\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the organization\n   */\n  async getFromState(id: string): Promise<Organization> {\n    const organizationsMap = await this.stateService.getOrganizations();\n    const organization = organizationsMap[id];\n    if (organization == null) {\n      return null;\n    }\n\n    return new Organization(organization);\n  }\n\n  getByIdentifier(identifier: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.identifier === identifier);\n  }\n\n  async replace(organizations: { [id: string]: OrganizationData }) {\n    await this.stateService.setOrganizations(organizations);\n    this.updateObservables(organizations);\n  }\n\n  private updateObservables(organizationsMap: { [id: string]: OrganizationData }) {\n    const organizations = Object.values(organizationsMap || {}).map((o) => new Organization(o));\n    this._organizations.next(organizations);\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { PasswordGeneratorOptions } from \"../models/domain/password-generator-options\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/password-generator-policy-options\";\n\nconst DefaultOptions: PasswordGeneratorOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: PasswordGeneratorOptions): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: PasswordGeneratorOptions): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EFFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EFFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EFFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: PasswordGeneratorOptions\n  ): Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies = await this.policyService?.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: PasswordGeneratorOptions) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<void> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    await this.stateService.setDecryptedPasswordGenerationHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(\n    options: PasswordGeneratorOptions,\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions\n  ) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policy.response\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { PolicyApiServiceAbstraction } from \"../../abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { PolicyRequest } from \"../../models/request/policy.request\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyApiService implements PolicyApiServiceAbstraction {\n  constructor(\n    private policyService: InternalPolicyService,\n    private apiService: ApiService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.policyService.mapPoliciesFromToken(response);\n    return await firstValueFrom(this.policyService.masterPasswordPolicyOptions$(policies));\n  }\n\n  async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<any> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    const response = new PolicyResponse(r);\n    const data = new PolicyData(response);\n    await this.policyService.upsert(data);\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policy.data\";\n\nimport Domain from \"./domain-base\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1, // Not used, compile-time support only\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { of, concatMap, BehaviorSubject, Observable, map } from \"rxjs\";\n\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { Utils } from \"../../misc/utils\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/reset-password-policy-options\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyService implements InternalPolicyServiceAbstraction {\n  protected _policies: BehaviorSubject<Policy[]> = new BehaviorSubject([]);\n\n  policies$ = this._policies.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._policies.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedPolicies();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        if (Object.prototype.hasOwnProperty.call(diskPolicies, id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  masterPasswordPolicyOptions$(policies?: Policy[]): Observable<MasterPasswordPolicyOptions> {\n    const observable = policies ? of(policies) : this.policies$;\n    return observable.pipe(\n      map((obsPolicies) => {\n        let enforcedOptions: MasterPasswordPolicyOptions = null;\n        const filteredPolicies = obsPolicies.filter((p) => p.type === PolicyType.MasterPassword);\n\n        if (filteredPolicies == null || filteredPolicies.length === 0) {\n          return enforcedOptions;\n        }\n\n        filteredPolicies.forEach((currentPolicy) => {\n          if (!currentPolicy.enabled || currentPolicy.data == null) {\n            return;\n          }\n\n          if (enforcedOptions == null) {\n            enforcedOptions = new MasterPasswordPolicyOptions();\n          }\n\n          if (\n            currentPolicy.data.minComplexity != null &&\n            currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n          ) {\n            enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n          }\n\n          if (\n            currentPolicy.data.minLength != null &&\n            currentPolicy.data.minLength > enforcedOptions.minLength\n          ) {\n            enforcedOptions.minLength = currentPolicy.data.minLength;\n          }\n\n          if (currentPolicy.data.requireUpper) {\n            enforcedOptions.requireUpper = true;\n          }\n\n          if (currentPolicy.data.requireLower) {\n            enforcedOptions.requireLower = true;\n          }\n\n          if (currentPolicy.data.requireNumbers) {\n            enforcedOptions.requireNumbers = true;\n          }\n\n          if (currentPolicy.data.requireSpecial) {\n            enforcedOptions.requireSpecial = true;\n          }\n        });\n\n        return enforcedOptions;\n      })\n    );\n  }\n\n  policyAppliesToActiveUser$(policyType: PolicyType, policyFilter?: (policy: Policy) => boolean) {\n    return this.policies$.pipe(\n      concatMap(async (policies) => {\n        const userId = await this.stateService.getUserId();\n        return await this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n      })\n    );\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n\n    return this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n  }\n\n  async upsert(policy: PolicyData): Promise<any> {\n    let policies = await this.stateService.getEncryptedPolicies();\n    if (policies == null) {\n      policies = {};\n    }\n\n    policies[policy.id] = policy;\n\n    await this.updateObservables(policies);\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<void> {\n    await this.updateObservables(policies);\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._policies.next([]);\n    }\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n\n  private async updateObservables(policiesMap: { [id: string]: PolicyData }) {\n    const policies = Object.values(policiesMap || {}).map((f) => new Policy(f));\n\n    this._policies.next(policies);\n  }\n\n  private async checkPoliciesThatApplyToUser(\n    policies: Policy[],\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const organizations = await this.organizationService.getAll(userId);\n    const filteredPolicies = policies.filter(\n      (p) => p.type === policyType && p.enabled && (policyFilter == null || policyFilter(p))\n    );\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        policySet.has(o.id) &&\n        !this.isExcemptFromPolicies(o, policyType)\n    );\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/provider.data\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  private static registeredPipeline = false;\n\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private readonly immediateSearchLocales: string[] = [\"zh-CN\", \"zh-TW\", \"ja\", \"ko\", \"vi\"];\n  private readonly defaultSearchableMinLength: number = 2;\n  private searchableMinLength: number = this.defaultSearchableMinLength;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    this.i18nService.locale$.subscribe((locale) => {\n      if (this.immediateSearchLocales.indexOf(locale) !== -1) {\n        this.searchableMinLength = 1;\n      } else {\n        this.searchableMinLength = this.defaultSearchableMinLength;\n      }\n    });\n\n    // Currently have to ensure this is only done a single time. Lunr allows you to register a function\n    // multiple times but they will add a warning message to the console. The way they do that breaks when ran on a service worker.\n    if (!SearchService.registeredPipeline) {\n      SearchService.registeredPipeline = true;\n      //register lunr pipeline function\n      lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.info(\"Finished search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        c.login &&\n        c.login.hasUris &&\n        c.login.uris.some((loginUri) => loginUri?.uri?.toLowerCase().indexOf(query) > -1)\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendFileApi } from \"../api/send-file.api\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/send-text.api\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/send.response\";\n\nimport { SendFileData } from \"./send-file.data\";\nimport { SendTextData } from \"./send-text.data\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFileData } from \"../data/send-file.data\";\nimport { SendFileView } from \"../view/send-file.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/send-text.data\";\nimport { SendTextView } from \"../view/send-text.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/send.data\";\nimport { SendView } from \"../view/send.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SendFile } from \"./send-file\";\nimport { SendText } from \"./send-text\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    const cryptoService = Utils.getContainerService().getCryptoService();\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/send.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/send-file\";\nimport { SendText } from \"../models/domain/send-text\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { Utils } from \"../misc/utils\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  protected _settings: BehaviorSubject<AccountSettingsSettings> = new BehaviorSubject({});\n\n  settings$ = this._settings.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._settings.next({});\n            return;\n          }\n\n          const data = await this.stateService.getSettings();\n\n          this._settings.next(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    const settings = this._settings.getValue() ?? {};\n\n    settings.equivalentDomains = equivalentDomains;\n\n    this._settings.next(settings);\n    await this.stateService.setSettings(settings);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._settings.next({});\n    }\n\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profile-provider.response\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n\n  // TODO, make Jsonify<State,TGlobalState,TAccount> work. It currently doesn't because Globals doesn't implement Jsonify.\n  static fromJSON<TGlobalState extends GlobalState, TAccount extends Account>(\n    obj: any,\n    accountDeserializer: (json: Jsonify<TAccount>) => TAccount\n  ): State<TGlobalState, TAccount> {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new State(null), obj, {\n      accounts: State.buildAccountMapFromJSON(obj?.accounts, accountDeserializer),\n    });\n  }\n\n  private static buildAccountMapFromJSON<TAccount extends Account>(\n    jsonAccounts: { [userId: string]: Jsonify<TAccount> },\n    accountDeserializer: (json: Jsonify<TAccount>) => TAccount\n  ) {\n    if (!jsonAccounts) {\n      return {};\n    }\n    const accounts: { [userId: string]: TAccount } = {};\n    for (const userId in jsonAccounts) {\n      accounts[userId] = accountDeserializer(jsonAccounts[userId]);\n    }\n    return accounts;\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\nimport { Jsonify } from \"type-fest\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport {\n  MemoryStorageServiceInterface,\n  AbstractStorageService,\n} from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { LocalData } from \"../models/data/local.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport {\n  Account,\n  AccountData,\n  AccountSettings,\n  AccountSettingsSettings,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { GlobalState } from \"../models/domain/global-state\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { WindowState } from \"../models/domain/window-state\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nconst keys = {\n  state: \"state\",\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nconst DDG_SHARED_KEY = \"DuckDuckGoSharedKey\";\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  protected activeAccountSubject = new BehaviorSubject<string>(null);\n  activeAccount$ = this.activeAccountSubject.asObservable();\n\n  protected activeAccountUnlockedSubject = new BehaviorSubject<boolean>(false);\n  activeAccountUnlocked$ = this.activeAccountUnlockedSubject.asObservable();\n\n  private hasBeenInited = false;\n  private isRecoveredSession = false;\n\n  protected accountDiskCache = new BehaviorSubject<Record<string, TAccount>>({});\n\n  // default account serializer, must be overridden by child class\n  protected accountDeserializer = Account.fromJSON as (json: Jsonify<TAccount>) => TAccount;\n\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected memoryStorageService: AbstractStorageService & MemoryStorageServiceInterface,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    // If the account gets changed, verify the new account is unlocked\n    this.activeAccountSubject\n      .pipe(\n        concatMap(async (userId) => {\n          if (userId == null && this.activeAccountUnlockedSubject.getValue() == false) {\n            return;\n          } else if (userId == null) {\n            this.activeAccountUnlockedSubject.next(false);\n          }\n\n          // FIXME: This should be refactored into AuthService or a similar service,\n          //  as checking for the existance of the crypto key is a low level\n          //  implementation detail.\n          this.activeAccountUnlockedSubject.next((await this.getCryptoMasterKey()) != null);\n        })\n      )\n      .subscribe();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.state().then(async (state) => {\n      if (state == null) {\n        await this.setState(new State<TGlobalState, TAccount>(this.createGlobals()));\n      } else {\n        this.isRecoveredSession = true;\n      }\n    });\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    if (this.isRecoveredSession) {\n      return;\n    }\n\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts =\n        (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n      for (const i in state.authenticatedAccounts) {\n        if (i != null) {\n          await this.syncAccountFromDisk(state.authenticatedAccounts[i]);\n        }\n      }\n      const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n      if (storedActiveUser != null) {\n        state.activeUserId = storedActiveUser;\n      }\n      await this.pushAccounts();\n      this.activeAccountSubject.next(state.activeUserId);\n\n      return state;\n    });\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    await this.updateState(async (state) => {\n      if (state.accounts == null) {\n        state.accounts = {};\n      }\n      state.accounts[userId] = this.createAccount();\n      const diskAccount = await this.getAccountFromDisk({ userId: userId });\n      state.accounts[userId].profile = diskAccount.profile;\n      return state;\n    });\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts.push(account.profile.userId);\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n      state.accounts[account.profile.userId] = account;\n      return state;\n    });\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccountSubject.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    await this.updateState(async (state) => {\n      state.activeUserId = userId;\n      await this.storageService.save(keys.activeUserId, userId);\n      this.activeAccountSubject.next(state.activeUserId);\n      return state;\n    });\n\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === (await this.state())?.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n\n    if (options.userId == this.activeAccountSubject.getValue()) {\n      const nextValue = value != null;\n\n      // Avoid emitting if we are already unlocked\n      if (this.activeAccountUnlockedSubject.getValue() != nextValue) {\n        this.activeAccountUnlockedSubject.next(nextValue);\n      }\n    }\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.autoKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  @withPrototypeForArrayMembers(CipherView, CipherView.fromJSON)\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CollectionView)\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return Utils.recordToMap(account?.keys?.organizationKeys?.decrypted);\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.organizationKeys.decrypted = Utils.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(Policy)\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.privateKey.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return Utils.recordToMap(account?.keys?.providerKeys?.decrypted);\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.providerKeys.decrypted = Utils.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(SendView)\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDuckDuckGoSharedKey(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(DDG_SHARED_KEY, options);\n  }\n\n  async setDuckDuckGoSharedKey(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    value == null\n      ? await this.secureStorageService.remove(DDG_SHARED_KEY, options)\n      : await this.secureStorageService.save(DDG_SHARED_KEY, value, options);\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.email = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableDuckDuckGoBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableDuckDuckGoBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableDuckDuckGoBrowserIntegration(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableDuckDuckGoBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CipherData)\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CollectionData)\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(FolderData)\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<{ [orgId: string]: EncryptedOrganizationKeyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(PolicyData)\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(SendData)\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if ((await this.state())?.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(EventData)\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<{ [cipherId: string]: LocalData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n\n  async setLocalData(\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(ProviderData)\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const keys = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys;\n    return keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getSettings(options?: StorageOptions): Promise<AccountSettingsSettings> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: AccountSettingsSettings, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async setServerConfig(value: ServerConfigData, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.serverConfig = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getServerConfig(options: StorageOptions): Promise<ServerConfigData> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.serverConfig;\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = await this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected async getGlobalsFromMemory(): Promise<TGlobalState> {\n    return (await this.state()).globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected async saveGlobalsToMemory(globals: TGlobalState): Promise<void> {\n    await this.updateState(async (state) => {\n      state.globals = globals;\n      return state;\n    });\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = await this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async getAccountFromMemory(options: StorageOptions): Promise<TAccount> {\n    return await this.state().then(async (state) => {\n      if (state.accounts == null) {\n        return null;\n      }\n      return state.accounts[await this.getUserIdFromMemory(options)];\n    });\n  }\n\n  protected async getUserIdFromMemory(options: StorageOptions): Promise<string> {\n    return await this.state().then((state) => {\n      return options?.userId != null\n        ? state.accounts[options.userId]?.profile?.userId\n        : state.activeUserId;\n    });\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && (await this.state())?.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.value[options.userId];\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    this.setDiskCache(options.userId, account);\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    this.deleteDiskCache(options.userId);\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      await this.updateState((state) => {\n        return new Promise((resolve) => {\n          state.accounts[account.profile.userId] = account;\n          resolve(state);\n        });\n      });\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<AccountSettings>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    await this.state().then((state) => {\n      if (state.accounts == null || Object.keys(state.accounts).length < 1) {\n        this.accounts.next(null);\n        return;\n      }\n\n      this.accounts.next(state.accounts);\n    });\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected async defaultInMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Memory,\n      userId: (await this.state()).activeUserId,\n    };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: (await this.state())?.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected async removeAccountFromMemory(userId: string = null): Promise<void> {\n    await this.updateState(async (state) => {\n      userId = userId ?? state.activeUserId;\n      delete state.accounts[userId];\n\n      this.deleteDiskCache(userId);\n\n      return state;\n    });\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in (await this.state())?.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        await this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected async clearDecryptedDataForActiveUser(): Promise<void> {\n    await this.updateState(async (state) => {\n      const userId = state?.activeUserId;\n      if (userId != null && state?.accounts[userId]?.data != null) {\n        state.accounts[userId].data = new AccountData();\n      }\n\n      return state;\n    });\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string): Promise<void> {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts = state.authenticatedAccounts.filter((id) => id !== userId);\n\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n\n      return state;\n    });\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    const accounts = (await this.state())?.accounts;\n    if (accounts == null || Object.keys(accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? await this.defaultInMemoryOptions()\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n\n  protected async state(): Promise<State<TGlobalState, TAccount>> {\n    const state = await this.memoryStorageService.get<State<TGlobalState, TAccount>>(keys.state, {\n      deserializer: (s) => State.fromJSON(s, this.accountDeserializer),\n    });\n    return state;\n  }\n\n  private async setState(state: State<TGlobalState, TAccount>): Promise<void> {\n    await this.memoryStorageService.save(keys.state, state);\n  }\n\n  protected async updateState(\n    stateUpdater: (state: State<TGlobalState, TAccount>) => Promise<State<TGlobalState, TAccount>>\n  ) {\n    await this.state().then(async (state) => {\n      const updatedState = await stateUpdater(state);\n      if (updatedState == null) {\n        throw new Error(\"Attempted to update state to null value\");\n      }\n\n      await this.setState(updatedState);\n    });\n  }\n\n  private setDiskCache(key: string, value: TAccount, options?: StorageOptions) {\n    if (this.useAccountCache) {\n      this.accountDiskCache.value[key] = value;\n      this.accountDiskCache.next(this.accountDiskCache.value);\n    }\n  }\n\n  private deleteDiskCache(key: string) {\n    if (this.useAccountCache) {\n      delete this.accountDiskCache.value[key];\n      this.accountDiskCache.next(this.accountDiskCache.value);\n    }\n  }\n}\n\nfunction withPrototypeForArrayMembers<T>(\n  memberConstructor: new (...args: any[]) => T,\n  memberConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T[]> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any[]> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (!(result instanceof Array)) {\n            throw new Error(\n              `Attempted to retrieve non array type from state as an array for method ${String(\n                propertyKey\n              )}`\n            );\n          } else {\n            return result.map((r) => {\n              return r == null ||\n                r.constructor.name === memberConstructor.prototype.constructor.name\n                ? r\n                : memberConverter(\n                    Object.create(memberConstructor.prototype, Object.getOwnPropertyDescriptors(r))\n                  );\n            });\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForObjectValues<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<{ [key: string]: T }> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<{ [key: string]: T }> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else {\n            for (const [key, val] of Object.entries(result)) {\n              result[key] =\n                val == null || val.constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(val)\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(val)\n                      )\n                    );\n            }\n\n            return result as { [key: string]: T };\n          }\n        });\n      },\n    };\n  };\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport {\n  Account,\n  AccountSettings,\n  AccountSettingsSettings,\n  EncryptionPair,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { GlobalState } from \"../models/domain/global-state\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n        case StateVersion.Four: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom4To5(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Five);\n          break;\n        }\n        case StateVersion.Five: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom5To6(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Six);\n          break;\n        }\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: Object.assign(new EncryptionPair<string, EncString>(), {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      }),\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings:\n        userId == null\n          ? null\n          : await this.get<AccountSettingsSettings>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateAccountFrom4To5(account: TAccount): Promise<TAccount> {\n    const encryptedOrgKeys = account.keys?.organizationKeys?.encrypted;\n    if (encryptedOrgKeys != null) {\n      for (const [orgId, encKey] of Object.entries(encryptedOrgKeys)) {\n        encryptedOrgKeys[orgId] = {\n          type: \"organization\",\n          key: encKey as unknown as string, // Account v4 does not reflect the current account model so we have to cast\n        };\n      }\n    }\n\n    return account;\n  }\n\n  protected async migrateAccountFrom5To6(account: TAccount): Promise<TAccount> {\n    delete (account as any).keys?.legacyEtmKey;\n    return account;\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n\n  protected async setCurrentStateVersion(newVersion: StateVersion): Promise<void> {\n    const globals = await this.getGlobals();\n    globals.stateVersion = newVersion;\n    await this.set(keys.global, globals);\n  }\n\n  protected async getAuthenticatedAccounts(): Promise<TAccount[]> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    return Promise.all(authenticatedUserIds.map((id) => this.get<TAccount>(id)));\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\nimport { ProfileOrganizationResponse } from \"../response/profile-organization.response\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useScim = response.useScim;\n    this.useCustomPermissions = response.useCustomPermissions;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { InternalOrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"../../abstractions/provider.service\";\nimport { SendService } from \"../../abstractions/send.service\";\nimport { SettingsService } from \"../../abstractions/settings.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { sequentialize } from \"../../misc/sequentialize\";\nimport { CipherData } from \"../../models/data/cipher.data\";\nimport { CollectionData } from \"../../models/data/collection.data\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { ProviderData } from \"../../models/data/provider.data\";\nimport { SendData } from \"../../models/data/send.data\";\nimport { CipherResponse } from \"../../models/response/cipher.response\";\nimport { CollectionDetailsResponse } from \"../../models/response/collection.response\";\nimport { DomainsResponse } from \"../../models/response/domains.response\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notification.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\nimport { ProfileResponse } from \"../../models/response/profile.response\";\nimport { SendResponse } from \"../../models/response/send.response\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: InternalFolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: InternalPolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private providerService: ProviderService,\n    private folderApiService: FolderApiServiceAbstraction,\n    private organizationService: InternalOrganizationService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.folderApiService.get(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getFullCipherDetails(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.replace(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { Subject } from \"rxjs\";\n\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"../../abstractions/sync/syncNotifier.service.abstraction\";\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\n/**\n * This class should most likely have 0 dependencies because it will hopefully\n * be rolled into SyncService once upon a time.\n */\nexport class SyncNotifierService implements SyncNotifierServiceAbstraction {\n  private _sync = new Subject<SyncEventArgs>();\n\n  sync$ = this._sync.asObservable();\n\n  next(event: SyncEventArgs): void {\n    this._sync.next(event);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\n\nexport class UserVerificationApiService implements UserVerificationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n  async postAccountRequestOTP(): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"../../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { Verification } from \"../../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private userVerificationApiService: UserVerificationApiServiceAbstraction\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.userVerificationApiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.userVerificationApiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPasswordRequired\"));\n      }\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class AnonAddyForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    if (options.anonaddy?.domain == null || options.anonaddy.domain === \"\") {\n      throw \"Invalid AnonAddy domain.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: options.anonaddy.domain,\n      description:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class DuckDuckGoForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://quack.duckduckgo.com/api/email/addresses\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      if (json.address) {\n        return `${json.address}@duck.com`;\n      }\n    } else if (response.status === 401) {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    throw \"Unknown DuckDuckGo error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class FastmailForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Fastmail API token.\";\n    }\n\n    const accountId = await this.getAccountId(apiService, options);\n    if (accountId == null || accountId === \"\") {\n      throw \"Unable to obtain Fastmail masked email account ID.\";\n    }\n\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://api.fastmail.com/jmap/api/\";\n    requestInit.body = JSON.stringify({\n      using: [\"https://www.fastmail.com/dev/maskedemail\", \"urn:ietf:params:jmap:core\"],\n      methodCalls: [\n        [\n          \"MaskedEmail/set\",\n          {\n            accountId: accountId,\n            create: {\n              \"new-masked-email\": {\n                state: \"enabled\",\n                description: \"\",\n                url: options.website,\n                emailPrefix: options.fastmail.prefix,\n              },\n            },\n          },\n          \"0\",\n        ],\n      ],\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (\n        json.methodResponses != null &&\n        json.methodResponses.length > 0 &&\n        json.methodResponses[0].length > 0\n      ) {\n        if (json.methodResponses[0][0] === \"MaskedEmail/set\") {\n          if (json.methodResponses[0][1]?.created?.[\"new-masked-email\"] != null) {\n            return json.methodResponses[0][1]?.created?.[\"new-masked-email\"]?.email;\n          }\n          if (json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"] != null) {\n            throw (\n              \"Fastmail error: \" +\n              json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"]?.description\n            );\n          }\n        } else if (json.methodResponses[0][0] === \"error\") {\n          throw \"Fastmail error: \" + json.methodResponses[0][1]?.description;\n        }\n      }\n    }\n    if (response.status === 401 || response.status === 403) {\n      throw \"Invalid Fastmail API token.\";\n    }\n    throw \"Unknown Fastmail error occurred.\";\n  }\n\n  private async getAccountId(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      method: \"GET\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n      }),\n    };\n    const url = \"https://api.fastmail.com/.well-known/jmap\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (json.primaryAccounts != null) {\n        return json.primaryAccounts[\"https://www.fastmail.com/dev/maskedemail\"];\n      }\n    }\n    return null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class FirefoxRelayForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: options.website,\n      description:\n        (options.website != null ? options.website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","export class ForwarderOptions {\n  apiKey: string;\n  website: string;\n  fastmail = new FastmailForwarderOptions();\n  anonaddy = new AnonAddyForwarderOptions();\n}\n\nexport class FastmailForwarderOptions {\n  prefix: string;\n}\n\nexport class AnonAddyForwarderOptions {\n  domain: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class SimpleLoginForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (options.website != null) {\n      url += \"?hostname=\" + options.website;\n    }\n    requestInit.body = JSON.stringify({\n      note:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { AnonAddyForwarder } from \"../emailForwarders/anonAddyForwarder\";\nimport { DuckDuckGoForwarder } from \"../emailForwarders/duckDuckGoForwarder\";\nimport { FastmailForwarder } from \"../emailForwarders/fastmailForwarder\";\nimport { FirefoxRelayForwarder } from \"../emailForwarders/firefoxRelayForwarder\";\nimport { Forwarder } from \"../emailForwarders/forwarder\";\nimport { ForwarderOptions } from \"../emailForwarders/forwarderOptions\";\nimport { SimpleLoginForwarder } from \"../emailForwarders/simpleLoginForwarder\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"simplelogin\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EFFLongWordList.length - 1);\n    let word = EFFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    let forwarder: Forwarder = null;\n    const forwarderOptions = new ForwarderOptions();\n    forwarderOptions.website = o.website;\n    if (o.forwardedService === \"simplelogin\") {\n      forwarder = new SimpleLoginForwarder();\n      forwarderOptions.apiKey = o.forwardedSimpleLoginApiKey;\n    } else if (o.forwardedService === \"anonaddy\") {\n      forwarder = new AnonAddyForwarder();\n      forwarderOptions.apiKey = o.forwardedAnonAddyApiToken;\n      forwarderOptions.anonaddy.domain = o.forwardedAnonAddyDomain;\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      forwarder = new FirefoxRelayForwarder();\n      forwarderOptions.apiKey = o.forwardedFirefoxApiToken;\n    } else if (o.forwardedService === \"fastmail\") {\n      forwarder = new FastmailForwarder();\n      forwarderOptions.apiKey = o.forwardedFastmailApiToken;\n    } else if (o.forwardedService === \"duckduckgo\") {\n      forwarder = new DuckDuckGoForwarder();\n      forwarderOptions.apiKey = o.forwardedDuckDuckGoToken;\n    }\n\n    if (forwarder == null) {\n      return null;\n    }\n\n    return forwarder.generate(this.apiService, forwarderOptions);\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n}\n","import { AuthService } from \"../../abstractions/auth.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { SearchService } from \"../../abstractions/search.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.vaultTimeoutSettingsService.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      await this.folderService.clearCache();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.vaultTimeoutSettingsService.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(userId);\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { PolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class VaultTimeoutSettingsService implements VaultTimeoutSettingsServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window | typeof global) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"@bitwarden/common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import {\n  BroadcasterService as BroadcasterServiceAbstraction,\n  MessageBase,\n} from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: MessageBase) => void> = new Map<\n    string,\n    (message: MessageBase) => void\n  >();\n\n  send(message: MessageBase, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: MessageBase) => void) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport class ThemeBuilder implements Theme {\n  get effectiveTheme(): ThemeType {\n    return this.configuredTheme != ThemeType.System ? this.configuredTheme : this.systemTheme;\n  }\n\n  constructor(readonly configuredTheme: ThemeType, readonly systemTheme: ThemeType) {}\n\n  updateSystemTheme(systemTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(this.configuredTheme, systemTheme);\n  }\n\n  updateConfiguredTheme(configuredTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(configuredTheme, this.systemTheme);\n  }\n}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, fromEvent, Observable } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { WINDOW } from \"../injection-tokens\";\n\nimport { Theme } from \"./theme\";\nimport { ThemeBuilder } from \"./themeBuilder\";\nimport { AbstractThemingService } from \"./theming.service.abstraction\";\n\n@Injectable()\nexport class ThemingService implements AbstractThemingService {\n  private _theme = new BehaviorSubject<ThemeBuilder | null>(null);\n  theme$: Observable<Theme> = this._theme.pipe(filter((x) => x !== null));\n\n  constructor(\n    private stateService: StateService,\n    @Inject(WINDOW) private window: Window,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.monitorThemeChanges();\n  }\n\n  async monitorThemeChanges(): Promise<void> {\n    this._theme.next(\n      new ThemeBuilder(await this.stateService.getTheme(), await this.getSystemTheme())\n    );\n    this.monitorConfiguredThemeChanges();\n    this.monitorSystemThemeChanges();\n  }\n\n  updateSystemTheme(systemTheme: ThemeType): void {\n    this._theme.next(this._theme.getValue().updateSystemTheme(systemTheme));\n  }\n\n  async updateConfiguredTheme(theme: ThemeType): Promise<void> {\n    await this.stateService.setTheme(theme);\n    this._theme.next(this._theme.getValue().updateConfiguredTheme(theme));\n  }\n\n  protected monitorConfiguredThemeChanges(): void {\n    this.theme$.subscribe((theme: Theme) => {\n      this.document.documentElement.classList.remove(\n        \"theme_\" + ThemeType.Light,\n        \"theme_\" + ThemeType.Dark,\n        \"theme_\" + ThemeType.Nord,\n        \"theme_\" + ThemeType.SolarizedDark\n      );\n      this.document.documentElement.classList.add(\"theme_\" + theme.effectiveTheme);\n    });\n  }\n\n  // We use a media match query for monitoring the system theme on web and browser, but this doesn't work for electron apps on Linux.\n  // In desktop we override these methods to track systemTheme with the electron renderer instead, which works for all OSs.\n  protected async getSystemTheme(): Promise<ThemeType> {\n    return this.window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  protected monitorSystemThemeChanges(): void {\n    fromEvent<MediaQueryListEvent>(\n      this.window.matchMedia(\"(prefers-color-scheme: dark)\"),\n      \"change\"\n    ).subscribe((event) => {\n      this.updateSystemTheme(event.matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service\";\nimport {\n  InternalAccountService,\n  AccountService as AccountServiceAbstraction,\n} from \"@bitwarden/common/abstractions/account/account.service\";\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { ConfigApiServiceAbstraction } from \"@bitwarden/common/abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"@bitwarden/common/abstractions/config/config.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport {\n  FolderService as FolderServiceAbstraction,\n  InternalFolderService,\n} from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FormValidationErrorsService as FormValidationErrorsServiceAbstraction } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService as LoginServiceAbstraction } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport {\n  InternalOrganizationService,\n  OrganizationService as OrganizationServiceAbstraction,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport {\n  PolicyService as PolicyServiceAbstraction,\n  InternalPolicyService,\n} from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"@bitwarden/common/abstractions/sync/syncNotifier.service.abstraction\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { ValidationService as ValidationServiceAbstraction } from \"@bitwarden/common/abstractions/validation.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { flagEnabled } from \"@bitwarden/common/misc/flags\";\nimport { Account } from \"@bitwarden/common/models/domain/account\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { AccountApiServiceImplementation } from \"@bitwarden/common/services/account/account-api.service\";\nimport { AccountServiceImplementation } from \"@bitwarden/common/services/account/account.service\";\nimport { AnonymousHubService } from \"@bitwarden/common/services/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConfigApiService } from \"@bitwarden/common/services/config/config-api.service\";\nimport { ConfigService } from \"@bitwarden/common/services/config/config.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\nimport { EncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/encrypt.service.implementation\";\nimport { MultithreadEncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/multithread-encrypt.service.implementation\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventService } from \"@bitwarden/common/services/event.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/services/folder/folder.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/services/formValidationErrors.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { LoginService } from \"@bitwarden/common/services/login.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationApiService } from \"@bitwarden/common/services/organization/organization-api.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateService } from \"@bitwarden/common/services/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync/sync.service\";\nimport { SyncNotifierService } from \"@bitwarden/common/services/sync/syncNotifier.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/services/userVerification/userVerification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { ValidationService } from \"@bitwarden/common/services/validation.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeoutSettings.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport {\n  WINDOW,\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOGOUT_CALLBACK,\n  LOCKED_CALLBACK,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  LOG_MAC_FAILURES,\n} from \"./injection-tokens\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ThemingService } from \"./theming/theming.service\";\nimport { AbstractThemingService } from \"./theming/theming.service.abstraction\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: LOG_MAC_FAILURES,\n      useValue: true,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [AbstractStorageService],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction,\n        encryptService: EncryptService\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService,\n          encryptService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n        EncryptService,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: InternalFolderService,\n      useExisting: FolderServiceAbstraction,\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useClass: FolderApiService,\n      deps: [FolderServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AccountApiServiceAbstraction,\n      useClass: AccountApiServiceImplementation,\n      deps: [\n        ApiServiceAbstraction,\n        UserVerificationServiceAbstraction,\n        LogService,\n        InternalAccountService,\n      ],\n    },\n    {\n      provide: AccountServiceAbstraction,\n      useClass: AccountServiceImplementation,\n      deps: [MessagingServiceAbstraction, LogService],\n    },\n    {\n      provide: InternalAccountService,\n      useExisting: AccountServiceAbstraction,\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        EncryptService,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        ProviderServiceAbstraction,\n        FolderApiServiceAbstraction,\n        OrganizationServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutSettingsServiceAbstraction,\n      useClass: VaultTimeoutSettingsService,\n      deps: [\n        CryptoServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        VaultTimeoutSettingsServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: EncryptService,\n      useFactory: encryptServiceFactory,\n      deps: [CryptoFunctionServiceAbstraction, LogService, LOG_MAC_FAILURES],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction],\n    },\n    {\n      provide: InternalPolicyService,\n      useExisting: PolicyServiceAbstraction,\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useClass: PolicyApiService,\n      deps: [\n        PolicyServiceAbstraction,\n        ApiServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        SyncNotifierServiceAbstraction,\n        MessagingServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        UserVerificationApiServiceAbstraction,\n      ],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: InternalOrganizationService,\n      useExisting: OrganizationServiceAbstraction,\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useClass: ThemingService,\n    },\n    {\n      provide: FormValidationErrorsServiceAbstraction,\n      useClass: FormValidationErrorsService,\n    },\n    {\n      provide: UserVerificationApiServiceAbstraction,\n      useClass: UserVerificationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: OrganizationApiServiceAbstraction,\n      useClass: OrganizationApiService,\n      // This is a slightly odd dependency tree for a specialized api service\n      // it depends on SyncService so that new data can be retrieved through the sync\n      // rather than updating the OrganizationService directly. Instead OrganizationService\n      // subscribes to sync notifications and will update itself based on that.\n      deps: [ApiServiceAbstraction, SyncServiceAbstraction],\n    },\n    {\n      provide: SyncNotifierServiceAbstraction,\n      useClass: SyncNotifierService,\n    },\n    {\n      provide: ConfigServiceAbstraction,\n      useClass: ConfigService,\n      deps: [StateServiceAbstraction, ConfigApiServiceAbstraction],\n    },\n    {\n      provide: ConfigApiServiceAbstraction,\n      useClass: ConfigApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: AnonymousHubServiceAbstraction,\n      useClass: AnonymousHubService,\n      deps: [EnvironmentServiceAbstraction, AuthServiceAbstraction, LogService],\n    },\n    {\n      provide: ValidationServiceAbstraction,\n      useClass: ValidationService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: LoginServiceAbstraction,\n      useClass: LoginService,\n    },\n  ],\n})\nexport class JslibServicesModule {}\n\nfunction encryptServiceFactory(\n  cryptoFunctionservice: CryptoFunctionServiceAbstraction,\n  logService: LogService,\n  logMacFailures: boolean\n): EncryptService {\n  return flagEnabled(\"multithreadDecryption\")\n    ? new MultithreadEncryptServiceImplementation(cryptoFunctionservice, logService, logMacFailures)\n    : new EncryptServiceImplementation(cryptoFunctionservice, logService, logMacFailures);\n}\n","import { Verification } from \"../../types/verification\";\n\nexport abstract class AccountApiService {\n  abstract deleteAccount(verification: Verification): Promise<void>;\n}\n","import { AccountApiService } from \"../../abstractions/account/account-api.service\";\nimport { InternalAccountService } from \"../../abstractions/account/account.service\";\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { UserVerificationService } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"../../types/verification\";\n\nexport class AccountApiServiceImplementation implements AccountApiService {\n  constructor(\n    private apiService: ApiService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private accountService: InternalAccountService\n  ) {}\n\n  async deleteAccount(verification: Verification): Promise<void> {\n    try {\n      const verificationRequest = await this.userVerificationService.buildRequest(verification);\n      await this.apiService.send(\"DELETE\", \"/accounts\", verificationRequest, true, false);\n      this.accountService.delete();\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { InternalAccountService } from \"../../abstractions/account/account.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\n\nexport class AccountServiceImplementation implements InternalAccountService {\n  constructor(private messagingService: MessagingService, private logService: LogService) {}\n\n  async delete(): Promise<void> {\n    try {\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { UntypedFormGroup, ValidationErrors } from \"@angular/forms\";\n\nimport {\n  FormGroupControls,\n  FormValidationErrorsService as FormValidationErrorsAbstraction,\n  AllValidationErrors,\n} from \"../abstractions/formValidationErrors.service\";\n\nexport class FormValidationErrorsService implements FormValidationErrorsAbstraction {\n  getFormValidationErrors(controls: FormGroupControls): AllValidationErrors[] {\n    let errors: AllValidationErrors[] = [];\n    Object.keys(controls).forEach((key) => {\n      const control = controls[key];\n      if (control instanceof UntypedFormGroup) {\n        errors = errors.concat(this.getFormValidationErrors(control.controls));\n      }\n\n      const controlErrors: ValidationErrors = controls[key].errors;\n      if (controlErrors !== null) {\n        Object.keys(controlErrors).forEach((keyError) => {\n          errors.push({\n            controlName: key,\n            errorName: keyError,\n          });\n        });\n      }\n    });\n\n    return errors;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"../../abstractions/organization/organization-api.service.abstraction\";\nimport { SyncService } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/import-directory.request\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organization-api-key.request\";\nimport { OrganizationCreateRequest } from \"../../models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"../../models/request/organization-keys.request\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organization-subscription-update.request\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organization-tax-info-update.request\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organization-update.request\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organization-upgrade.request\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organization-sso.request\";\nimport { PaymentRequest } from \"../../models/request/payment.request\";\nimport { SeatRequest } from \"../../models/request/seat.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { StorageRequest } from \"../../models/request/storage.request\";\nimport { VerifyBankRequest } from \"../../models/request/verify-bank.request\";\nimport { ApiKeyResponse } from \"../../models/response/api-key.response\";\nimport { BillingResponse } from \"../../models/response/billing.response\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organization-api-key-information.response\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organization-auto-enroll-status.response\";\nimport { OrganizationKeysResponse } from \"../../models/response/organization-keys.response\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organization-subscription.response\";\nimport { OrganizationResponse } from \"../../models/response/organization.response\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organization-sso.response\";\nimport { PaymentResponse } from \"../../models/response/payment.response\";\nimport { TaxInfoResponse } from \"../../models/response/tax-info.response\";\n\nexport class OrganizationApiService implements OrganizationApiServiceAbstraction {\n  constructor(private apiService: ApiService, private syncService: SyncService) {}\n\n  async get(id: string): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getBilling(id: string): Promise<BillingResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/billing\",\n      null,\n      true,\n      true\n    );\n    return new BillingResponse(r);\n  }\n\n  async getSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/subscription\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getLicense(id: string, installationId: string): Promise<unknown> {\n    return this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getAutoEnrollStatus(identifier: string): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  async create(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations\", request, true, true);\n    // Forcing a sync will notify organization service that they need to repull\n    await this.syncService.fullSync(true);\n    return new OrganizationResponse(r);\n  }\n\n  async createLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async save(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    const data = new OrganizationResponse(r);\n    await this.syncService.fullSync(true);\n    return data;\n  }\n\n  async updatePayment(id: string, request: PaymentRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  async upgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/upgrade\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/subscription\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async updateSeats(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/seat\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/storage\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async verifyBank(id: string, request: VerifyBankRequest): Promise<void> {\n    await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/verify-bank\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async cancel(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  async reinstate(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  async leave(id: string): Promise<void> {\n    await this.apiService.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async delete(id: string, request: SecretVerificationRequest): Promise<void> {\n    await this.apiService.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async updateLicense(id: string, data: FormData): Promise<void> {\n    await this.apiService.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async importDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/import\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getOrCreateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getApiKeyInformation(\n    id: string,\n    organizationApiKeyType: OrganizationApiKeyType = null\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const uri =\n      organizationApiKeyType === null\n        ? \"/organizations/\" + id + \"/api-key-information\"\n        : \"/organizations/\" + id + \"/api-key-information/\" + organizationApiKeyType;\n    const r = await this.apiService.send(\"GET\", uri, null, true, true);\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async rotateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async updateTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<void> {\n    // Can't broadcast anything because the response doesn't have content\n    return this.apiService.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  async getKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async updateKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/keys\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationKeysResponse(r);\n  }\n\n  async getSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async updateSso(id: string, request: OrganizationSsoRequest): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/sso\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationSsoResponse(r);\n  }\n}\n","import { BehaviorSubject, concatMap, map, switchMap, timer, EMPTY } from \"rxjs\";\n\nimport { ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"../../abstractions/config/config.service.abstraction\";\nimport { ServerConfig } from \"../../abstractions/config/server-config\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { ServerConfigData } from \"../../models/data/server-config.data\";\n\nexport class ConfigService implements ConfigServiceAbstraction {\n  private _serverConfig = new BehaviorSubject<ServerConfig | null>(null);\n  serverConfig$ = this._serverConfig.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private configApiService: ConfigApiServiceAbstraction\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        switchMap((unlocked) => {\n          if (!unlocked) {\n            this._serverConfig.next(null);\n            return EMPTY;\n          }\n\n          // Re-fetch the server config every hour\n          return timer(0, 3600 * 1000).pipe(map(() => unlocked));\n        }),\n        concatMap(async (unlocked) => {\n          return unlocked ? await this.buildServerConfig() : null;\n        })\n      )\n      .subscribe((serverConfig) => {\n        this._serverConfig.next(serverConfig);\n      });\n  }\n\n  private async buildServerConfig(): Promise<ServerConfig> {\n    const data = await this.stateService.getServerConfig();\n    const domain = data ? new ServerConfig(data) : null;\n\n    if (domain == null || !domain.isValid() || domain.expiresSoon()) {\n      const value = await this.fetchServerConfig();\n      return value ?? domain;\n    }\n\n    return domain;\n  }\n\n  private async fetchServerConfig(): Promise<ServerConfig> {\n    try {\n      const response = await this.configApiService.get();\n\n      if (response != null) {\n        const data = new ServerConfigData(response);\n        await this.stateService.setServerConfig(data);\n        return new ServerConfig(data);\n      }\n    } catch {\n      return null;\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { ConfigApiServiceAbstraction as ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ServerConfigResponse } from \"../../models/response/server-config.response\";\n\nexport class ConfigApiService implements ConfigApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  async get(): Promise<ServerConfigResponse> {\n    const r = await this.apiService.send(\"GET\", \"/config\", null, true, true);\n    return new ServerConfigResponse(r);\n  }\n}\n","export abstract class AnonymousHubService {\n  createHubConnection: (token: string) => void;\n  stopHubConnection: () => void;\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { ValidationService as ValidationServiceAbstraction } from \"../abstractions/validation.service\";\nimport { ErrorResponse } from \"../models/response/error.response\";\n\nexport class ValidationService implements ValidationServiceAbstraction {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService, private encryptService: EncryptService) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  /**\n   * @throws Will throw if CryptoService was not instantiated and provided to the ContainerService constructor\n   */\n  getCryptoService(): CryptoService {\n    if (this.cryptoService == null) {\n      throw new Error(\"ContainerService.cryptoService not initialized.\");\n    }\n    return this.cryptoService;\n  }\n\n  /**\n   * @throws Will throw if EncryptService was not instantiated and provided to the ContainerService constructor\n   */\n  getEncryptService(): EncryptService {\n    if (this.encryptService == null) {\n      throw new Error(\"ContainerService.encryptService not initialized.\");\n    }\n    return this.encryptService;\n  }\n}\n","import {\n  AbstractStorageService,\n  MemoryStorageServiceInterface,\n} from \"../abstractions/storage.service\";\n\nexport class MemoryStorageService\n  extends AbstractStorageService\n  implements MemoryStorageServiceInterface\n{\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n}\n","import { AuthService } from \"../abstractions/auth.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SystemService as SystemServiceAbstraction } from \"../abstractions/system.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { Utils } from \"../misc/utils\";\n\nexport class SystemService implements SystemServiceAbstraction {\n  private reloadInterval: any = null;\n  private clearClipboardTimeout: any = null;\n  private clearClipboardTimeoutFunction: () => Promise<any> = null;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private reloadCallback: () => Promise<void> = null,\n    private stateService: StateService\n  ) {}\n\n  async startProcessReload(authService: AuthService): Promise<void> {\n    const accounts = this.stateService.accounts.getValue();\n    if (accounts != null) {\n      const keys = Object.keys(accounts);\n      if (keys.length > 0) {\n        for (const userId of keys) {\n          if ((await authService.getAuthStatus(userId)) === AuthenticationStatus.Unlocked) {\n            return;\n          }\n        }\n      }\n    }\n\n    // A reloadInterval has already been set and is executing\n    if (this.reloadInterval != null) {\n      return;\n    }\n\n    // User has set a PIN, with ask for master password on restart, to protect their vault\n    const decryptedPinProtected = await this.stateService.getDecryptedPinProtected();\n    if (decryptedPinProtected != null) {\n      return;\n    }\n\n    this.cancelProcessReload();\n    this.reloadInterval = setInterval(async () => await this.executeProcessReload(), 10000);\n  }\n\n  private async inactiveMoreThanSeconds(seconds: number): Promise<boolean> {\n    const lastActive = await this.stateService.getLastActive();\n    if (lastActive != null) {\n      const diffMs = new Date().getTime() - lastActive;\n      return diffMs >= seconds * 1000;\n    }\n    return true;\n  }\n\n  private async executeProcessReload() {\n    const accounts = this.stateService.accounts.getValue();\n    const doRefresh =\n      accounts == null ||\n      Object.keys(accounts).length == 0 ||\n      (await this.inactiveMoreThanSeconds(5));\n\n    const biometricLockedFingerprintValidated =\n      await this.stateService.getBiometricFingerprintValidated();\n    if (doRefresh && !biometricLockedFingerprintValidated) {\n      clearInterval(this.reloadInterval);\n      this.reloadInterval = null;\n      this.messagingService.send(\"reloadProcess\");\n      if (this.reloadCallback != null) {\n        await this.reloadCallback();\n      }\n    }\n  }\n\n  cancelProcessReload(): void {\n    if (this.reloadInterval != null) {\n      clearInterval(this.reloadInterval);\n      this.reloadInterval = null;\n    }\n  }\n\n  async clearClipboard(clipboardValue: string, timeoutMs: number = null): Promise<void> {\n    if (this.clearClipboardTimeout != null) {\n      clearTimeout(this.clearClipboardTimeout);\n      this.clearClipboardTimeout = null;\n    }\n    if (Utils.isNullOrWhitespace(clipboardValue)) {\n      return;\n    }\n    await this.stateService.getClearClipboard().then((clearSeconds) => {\n      if (clearSeconds == null) {\n        return;\n      }\n      if (timeoutMs == null) {\n        timeoutMs = clearSeconds * 1000;\n      }\n      this.clearClipboardTimeoutFunction = async () => {\n        const clipboardValueNow = await this.platformUtilsService.readFromClipboard();\n        if (clipboardValue === clipboardValueNow) {\n          this.platformUtilsService.copyToClipboard(\"\", { clearing: true });\n        }\n      };\n      this.clearClipboardTimeout = setTimeout(async () => {\n        await this.clearPendingClipboard();\n      }, timeoutMs);\n    });\n  }\n\n  async clearPendingClipboard() {\n    if (this.clearClipboardTimeoutFunction != null) {\n      await this.clearClipboardTimeoutFunction();\n      this.clearClipboardTimeoutFunction = null;\n    }\n  }\n}\n","export type CachedServices = Record<string, any>;\n\nexport type FactoryOptions = {\n  alwaysInitializeNewService?: boolean;\n  doNotStoreInitializedService?: boolean;\n  [optionsKey: string]: unknown;\n};\n\nexport async function factory<\n  TCache extends CachedServices,\n  TName extends keyof TCache,\n  TOpts extends FactoryOptions\n>(\n  cachedServices: TCache,\n  name: TName,\n  opts: TOpts,\n  factory: () => TCache[TName] | Promise<TCache[TName]>\n): Promise<TCache[TName]> {\n  let instance = cachedServices[name];\n  if (opts.alwaysInitializeNewService || !instance) {\n    const instanceOrPromise = factory();\n    instance = instanceOrPromise instanceof Promise ? await instanceOrPromise : instanceOrPromise;\n  }\n\n  if (!opts.doNotStoreInitializedService) {\n    cachedServices[name] = instance;\n  }\n\n  return instance as TCache[TName];\n}\n","import { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\n\nexport default abstract class AbstractChromeStorageService implements AbstractStorageService {\n  protected abstract chromeStorageApi: chrome.storage.StorageArea;\n\n  async get<T>(key: string): Promise<T> {\n    return new Promise((resolve) => {\n      this.chromeStorageApi.get(key, (obj: any) => {\n        if (obj != null && obj[key] != null) {\n          resolve(obj[key] as T);\n          return;\n        }\n        resolve(null);\n      });\n    });\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  async save(key: string, obj: any): Promise<void> {\n    if (obj == null) {\n      // Fix safari not liking null in set\n      return new Promise<void>((resolve) => {\n        this.chromeStorageApi.remove(key, () => {\n          resolve();\n        });\n      });\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const keyedObj = { [key]: obj };\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.set(keyedObj, () => {\n        resolve();\n      });\n    });\n  }\n\n  async remove(key: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.remove(key, () => {\n        resolve();\n      });\n    });\n  }\n}\n","import AbstractChromeStorageService from \"./abstractChromeStorageApi.service\";\n\nexport default class BrowserLocalStorageService extends AbstractChromeStorageService {\n  protected chromeStorageApi = chrome.storage.local;\n}\n","import AbstractChromeStorageService from \"./abstractChromeStorageApi.service\";\n\nexport default class BrowserMemoryStorageService extends AbstractChromeStorageService {\n  protected chromeStorageApi = chrome.storage.session;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport {\n  AbstractCachedStorageService,\n  MemoryStorageServiceInterface,\n} from \"@bitwarden/common/abstractions/storage.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MemoryStorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\n\nimport { devFlag } from \"../decorators/dev-flag.decorator\";\nimport { devFlagEnabled } from \"../flags\";\n\nimport { AbstractKeyGenerationService } from \"./abstractions/abstractKeyGeneration.service\";\nimport BrowserLocalStorageService from \"./browserLocalStorage.service\";\nimport BrowserMemoryStorageService from \"./browserMemoryStorage.service\";\n\nconst keys = {\n  encKey: \"localEncryptionKey\",\n  sessionKey: \"session\",\n};\n\nexport class LocalBackedSessionStorageService\n  extends AbstractCachedStorageService\n  implements MemoryStorageServiceInterface\n{\n  private cache = new Map<string, unknown>();\n  private localStorage = new BrowserLocalStorageService();\n  private sessionStorage = new BrowserMemoryStorageService();\n\n  constructor(\n    private encryptService: EncryptService,\n    private keyGenerationService: AbstractKeyGenerationService\n  ) {\n    super();\n  }\n\n  async get<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T> {\n    if (this.cache.has(key)) {\n      return this.cache.get(key) as T;\n    }\n\n    return await this.getBypassCache(key, options);\n  }\n\n  async getBypassCache<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T> {\n    const session = await this.getLocalSession(await this.getSessionEncKey());\n    if (session == null || !Object.keys(session).includes(key)) {\n      return null;\n    }\n\n    let value = session[key];\n    if (options?.deserializer != null) {\n      value = options.deserializer(value as Jsonify<T>);\n    }\n\n    this.cache.set(key, value);\n    return this.cache.get(key) as T;\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  async save<T>(key: string, obj: T): Promise<void> {\n    if (obj == null) {\n      this.cache.delete(key);\n    } else {\n      this.cache.set(key, obj);\n    }\n\n    const sessionEncKey = await this.getSessionEncKey();\n    const localSession = (await this.getLocalSession(sessionEncKey)) ?? {};\n    localSession[key] = obj;\n    await this.setLocalSession(localSession, sessionEncKey);\n  }\n\n  async remove(key: string): Promise<void> {\n    await this.save(key, null);\n  }\n\n  async getLocalSession(encKey: SymmetricCryptoKey): Promise<Record<string, unknown>> {\n    const local = await this.localStorage.get<string>(keys.sessionKey);\n\n    if (local == null) {\n      return null;\n    }\n\n    if (devFlagEnabled(\"storeSessionDecrypted\")) {\n      return local as any as Record<string, unknown>;\n    }\n\n    const sessionJson = await this.encryptService.decryptToUtf8(new EncString(local), encKey);\n    if (sessionJson == null) {\n      // Error with decryption -- session is lost, delete state and key and start over\n      await this.setSessionEncKey(null);\n      await this.localStorage.remove(keys.sessionKey);\n      return null;\n    }\n    return JSON.parse(sessionJson);\n  }\n\n  async setLocalSession(session: Record<string, unknown>, key: SymmetricCryptoKey) {\n    if (devFlagEnabled(\"storeSessionDecrypted\")) {\n      await this.setDecryptedLocalSession(session);\n    } else {\n      await this.setEncryptedLocalSession(session, key);\n    }\n  }\n\n  @devFlag(\"storeSessionDecrypted\")\n  async setDecryptedLocalSession(session: Record<string, unknown>): Promise<void> {\n    // Make sure we're storing the jsonified version of the session\n    const jsonSession = JSON.parse(JSON.stringify(session));\n    if (session == null) {\n      await this.localStorage.remove(keys.sessionKey);\n    } else {\n      await this.localStorage.save(keys.sessionKey, jsonSession);\n    }\n  }\n\n  async setEncryptedLocalSession(session: Record<string, unknown>, key: SymmetricCryptoKey) {\n    const jsonSession = JSON.stringify(session);\n    const encSession = await this.encryptService.encrypt(jsonSession, key);\n\n    if (encSession == null) {\n      return await this.localStorage.remove(keys.sessionKey);\n    }\n    await this.localStorage.save(keys.sessionKey, encSession.encryptedString);\n  }\n\n  async getSessionEncKey(): Promise<SymmetricCryptoKey> {\n    let storedKey = await this.sessionStorage.get<SymmetricCryptoKey>(keys.encKey);\n    if (storedKey == null || Object.keys(storedKey).length == 0) {\n      storedKey = await this.keyGenerationService.makeEphemeralKey();\n      await this.setSessionEncKey(storedKey);\n    }\n    return SymmetricCryptoKey.fromJSON(storedKey);\n  }\n\n  async setSessionEncKey(input: SymmetricCryptoKey): Promise<void> {\n    if (input == null) {\n      await this.sessionStorage.remove(keys.encKey);\n    } else {\n      await this.sessionStorage.save(keys.encKey, input);\n    }\n  }\n}\n","import { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\n\ntype CryptoFunctionServiceFactoryOptions = FactoryOptions & {\n  cryptoFunctionServiceOptions: {\n    win: Window | typeof globalThis;\n  };\n};\n\nexport type CryptoFunctionServiceInitOptions = CryptoFunctionServiceFactoryOptions;\n\nexport function cryptoFunctionServiceFactory(\n  cache: { cryptoFunctionService?: CryptoFunctionService } & CachedServices,\n  opts: CryptoFunctionServiceFactoryOptions\n): Promise<CryptoFunctionService> {\n  return factory(\n    cache,\n    \"cryptoFunctionService\",\n    opts,\n    () => new WebCryptoFunctionService(opts.cryptoFunctionServiceOptions.win)\n  );\n}\n","import { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LogLevelType } from \"@bitwarden/common/enums/logLevelType\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\n\ntype LogServiceFactoryOptions = FactoryOptions & {\n  logServiceOptions: {\n    isDev: boolean;\n    filter?: (level: LogLevelType) => boolean;\n  };\n};\n\nexport type LogServiceInitOptions = LogServiceFactoryOptions;\n\nexport function logServiceFactory(\n  cache: { logService?: LogService } & CachedServices,\n  opts: LogServiceInitOptions\n): Promise<LogService> {\n  return factory(\n    cache,\n    \"logService\",\n    opts,\n    () => new ConsoleLogService(opts.logServiceOptions.isDev, opts.logServiceOptions.filter)\n  );\n}\n","import { devFlagEnabled, DevFlags } from \"../flags\";\n\nexport function devFlag(flag: keyof DevFlags) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n    descriptor.value = function (...args: any[]) {\n      if (!devFlagEnabled(flag)) {\n        throw new Error(\n          `This method should not be called, it is protected by a disabled dev flag.`\n        );\n      }\n      return originalMethod.apply(this, args);\n    };\n  };\n}\n","import { EncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/encrypt.service.implementation\";\nimport { MultithreadEncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/multithread-encrypt.service.implementation\";\n\nimport { flagEnabled } from \"../../flags\";\n\nimport {\n  cryptoFunctionServiceFactory,\n  CryptoFunctionServiceInitOptions,\n} from \"./crypto-function-service.factory\";\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport { LogServiceInitOptions, logServiceFactory } from \"./log-service.factory\";\n\ntype EncryptServiceFactoryOptions = FactoryOptions & {\n  encryptServiceOptions: {\n    logMacFailures: boolean;\n  };\n};\n\nexport type EncryptServiceInitOptions = EncryptServiceFactoryOptions &\n  CryptoFunctionServiceInitOptions &\n  LogServiceInitOptions;\n\nexport function encryptServiceFactory(\n  cache: { encryptService?: EncryptServiceImplementation } & CachedServices,\n  opts: EncryptServiceInitOptions\n): Promise<EncryptServiceImplementation> {\n  return factory(cache, \"encryptService\", opts, async () =>\n    flagEnabled(\"multithreadDecryption\")\n      ? new MultithreadEncryptServiceImplementation(\n          await cryptoFunctionServiceFactory(cache, opts),\n          await logServiceFactory(cache, opts),\n          opts.encryptServiceOptions.logMacFailures\n        )\n      : new EncryptServiceImplementation(\n          await cryptoFunctionServiceFactory(cache, opts),\n          await logServiceFactory(cache, opts),\n          opts.encryptServiceOptions.logMacFailures\n        )\n  );\n}\n","import { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\n\nimport { AbstractKeyGenerationService } from \"./abstractions/abstractKeyGeneration.service\";\n\nexport class KeyGenerationService implements AbstractKeyGenerationService {\n  constructor(private cryptoFunctionService: CryptoFunctionService) {}\n\n  async makeEphemeralKey(numBytes = 16): Promise<SymmetricCryptoKey> {\n    const keyMaterial = await this.cryptoFunctionService.randomBytes(numBytes);\n    const key = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-ephemeral\",\n      \"ephemeral\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(key);\n  }\n}\n","import { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport BrowserLocalStorageService from \"../../services/browserLocalStorage.service\";\nimport { LocalBackedSessionStorageService } from \"../../services/localBackedSessionStorage.service\";\n\nimport { encryptServiceFactory, EncryptServiceInitOptions } from \"./encrypt-service.factory\";\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport {\n  keyGenerationServiceFactory,\n  KeyGenerationServiceInitOptions,\n} from \"./key-generation-service.factory\";\n\ntype StorageServiceFactoryOptions = FactoryOptions;\n\nexport type DiskStorageServiceInitOptions = StorageServiceFactoryOptions;\nexport type SecureStorageServiceInitOptions = StorageServiceFactoryOptions;\nexport type MemoryStorageServiceInitOptions = StorageServiceFactoryOptions &\n  EncryptServiceInitOptions &\n  KeyGenerationServiceInitOptions;\n\nexport function diskStorageServiceFactory(\n  cache: { diskStorageService?: AbstractStorageService } & CachedServices,\n  opts: DiskStorageServiceInitOptions\n): Promise<AbstractStorageService> {\n  return factory(cache, \"diskStorageService\", opts, () => new BrowserLocalStorageService());\n}\n\nexport function secureStorageServiceFactory(\n  cache: { secureStorageService?: AbstractStorageService } & CachedServices,\n  opts: SecureStorageServiceInitOptions\n): Promise<AbstractStorageService> {\n  return factory(cache, \"secureStorageService\", opts, () => new BrowserLocalStorageService());\n}\n\nexport function memoryStorageServiceFactory(\n  cache: { memoryStorageService?: AbstractStorageService } & CachedServices,\n  opts: MemoryStorageServiceInitOptions\n): Promise<AbstractStorageService> {\n  return factory(cache, \"memoryStorageService\", opts, async () => {\n    if (BrowserApi.manifestVersion === 3) {\n      return new LocalBackedSessionStorageService(\n        await encryptServiceFactory(cache, opts),\n        await keyGenerationServiceFactory(cache, opts)\n      );\n    }\n    return new MemoryStorageService();\n  });\n}\n","import { KeyGenerationService } from \"../../services/keyGeneration.service\";\n\nimport {\n  cryptoFunctionServiceFactory,\n  CryptoFunctionServiceInitOptions,\n} from \"./crypto-function-service.factory\";\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\n\ntype KeyGenerationServiceFactoryOptions = FactoryOptions;\n\nexport type KeyGenerationServiceInitOptions = KeyGenerationServiceFactoryOptions &\n  CryptoFunctionServiceInitOptions;\n\nexport function keyGenerationServiceFactory(\n  cache: { keyGenerationService?: KeyGenerationService } & CachedServices,\n  opts: KeyGenerationServiceInitOptions\n): Promise<KeyGenerationService> {\n  return factory(\n    cache,\n    \"keyGenerationService\",\n    opts,\n    async () => new KeyGenerationService(await cryptoFunctionServiceFactory(cache, opts))\n  );\n}\n","import { DiskStorageOptions } from \"@koa/multer\";\n\nimport { AppIdService as AbstractAppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\n\nimport { FactoryOptions, CachedServices, factory } from \"./factory-options\";\nimport { diskStorageServiceFactory } from \"./storage-service.factory\";\n\ntype AppIdServiceFactoryOptions = FactoryOptions;\n\nexport type AppIdServiceInitOptions = AppIdServiceFactoryOptions & DiskStorageOptions;\n\nexport function appIdServiceFactory(\n  cache: { appIdService?: AbstractAppIdService } & CachedServices,\n  opts: AppIdServiceInitOptions\n): Promise<AbstractAppIdService> {\n  return factory(\n    cache,\n    \"appIdService\",\n    opts,\n    async () => new AppIdService(await diskStorageServiceFactory(cache, opts))\n  );\n}\n","import { BehaviorSubject, concatMap, ReplaySubject, Subject, Subscription } from \"rxjs\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { BrowserStateService } from \"../../services/abstractions/browser-state.service\";\n\nimport { SyncedItemMetadata } from \"./sync-item-metadata\";\n\nexport class SessionSyncer {\n  subscription: Subscription;\n  id = Utils.newGuid();\n\n  // ignore initial values\n  private ignoreNUpdates = 0;\n\n  constructor(\n    private subject: Subject<any>,\n    private stateService: BrowserStateService,\n    private metaData: SyncedItemMetadata\n  ) {\n    if (!(subject instanceof Subject)) {\n      throw new Error(\"subject must inherit from Subject\");\n    }\n\n    if (metaData.ctor == null && metaData.initializer == null) {\n      throw new Error(\"ctor or initializer must be provided\");\n    }\n  }\n\n  init() {\n    switch (this.subject.constructor) {\n      case ReplaySubject:\n        // ignore all updates currently in the buffer\n        this.ignoreNUpdates = (this.subject as any)._buffer.length;\n        break;\n      case BehaviorSubject:\n        this.ignoreNUpdates = 1;\n        break;\n      default:\n        break;\n    }\n\n    this.observe();\n    // must be synchronous\n    this.stateService.hasInSessionMemory(this.metaData.sessionKey).then((hasInSessionMemory) => {\n      if (hasInSessionMemory) {\n        this.update();\n      }\n    });\n\n    this.listenForUpdates();\n  }\n\n  private observe() {\n    // This may be a memory leak.\n    // There is no good time to unsubscribe from this observable. Hopefully Manifest V3 clears memory from temporary\n    // contexts. If so, this is handled by destruction of the context.\n    this.subscription = this.subject\n      .pipe(\n        concatMap(async (next) => {\n          if (this.ignoreNUpdates > 0) {\n            this.ignoreNUpdates -= 1;\n            return;\n          }\n          await this.updateSession(next);\n        })\n      )\n      .subscribe();\n  }\n\n  private listenForUpdates() {\n    // This is an unawaited promise, but it will be executed asynchronously in the background.\n    BrowserApi.messageListener(\n      this.updateMessageCommand,\n      async (message) => await this.updateFromMessage(message)\n    );\n  }\n\n  async updateFromMessage(message: any) {\n    if (message.command != this.updateMessageCommand || message.id === this.id) {\n      return;\n    }\n    this.update();\n  }\n\n  async update() {\n    const builder = SyncedItemMetadata.builder(this.metaData);\n    const value = await this.stateService.getFromSessionMemory(this.metaData.sessionKey, builder);\n    this.ignoreNUpdates = 1;\n    this.subject.next(value);\n  }\n\n  private async updateSession(value: any) {\n    await this.stateService.setInSessionMemory(this.metaData.sessionKey, value);\n    await BrowserApi.sendMessage(this.updateMessageCommand, { id: this.id });\n  }\n\n  private get updateMessageCommand() {\n    return `${this.metaData.sessionKey}_update`;\n  }\n}\n","export type InitializeOptions = \"array\" | \"record\" | \"object\";\n\nexport class SyncedItemMetadata {\n  propertyKey: string;\n  sessionKey: string;\n  ctor?: new () => any;\n  initializer?: (keyValuePair: any) => any;\n  initializeAs: InitializeOptions;\n\n  static builder(metadata: SyncedItemMetadata): (o: any) => any {\n    const itemBuilder =\n      metadata.initializer != null\n        ? metadata.initializer\n        : (o: any) => Object.assign(new metadata.ctor(), o);\n    if (metadata.initializeAs === \"array\") {\n      return (keyValuePair: any) => keyValuePair.map((o: any) => itemBuilder(o));\n    } else if (metadata.initializeAs === \"record\") {\n      return (keyValuePair: any) => {\n        const record: Record<any, any> = {};\n        for (const key in keyValuePair) {\n          record[key] = itemBuilder(keyValuePair[key]);\n        }\n        return record;\n      };\n    } else {\n      return (keyValuePair: any) => itemBuilder(keyValuePair);\n    }\n  }\n}\n","import { Constructor } from \"type-fest\";\n\nimport { BrowserStateService } from \"../../services/browser-state.service\";\n\nimport { SessionStorable } from \"./session-storable\";\nimport { SessionSyncer } from \"./session-syncer\";\nimport { SyncedItemMetadata } from \"./sync-item-metadata\";\n\n/**\n * Mark the class as syncing state across the browser session. This decorator finds rxjs BehaviorSubject properties\n * marked with @sessionSync and syncs these values across the browser session.\n *\n * @param constructor\n * @returns A new constructor that extends the original one to add session syncing.\n */\nexport function browserSession<TCtor extends Constructor<any>>(constructor: TCtor) {\n  return class extends constructor implements SessionStorable {\n    __syncedItemMetadata: SyncedItemMetadata[];\n    __sessionSyncers: SessionSyncer[];\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      // Require state service to be injected\n      const stateService: BrowserStateService = [this as any]\n        .concat(args)\n        .find(\n          (arg) =>\n            typeof arg.setInSessionMemory === \"function\" &&\n            typeof arg.getFromSessionMemory === \"function\"\n        );\n      if (!stateService) {\n        throw new Error(\n          `Cannot decorate ${constructor.name} with browserSession, Browser's StateService must be injected`\n        );\n      }\n\n      if (this.__syncedItemMetadata == null || !(this.__syncedItemMetadata instanceof Array)) {\n        return;\n      }\n\n      this.__sessionSyncers = this.__syncedItemMetadata.map((metadata) =>\n        this.buildSyncer(metadata, stateService)\n      );\n    }\n\n    buildSyncer(metadata: SyncedItemMetadata, stateService: BrowserStateService) {\n      const syncer = new SessionSyncer((this as any)[metadata.propertyKey], stateService, metadata);\n      syncer.init();\n      return syncer;\n    }\n  };\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SessionStorable } from \"./session-storable\";\nimport { InitializeOptions } from \"./sync-item-metadata\";\n\nclass BuildOptions<T, TJson = Jsonify<T>> {\n  ctor?: new () => T;\n  initializer?: (keyValuePair: TJson) => T;\n  initializeAs?: InitializeOptions;\n}\n\n// Used to ensure uniqueness for each synced observable\nlet index = 0;\n\n/**\n * A decorator used to indicate the BehaviorSubject should be synced for this browser session across all contexts.\n *\n * >**Note** This decorator does nothing if the enclosing class is not decorated with @browserSession.\n *\n * >**Note** The Behavior subject must be initialized with a default or in the constructor of the class. If it is not, an error will be thrown.\n *\n * >**!!Warning!!** If the property is overwritten at any time, the new value will not be synced across the browser session.\n *\n * @param buildOptions\n * Builders for the value, requires either a constructor (ctor) for your BehaviorSubject type or an\n * initializer function that takes a key value pair representation of the BehaviorSubject data\n * and returns your instantiated BehaviorSubject value. `initializeAs can optionally be used to indicate\n * the provided initializer function should be used to build an array of values. For example,\n * ```ts\n * \\@sessionSync({ initializer: Foo.fromJSON, initializeAs: 'array' })\n * ```\n * is equivalent to\n * ```\n * \\@sessionSync({ initializer: (obj: any[]) => obj.map((f) => Foo.fromJSON })\n * ```\n *\n * @returns decorator function\n */\nexport function sessionSync<T>(buildOptions: BuildOptions<T>) {\n  return (prototype: unknown, propertyKey: string) => {\n    // Force prototype into SessionStorable and implement it.\n    const p = prototype as SessionStorable;\n\n    if (p.__syncedItemMetadata == null) {\n      p.__syncedItemMetadata = [];\n    }\n\n    p.__syncedItemMetadata.push({\n      propertyKey,\n      sessionKey: `${propertyKey}_${index++}`,\n      ctor: buildOptions.ctor,\n      initializer: buildOptions.initializer,\n      initializeAs: buildOptions.initializeAs ?? \"object\",\n    });\n  };\n}\n","import { Jsonify } from \"type-fest\";\n\nimport {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"@bitwarden/common/models/domain/account\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"./browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"./browserSendComponentState\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout = -1; // On Restart\n\n  static fromJSON(json: Jsonify<AccountSettings>): AccountSettings {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountSettings(), json, super.fromJSON(json));\n  }\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n  groupings?: BrowserGroupingsComponentState;\n  send?: BrowserSendComponentState;\n  ciphers?: BrowserComponentState;\n  sendType?: BrowserComponentState;\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n    this.groupings = init?.groupings ?? new BrowserGroupingsComponentState();\n    this.send = init?.send ?? new BrowserSendComponentState();\n    this.ciphers = init?.ciphers ?? new BrowserComponentState();\n    this.sendType = init?.sendType ?? new BrowserComponentState();\n  }\n\n  static fromJSON(json: Jsonify<Account>): Account {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Account({}), json, super.fromJSON(json), {\n      settings: AccountSettings.fromJSON(json.settings),\n      groupings: BrowserGroupingsComponentState.fromJSON(json.groupings),\n      send: BrowserSendComponentState.fromJSON(json.send),\n      ciphers: BrowserComponentState.fromJSON(json.ciphers),\n      sendType: BrowserComponentState.fromJSON(json.sendType),\n    });\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\nimport { Jsonify } from \"type-fest\";\n\nimport { AbstractCachedStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\nimport { StateService as BaseStateService } from \"@bitwarden/common/services/state.service\";\n\nimport { browserSession, sessionSync } from \"../decorators/session-sync-observable\";\nimport { Account } from \"../models/account\";\nimport { BrowserComponentState } from \"../models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"../models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"../models/browserSendComponentState\";\n\nimport { BrowserStateService as StateServiceAbstraction } from \"./abstractions/browser-state.service\";\n\n@browserSession\nexport class BrowserStateService\n  extends BaseStateService<GlobalState, Account>\n  implements StateServiceAbstraction\n{\n  @sessionSync({\n    initializer: Account.fromJSON as any, // TODO: Remove this any when all any types are removed from Account\n    initializeAs: \"record\",\n  })\n  accounts: BehaviorSubject<{ [userId: string]: Account }>;\n  @sessionSync({ ctor: String })\n  protected activeAccountSubject: BehaviorSubject<string>;\n  @sessionSync({ ctor: Boolean })\n  protected activeAccountUnlockedSubject: BehaviorSubject<boolean>;\n  @sessionSync({\n    initializer: Account.fromJSON as any, // TODO: Remove this any when all any types are removed from Account\n    initializeAs: \"record\",\n  })\n  protected accountDiskCache: BehaviorSubject<Record<string, Account>>;\n\n  protected accountDeserializer = Account.fromJSON;\n\n  async hasInSessionMemory(key: string): Promise<boolean> {\n    return await this.memoryStorageService.has(key);\n  }\n\n  async getFromSessionMemory<T>(key: string, deserializer?: (obj: Jsonify<T>) => T): Promise<T> {\n    return this.memoryStorageService instanceof AbstractCachedStorageService\n      ? await this.memoryStorageService.getBypassCache<T>(key, { deserializer: deserializer })\n      : await this.memoryStorageService.get<T>(key);\n  }\n\n  async setInSessionMemory(key: string, value: any): Promise<void> {\n    await this.memoryStorageService.save(key, value);\n  }\n\n  async addAccount(account: Account) {\n    // Apply browser overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    // Firefox Private Mode can clash with non-Private Mode because they both read from the same onDiskOptions\n    // Check that there is an account in memory before considering the user authenticated\n    return (\n      (await super.getIsAuthenticated(options)) &&\n      (await this.getAccount(await this.defaultInMemoryOptions())) != null\n    );\n  }\n\n  async getBrowserGroupingComponentState(\n    options?: StorageOptions\n  ): Promise<BrowserGroupingsComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.groupings;\n  }\n\n  async setBrowserGroupingComponentState(\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.groupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getBrowserCipherComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.ciphers;\n  }\n\n  async setBrowserCipherComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.ciphers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getBrowserSendComponentState(options?: StorageOptions): Promise<BrowserSendComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.send;\n  }\n\n  async setBrowserSendComponentState(\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.send = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getBrowserSendTypeComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.sendType;\n  }\n\n  async setBrowserSendTypeComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.sendType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n}\n","import { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\n\nimport { Account } from \"../../models/account\";\nimport { BrowserStateService } from \"../../services/browser-state.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\nimport {\n  stateMigrationServiceFactory,\n  StateMigrationServiceInitOptions,\n} from \"./state-migration-service.factory\";\nimport {\n  diskStorageServiceFactory,\n  secureStorageServiceFactory,\n  memoryStorageServiceFactory,\n  DiskStorageServiceInitOptions,\n  SecureStorageServiceInitOptions,\n  MemoryStorageServiceInitOptions,\n} from \"./storage-service.factory\";\n\ntype StateServiceFactoryOptions = FactoryOptions & {\n  stateServiceOptions: {\n    useAccountCache?: boolean;\n    stateFactory: StateFactory<GlobalState, Account>;\n  };\n};\n\nexport type StateServiceInitOptions = StateServiceFactoryOptions &\n  DiskStorageServiceInitOptions &\n  SecureStorageServiceInitOptions &\n  MemoryStorageServiceInitOptions &\n  LogServiceInitOptions &\n  StateMigrationServiceInitOptions;\n\nexport async function stateServiceFactory(\n  cache: { stateService?: BrowserStateService } & CachedServices,\n  opts: StateServiceInitOptions\n): Promise<BrowserStateService> {\n  const service = await factory(\n    cache,\n    \"stateService\",\n    opts,\n    async () =>\n      await new BrowserStateService(\n        await diskStorageServiceFactory(cache, opts),\n        await secureStorageServiceFactory(cache, opts),\n        await memoryStorageServiceFactory(cache, opts),\n        await logServiceFactory(cache, opts),\n        await stateMigrationServiceFactory(cache, opts),\n        opts.stateServiceOptions.stateFactory,\n        opts.stateServiceOptions.useAccountCache\n      )\n  );\n  service.init();\n  return service;\n}\n","import { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\n\nimport { Account } from \"../../models/account\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport {\n  diskStorageServiceFactory,\n  DiskStorageServiceInitOptions,\n  secureStorageServiceFactory,\n  SecureStorageServiceInitOptions,\n} from \"./storage-service.factory\";\n\ntype StateMigrationServiceFactoryOptions = FactoryOptions & {\n  stateMigrationServiceOptions: {\n    stateFactory: StateFactory<GlobalState, Account>;\n  };\n};\n\nexport type StateMigrationServiceInitOptions = StateMigrationServiceFactoryOptions &\n  DiskStorageServiceInitOptions &\n  SecureStorageServiceInitOptions;\n\nexport function stateMigrationServiceFactory(\n  cache: { stateMigrationService?: StateMigrationService } & CachedServices,\n  opts: StateMigrationServiceInitOptions\n): Promise<StateMigrationService> {\n  return factory(\n    cache,\n    \"stateMigrationService\",\n    opts,\n    async () =>\n      new StateMigrationService(\n        await diskStorageServiceFactory(cache, opts),\n        await secureStorageServiceFactory(cache, opts),\n        opts.stateMigrationServiceOptions.stateFactory\n      )\n  );\n}\n","import { BrowserEnvironmentService } from \"../../services/browser-environment.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\nimport {\n  stateServiceFactory as stateServiceFactory,\n  StateServiceInitOptions,\n} from \"./state-service.factory\";\n\ntype EnvironmentServiceFactoryOptions = FactoryOptions;\n\nexport type EnvironmentServiceInitOptions = EnvironmentServiceFactoryOptions &\n  StateServiceInitOptions &\n  LogServiceInitOptions;\n\nexport function environmentServiceFactory(\n  cache: { environmentService?: BrowserEnvironmentService } & CachedServices,\n  opts: EnvironmentServiceInitOptions\n): Promise<BrowserEnvironmentService> {\n  return factory(\n    cache,\n    \"environmentService\",\n    opts,\n    async () =>\n      new BrowserEnvironmentService(\n        await stateServiceFactory(cache, opts),\n        await logServiceFactory(cache, opts)\n      )\n  );\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nexport default class BrowserMessagingService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    return BrowserApi.sendMessage(subscriber, arg);\n  }\n}\n","import { MessagingService as AbstractMessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\nimport BrowserMessagingService from \"../../services/browserMessaging.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\n\ntype MessagingServiceFactoryOptions = FactoryOptions;\n\nexport type MessagingServiceInitOptions = MessagingServiceFactoryOptions;\n\nexport function messagingServiceFactory(\n  cache: { messagingService?: AbstractMessagingService } & CachedServices,\n  opts: MessagingServiceInitOptions\n): Promise<AbstractMessagingService> {\n  return factory(cache, \"messagingService\", opts, () => new BrowserMessagingService());\n}\n","import { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport BrowserPlatformUtilsService from \"../../services/browserPlatformUtils.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport { MessagingServiceInitOptions, messagingServiceFactory } from \"./messaging-service.factory\";\n\ntype PlatformUtilsServiceFactoryOptions = FactoryOptions & {\n  platformUtilsServiceOptions: {\n    clipboardWriteCallback: (clipboardValue: string, clearMs: number) => Promise<void>;\n    biometricCallback: () => Promise<boolean>;\n    win: Window & typeof globalThis;\n  };\n};\n\nexport type PlatformUtilsServiceInitOptions = PlatformUtilsServiceFactoryOptions &\n  MessagingServiceInitOptions;\n\nexport function platformUtilsServiceFactory(\n  cache: { platformUtilsService?: PlatformUtilsService } & CachedServices,\n  opts: PlatformUtilsServiceInitOptions\n): Promise<PlatformUtilsService> {\n  return factory(\n    cache,\n    \"platformUtilsService\",\n    opts,\n    async () =>\n      new BrowserPlatformUtilsService(\n        await messagingServiceFactory(cache, opts),\n        opts.platformUtilsServiceOptions.clipboardWriteCallback,\n        opts.platformUtilsServiceOptions.biometricCallback,\n        opts.platformUtilsServiceOptions.win\n      )\n  );\n}\n","import { TokenService as AbstractTokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport { stateServiceFactory, StateServiceInitOptions } from \"./state-service.factory\";\n\ntype TokenServiceFactoryOptions = FactoryOptions;\n\nexport type TokenServiceInitOptions = TokenServiceFactoryOptions & StateServiceInitOptions;\n\nexport function tokenServiceFactory(\n  cache: { tokenService?: AbstractTokenService } & CachedServices,\n  opts: TokenServiceInitOptions\n): Promise<AbstractTokenService> {\n  return factory(\n    cache,\n    \"tokenService\",\n    opts,\n    async () => new TokenService(await stateServiceFactory(cache, opts))\n  );\n}\n","import { ApiService as AbstractApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\n\nimport { AppIdServiceInitOptions, appIdServiceFactory } from \"./app-id-service.factory\";\nimport {\n  environmentServiceFactory,\n  EnvironmentServiceInitOptions,\n} from \"./environment-service.factory\";\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport {\n  PlatformUtilsServiceInitOptions,\n  platformUtilsServiceFactory,\n} from \"./platform-utils-service.factory\";\nimport { TokenServiceInitOptions, tokenServiceFactory } from \"./token-service.factory\";\n\ntype ApiServiceFactoryOptions = FactoryOptions & {\n  apiServiceOptions: {\n    logoutCallback: (expired: boolean) => Promise<void>;\n    customUserAgent?: string;\n  };\n};\n\nexport type ApiServiceInitOptions = ApiServiceFactoryOptions &\n  TokenServiceInitOptions &\n  PlatformUtilsServiceInitOptions &\n  EnvironmentServiceInitOptions &\n  AppIdServiceInitOptions;\n\nexport function apiServiceFactory(\n  cache: { apiService?: AbstractApiService } & CachedServices,\n  opts: ApiServiceInitOptions\n): Promise<AbstractApiService> {\n  return factory(\n    cache,\n    \"apiService\",\n    opts,\n    async () =>\n      new ApiService(\n        await tokenServiceFactory(cache, opts),\n        await platformUtilsServiceFactory(cache, opts),\n        await environmentServiceFactory(cache, opts),\n        await appIdServiceFactory(cache, opts),\n        opts.apiServiceOptions.logoutCallback,\n        opts.apiServiceOptions.customUserAgent\n      )\n  );\n}\n","import { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\n\nexport class BrowserCryptoService extends CryptoService {\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions) {\n    if (keySuffix === \"biometric\") {\n      await this.platformUtilService.authenticateBiometric();\n      return (await this.getKey())?.keyB64;\n    }\n\n    return await super.retrieveKeyFromStorage(keySuffix);\n  }\n}\n","import { CryptoService as AbstractCryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\n\nimport { BrowserCryptoService } from \"../../services/browserCrypto.service\";\n\nimport {\n  cryptoFunctionServiceFactory,\n  CryptoFunctionServiceInitOptions,\n} from \"./crypto-function-service.factory\";\nimport { encryptServiceFactory, EncryptServiceInitOptions } from \"./encrypt-service.factory\";\nimport { FactoryOptions, CachedServices, factory } from \"./factory-options\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\nimport {\n  platformUtilsServiceFactory,\n  PlatformUtilsServiceInitOptions,\n} from \"./platform-utils-service.factory\";\nimport { stateServiceFactory, StateServiceInitOptions } from \"./state-service.factory\";\n\ntype CryptoServiceFactoryOptions = FactoryOptions;\n\nexport type CryptoServiceInitOptions = CryptoServiceFactoryOptions &\n  CryptoFunctionServiceInitOptions &\n  EncryptServiceInitOptions &\n  PlatformUtilsServiceInitOptions &\n  LogServiceInitOptions &\n  StateServiceInitOptions;\n\nexport function cryptoServiceFactory(\n  cache: { cryptoService?: AbstractCryptoService } & CachedServices,\n  opts: CryptoServiceInitOptions\n): Promise<AbstractCryptoService> {\n  return factory(\n    cache,\n    \"cryptoService\",\n    opts,\n    async () =>\n      new BrowserCryptoService(\n        await cryptoFunctionServiceFactory(cache, opts),\n        await encryptServiceFactory(cache, opts),\n        await platformUtilsServiceFactory(cache, opts),\n        await logServiceFactory(cache, opts),\n        await stateServiceFactory(cache, opts)\n      )\n  );\n}\n","import { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nexport default class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string) {\n    super(systemLanguage, null, async (formattedLocale: string) => {\n      // Deprecated\n      const file = await fetch(this.localesDirectory + formattedLocale + \"/messages.json\");\n      return await file.json();\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"ar\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"es\",\n      \"et\",\n      \"eu\",\n      \"fa\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lt\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-BR\",\n      \"pt-PT\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"th\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    if (this.localesDirectory == null) {\n      const placeholders: string[] = [];\n      if (p1 != null) {\n        placeholders.push(p1);\n      }\n      if (p2 != null) {\n        placeholders.push(p2);\n      }\n      if (p3 != null) {\n        placeholders.push(p3);\n      }\n\n      if (placeholders.length) {\n        return chrome.i18n.getMessage(id, placeholders);\n      } else {\n        return chrome.i18n.getMessage(id);\n      }\n    }\n\n    return super.translate(id, p1, p2, p3);\n  }\n}\n","import { Observable, ReplaySubject } from \"rxjs\";\n\nimport { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  private _locale = new ReplaySubject<string>(1);\n  locale$: Observable<string> = this._locale.asObservable();\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"ar\", \"العربية الفصحى\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"eu\", \"euskara\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n    this._locale.next(this.translationLocale);\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { I18nService as AbstractI18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nimport I18nService from \"../../services/i18n.service\";\n\nimport { FactoryOptions, CachedServices, factory } from \"./factory-options\";\n\ntype I18nServiceFactoryOptions = FactoryOptions & {\n  i18nServiceOptions: {\n    systemLanguage: string;\n  };\n};\n\nexport type I18nServiceInitOptions = I18nServiceFactoryOptions;\n\nexport async function i18nServiceFactory(\n  cache: { i18nService?: AbstractI18nService } & CachedServices,\n  opts: I18nServiceInitOptions\n): Promise<AbstractI18nService> {\n  const service = await factory(\n    cache,\n    \"i18nService\",\n    opts,\n    () => new I18nService(opts.i18nServiceOptions.systemLanguage)\n  );\n  if (!(service as BaseI18nService as any).inited) {\n    await (service as BaseI18nService).init();\n  }\n  return service;\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization/organization.service\";\n\nimport { browserSession, sessionSync } from \"../decorators/session-sync-observable\";\n\n@browserSession\nexport class BrowserOrganizationService extends OrganizationService {\n  @sessionSync({ initializer: Organization.fromJSON, initializeAs: \"array\" })\n  protected _organizations: BehaviorSubject<Organization[]>;\n}\n","import { KeyConnectorService as AbstractKeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\n\nimport { apiServiceFactory, ApiServiceInitOptions } from \"./api-service.factory\";\nimport {\n  cryptoFunctionServiceFactory,\n  CryptoFunctionServiceInitOptions,\n} from \"./crypto-function-service.factory\";\nimport { CryptoServiceInitOptions, cryptoServiceFactory } from \"./crypto-service.factory\";\nimport { FactoryOptions, CachedServices, factory } from \"./factory-options\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\nimport {\n  OrganizationServiceInitOptions,\n  organizationServiceFactory,\n} from \"./organization-service.factory\";\nimport { stateServiceFactory, StateServiceInitOptions } from \"./state-service.factory\";\nimport { tokenServiceFactory, TokenServiceInitOptions } from \"./token-service.factory\";\n\ntype KeyConnectorServiceFactoryOptions = FactoryOptions & {\n  keyConnectorServiceOptions: {\n    logoutCallback: (expired: boolean, userId?: string) => Promise<void>;\n  };\n};\n\nexport type KeyConnectorServiceInitOptions = KeyConnectorServiceFactoryOptions &\n  StateServiceInitOptions &\n  CryptoServiceInitOptions &\n  ApiServiceInitOptions &\n  TokenServiceInitOptions &\n  LogServiceInitOptions &\n  OrganizationServiceInitOptions &\n  CryptoFunctionServiceInitOptions;\n\nexport function keyConnectorServiceFactory(\n  cache: { keyConnectorService?: AbstractKeyConnectorService } & CachedServices,\n  opts: KeyConnectorServiceInitOptions\n): Promise<AbstractKeyConnectorService> {\n  return factory(\n    cache,\n    \"keyConnectorService\",\n    opts,\n    async () =>\n      new KeyConnectorService(\n        await stateServiceFactory(cache, opts),\n        await cryptoServiceFactory(cache, opts),\n        await apiServiceFactory(cache, opts),\n        await tokenServiceFactory(cache, opts),\n        await logServiceFactory(cache, opts),\n        await organizationServiceFactory(cache, opts),\n        await cryptoFunctionServiceFactory(cache, opts),\n        opts.keyConnectorServiceOptions.logoutCallback\n      )\n  );\n}\n","import { OrganizationService as AbstractOrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\n\nimport { BrowserOrganizationService } from \"../../services/browser-organization.service\";\n\nimport { FactoryOptions, CachedServices, factory } from \"./factory-options\";\nimport { stateServiceFactory, StateServiceInitOptions } from \"./state-service.factory\";\n\ntype OrganizationServiceFactoryOptions = FactoryOptions;\n\nexport type OrganizationServiceInitOptions = OrganizationServiceFactoryOptions &\n  StateServiceInitOptions;\n\nexport function organizationServiceFactory(\n  cache: { organizationService?: AbstractOrganizationService } & CachedServices,\n  opts: OrganizationServiceInitOptions\n): Promise<AbstractOrganizationService> {\n  return factory(\n    cache,\n    \"organizationService\",\n    opts,\n    async () => new BrowserOrganizationService(await stateServiceFactory(cache, opts))\n  );\n}\n","import { AuthService as AbstractAuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\n\nimport { apiServiceFactory, ApiServiceInitOptions } from \"./api-service.factory\";\nimport { appIdServiceFactory } from \"./app-id-service.factory\";\nimport { cryptoServiceFactory, CryptoServiceInitOptions } from \"./crypto-service.factory\";\nimport {\n  environmentServiceFactory,\n  EnvironmentServiceInitOptions,\n} from \"./environment-service.factory\";\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport { I18nServiceInitOptions, i18nServiceFactory } from \"./i18n-service.factory\";\nimport {\n  KeyConnectorServiceInitOptions,\n  keyConnectorServiceFactory,\n} from \"./key-connector-service.factory\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\nimport { MessagingServiceInitOptions, messagingServiceFactory } from \"./messaging-service.factory\";\nimport {\n  PlatformUtilsServiceInitOptions,\n  platformUtilsServiceFactory,\n} from \"./platform-utils-service.factory\";\nimport { stateServiceFactory, StateServiceInitOptions } from \"./state-service.factory\";\nimport { TokenServiceInitOptions, tokenServiceFactory } from \"./token-service.factory\";\nimport { TwoFactorServiceInitOptions, twoFactorServiceFactory } from \"./two-factor-service.factory\";\n\ntype AuthServiceFactoyOptions = FactoryOptions;\n\nexport type AuthServiceInitOptions = AuthServiceFactoyOptions &\n  CryptoServiceInitOptions &\n  ApiServiceInitOptions &\n  TokenServiceInitOptions &\n  PlatformUtilsServiceInitOptions &\n  MessagingServiceInitOptions &\n  LogServiceInitOptions &\n  KeyConnectorServiceInitOptions &\n  EnvironmentServiceInitOptions &\n  StateServiceInitOptions &\n  TwoFactorServiceInitOptions &\n  I18nServiceInitOptions;\n\nexport function authServiceFactory(\n  cache: { authService?: AbstractAuthService } & CachedServices,\n  opts: AuthServiceInitOptions\n): Promise<AbstractAuthService> {\n  return factory(\n    cache,\n    \"authService\",\n    opts,\n    async () =>\n      new AuthService(\n        await cryptoServiceFactory(cache, opts),\n        await apiServiceFactory(cache, opts),\n        await tokenServiceFactory(cache, opts),\n        await appIdServiceFactory(cache, opts),\n        await platformUtilsServiceFactory(cache, opts),\n        await messagingServiceFactory(cache, opts),\n        await logServiceFactory(cache, opts),\n        await keyConnectorServiceFactory(cache, opts),\n        await environmentServiceFactory(cache, opts),\n        await stateServiceFactory(cache, opts),\n        await twoFactorServiceFactory(cache, opts),\n        await i18nServiceFactory(cache, opts)\n      )\n  );\n}\n","import { TwoFactorService as AbstractTwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { FactoryOptions, CachedServices, factory } from \"./factory-options\";\nimport { I18nServiceInitOptions, i18nServiceFactory } from \"./i18n-service.factory\";\nimport {\n  platformUtilsServiceFactory,\n  PlatformUtilsServiceInitOptions,\n} from \"./platform-utils-service.factory\";\n\ntype TwoFactorServiceFactoryOptions = FactoryOptions;\n\nexport type TwoFactorServiceInitOptions = TwoFactorServiceFactoryOptions &\n  I18nServiceInitOptions &\n  PlatformUtilsServiceInitOptions;\n\nexport async function twoFactorServiceFactory(\n  cache: { twoFactorService?: AbstractTwoFactorService } & CachedServices,\n  opts: TwoFactorServiceInitOptions\n): Promise<AbstractTwoFactorService> {\n  const service = await factory(\n    cache,\n    \"twoFactorService\",\n    opts,\n    async () =>\n      new TwoFactorService(\n        await i18nServiceFactory(cache, opts),\n        await platformUtilsServiceFactory(cache, opts)\n      )\n  );\n  service.init();\n  return service;\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { AccountSettingsSettings } from \"@bitwarden/common/models/domain/account\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\n\nimport { sessionSync } from \"../decorators/session-sync-observable\";\n\nexport class BrowserSettingsService extends SettingsService {\n  @sessionSync({ initializer: (obj: string[][]) => obj })\n  protected _settings: BehaviorSubject<AccountSettingsSettings>;\n}\n","import { CipherService as AbstractCipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\n\nimport { apiServiceFactory, ApiServiceInitOptions } from \"./api-service.factory\";\nimport { cryptoServiceFactory, CryptoServiceInitOptions } from \"./crypto-service.factory\";\nimport { encryptServiceFactory, EncryptServiceInitOptions } from \"./encrypt-service.factory\";\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport {\n  FileUploadServiceInitOptions,\n  fileUploadServiceFactory,\n} from \"./file-upload-service.factory\";\nimport { i18nServiceFactory, I18nServiceInitOptions } from \"./i18n-service.factory\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\nimport { SettingsServiceInitOptions, settingsServiceFactory } from \"./settings-service.factory\";\nimport { stateServiceFactory, StateServiceInitOptions } from \"./state-service.factory\";\n\ntype CipherServiceFactoryOptions = FactoryOptions & {\n  cipherServiceOptions?: {\n    searchServiceFactory?: () => SearchService;\n  };\n};\n\nexport type CipherServiceInitOptions = CipherServiceFactoryOptions &\n  CryptoServiceInitOptions &\n  SettingsServiceInitOptions &\n  ApiServiceInitOptions &\n  FileUploadServiceInitOptions &\n  I18nServiceInitOptions &\n  LogServiceInitOptions &\n  StateServiceInitOptions &\n  EncryptServiceInitOptions;\n\nexport function cipherServiceFactory(\n  cache: { cipherService?: AbstractCipherService } & CachedServices,\n  opts: CipherServiceInitOptions\n): Promise<AbstractCipherService> {\n  return factory(\n    cache,\n    \"cipherService\",\n    opts,\n    async () =>\n      new CipherService(\n        await cryptoServiceFactory(cache, opts),\n        await settingsServiceFactory(cache, opts),\n        await apiServiceFactory(cache, opts),\n        await fileUploadServiceFactory(cache, opts),\n        await i18nServiceFactory(cache, opts),\n        opts.cipherServiceOptions?.searchServiceFactory === undefined\n          ? () => cache.searchService\n          : opts.cipherServiceOptions.searchServiceFactory,\n        await logServiceFactory(cache, opts),\n        await stateServiceFactory(cache, opts),\n        await encryptServiceFactory(cache, opts)\n      )\n  );\n}\n","import { SettingsService as AbstractSettingsService } from \"@bitwarden/common/abstractions/settings.service\";\n\nimport { BrowserSettingsService } from \"../../services/browser-settings.service\";\n\nimport { FactoryOptions, CachedServices, factory } from \"./factory-options\";\nimport { stateServiceFactory, StateServiceInitOptions } from \"./state-service.factory\";\n\ntype SettingsServiceFactoryOptions = FactoryOptions;\n\nexport type SettingsServiceInitOptions = SettingsServiceFactoryOptions & StateServiceInitOptions;\n\nexport function settingsServiceFactory(\n  cache: { settingsService?: AbstractSettingsService } & CachedServices,\n  opts: SettingsServiceInitOptions\n): Promise<AbstractSettingsService> {\n  return factory(\n    cache,\n    \"settingsService\",\n    opts,\n    async () => new BrowserSettingsService(await stateServiceFactory(cache, opts))\n  );\n}\n","import { FileUploadService as AbstractFileUploadService } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\n\nimport { apiServiceFactory, ApiServiceInitOptions } from \"./api-service.factory\";\nimport { FactoryOptions, CachedServices, factory } from \"./factory-options\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\n\ntype FileUploadServiceFactoyOptions = FactoryOptions;\n\nexport type FileUploadServiceInitOptions = FileUploadServiceFactoyOptions &\n  LogServiceInitOptions &\n  ApiServiceInitOptions;\n\nexport function fileUploadServiceFactory(\n  cache: { fileUploadService?: AbstractFileUploadService } & CachedServices,\n  opts: FileUploadServiceInitOptions\n): Promise<AbstractFileUploadService> {\n  return factory(\n    cache,\n    \"fileUploadService\",\n    opts,\n    async () =>\n      new FileUploadService(\n        await logServiceFactory(cache, opts),\n        await apiServiceFactory(cache, opts)\n      )\n  );\n}\n","import { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\n\nimport IconDetails from \"../background/models/iconDetails\";\nimport { authServiceFactory } from \"../background/service_factories/auth-service.factory\";\nimport { cipherServiceFactory } from \"../background/service_factories/cipher-service.factory\";\nimport { searchServiceFactory } from \"../background/service_factories/search-service.factory\";\nimport { stateServiceFactory } from \"../background/service_factories/state-service.factory\";\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { Account } from \"../models/account\";\nimport { BrowserStateService } from \"../services/abstractions/browser-state.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\n\nexport type BadgeOptions = {\n  tab?: chrome.tabs.Tab;\n  windowId?: number;\n};\n\nexport class UpdateBadge {\n  private authService: AuthService;\n  private stateService: BrowserStateService;\n  private cipherService: CipherService;\n  private badgeAction: typeof chrome.action;\n  private sidebarAction: OperaSidebarAction | FirefoxSidebarAction;\n  private inited = false;\n  private win: Window & typeof globalThis;\n\n  private static readonly listenedToCommands = [\n    \"updateBadge\",\n    \"loggedIn\",\n    \"unlocked\",\n    \"syncCompleted\",\n    \"bgUpdateContextMenu\",\n    \"editedCipher\",\n    \"addedCipher\",\n    \"deletedCipher\",\n  ];\n\n  static async tabsOnActivatedListener(activeInfo: chrome.tabs.TabActiveInfo) {\n    await new UpdateBadge(self).run({ tabId: activeInfo.tabId });\n  }\n\n  static async tabsOnReplacedListener(addedTabId: number, removedTabId: number) {\n    await new UpdateBadge(self).run({ tabId: addedTabId });\n  }\n\n  static async tabsOnUpdatedListener(tabId: number) {\n    await new UpdateBadge(self).run({ tabId });\n  }\n\n  static async messageListener(\n    serviceCache: Record<string, unknown>,\n    message: { command: string; tabId: number }\n  ) {\n    if (!UpdateBadge.listenedToCommands.includes(message.command)) {\n      return;\n    }\n\n    await new UpdateBadge(self).run();\n  }\n\n  constructor(win: Window & typeof globalThis) {\n    this.badgeAction = BrowserApi.getBrowserAction();\n    this.sidebarAction = BrowserApi.getSidebarAction(self);\n    this.win = win;\n  }\n\n  async run(opts?: {\n    tabId?: number;\n    windowId?: number;\n    existingServices?: Record<string, unknown>;\n  }): Promise<void> {\n    await this.initServices(opts?.existingServices);\n\n    const authStatus = await this.authService.getAuthStatus();\n\n    const tab = await this.getTab(opts?.tabId, opts?.windowId);\n    const windowId = tab?.windowId;\n\n    await this.setBadgeBackgroundColor();\n\n    switch (authStatus) {\n      case AuthenticationStatus.LoggedOut: {\n        await this.setLoggedOut({ tab, windowId });\n        break;\n      }\n      case AuthenticationStatus.Locked: {\n        await this.setLocked({ tab, windowId });\n        break;\n      }\n      case AuthenticationStatus.Unlocked: {\n        await this.setUnlocked({ tab, windowId });\n        break;\n      }\n    }\n  }\n\n  async setLoggedOut(opts: BadgeOptions): Promise<void> {\n    await this.setBadgeIcon(\"_gray\", opts?.windowId);\n    await this.setBadgeText(\"\", opts?.tab?.id);\n  }\n\n  async setLocked(opts: BadgeOptions) {\n    await this.setBadgeIcon(\"_locked\", opts?.windowId);\n    await this.setBadgeText(\"\", opts?.tab?.id);\n  }\n\n  async setUnlocked(opts: BadgeOptions) {\n    await this.initServices();\n\n    await this.setBadgeIcon(\"\", opts?.windowId);\n\n    const disableBadgeCounter = await this.stateService.getDisableBadgeCounter();\n    if (disableBadgeCounter) {\n      return;\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(opts?.tab?.url);\n    let countText = ciphers.length == 0 ? \"\" : ciphers.length.toString();\n    if (ciphers.length > 9) {\n      countText = \"9+\";\n    }\n    await this.setBadgeText(countText, opts?.tab?.id);\n  }\n\n  setBadgeBackgroundColor(color = \"#294e5f\") {\n    if (this.badgeAction?.setBadgeBackgroundColor) {\n      this.badgeAction.setBadgeBackgroundColor({ color });\n    }\n    if (this.isOperaSidebar(this.sidebarAction)) {\n      this.sidebarAction.setBadgeBackgroundColor({ color });\n    }\n  }\n\n  setBadgeText(text: string, tabId?: number) {\n    this.setActionText(text, tabId);\n    this.setSideBarText(text, tabId);\n  }\n\n  async setBadgeIcon(iconSuffix: string, windowId?: number) {\n    const options: IconDetails = {\n      path: {\n        19: \"/images/icon19\" + iconSuffix + \".png\",\n        38: \"/images/icon38\" + iconSuffix + \".png\",\n      },\n    };\n    if (BrowserPlatformUtilsService.isFirefox()) {\n      options.windowId = windowId;\n    }\n\n    await this.setActionIcon(options);\n    await this.setSidebarActionIcon(options);\n  }\n\n  private setActionText(text: string, tabId?: number) {\n    if (this.badgeAction?.setBadgeText) {\n      this.badgeAction.setBadgeText({ text, tabId });\n    }\n  }\n\n  private setSideBarText(text: string, tabId?: number) {\n    if (this.isOperaSidebar(this.sidebarAction)) {\n      this.sidebarAction.setBadgeText({ text, tabId });\n    } else if (this.sidebarAction) {\n      // Firefox\n      const title = `Bitwarden${Utils.isNullOrEmpty(text) ? \"\" : ` [${text}]`}`;\n      this.sidebarAction.setTitle({ title, tabId });\n    }\n  }\n\n  private async setActionIcon(options: IconDetails) {\n    if (!this.badgeAction?.setIcon) {\n      return;\n    }\n\n    if (this.useSyncApiCalls) {\n      this.badgeAction.setIcon(options);\n    } else {\n      await new Promise<void>((resolve) => this.badgeAction.setIcon(options, () => resolve()));\n    }\n  }\n\n  private async setSidebarActionIcon(options: IconDetails) {\n    if (!this.sidebarAction?.setIcon) {\n      return;\n    }\n\n    if (this.useSyncApiCalls) {\n      this.sidebarAction.setIcon(options);\n    } else {\n      await new Promise<void>((resolve) => this.sidebarAction.setIcon(options, () => resolve()));\n    }\n  }\n\n  private async getTab(tabId?: number, windowId?: number) {\n    return (\n      (await BrowserApi.getTab(tabId)) ??\n      (await BrowserApi.tabsQueryFirst({ active: true, windowId })) ??\n      (await BrowserApi.tabsQueryFirst({ active: true, lastFocusedWindow: true })) ??\n      (await BrowserApi.tabsQueryFirst({ active: true }))\n    );\n  }\n\n  private get useSyncApiCalls() {\n    return (\n      BrowserPlatformUtilsService.isFirefox() || BrowserPlatformUtilsService.isSafari(this.win)\n    );\n  }\n\n  private async initServices(existingServiceCache?: Record<string, unknown>): Promise<UpdateBadge> {\n    if (this.inited) {\n      return this;\n    }\n\n    const serviceCache: Record<string, unknown> = existingServiceCache || {};\n    const opts = {\n      cryptoFunctionServiceOptions: { win: self },\n      encryptServiceOptions: { logMacFailures: false },\n      logServiceOptions: { isDev: false },\n      platformUtilsServiceOptions: {\n        clipboardWriteCallback: (clipboardValue: string, clearMs: number) =>\n          Promise.reject(\"not implemented\"),\n        biometricCallback: () => Promise.reject(\"not implemented\"),\n        win: self,\n      },\n      stateServiceOptions: {\n        stateFactory: new StateFactory(GlobalState, Account),\n      },\n      stateMigrationServiceOptions: {\n        stateFactory: new StateFactory(GlobalState, Account),\n      },\n      apiServiceOptions: {\n        logoutCallback: () => Promise.reject(\"not implemented\"),\n      },\n      keyConnectorServiceOptions: {\n        logoutCallback: () => Promise.reject(\"not implemented\"),\n      },\n      i18nServiceOptions: {\n        systemLanguage: BrowserApi.getUILanguage(self),\n      },\n    };\n    this.stateService = await stateServiceFactory(serviceCache, opts);\n    this.authService = await authServiceFactory(serviceCache, opts);\n    const searchService = await searchServiceFactory(serviceCache, opts);\n\n    this.cipherService = await cipherServiceFactory(serviceCache, {\n      ...opts,\n      cipherServiceOptions: { searchServiceFactory: () => searchService },\n    });\n\n    // Needed for cipher decryption\n    if (!self.bitwardenContainerService) {\n      new ContainerService(\n        serviceCache.cryptoService as CryptoService,\n        serviceCache.encryptService as EncryptService\n      ).attachToGlobal(self);\n    }\n\n    this.inited = true;\n\n    return this;\n  }\n\n  private isOperaSidebar(\n    action: OperaSidebarAction | FirefoxSidebarAction\n  ): action is OperaSidebarAction {\n    return action != null && (action as OperaSidebarAction).setBadgeText != null;\n  }\n}\n","import { SearchService as AbstractSearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\n\nimport { cipherServiceFactory, CipherServiceInitOptions } from \"./cipher-service.factory\";\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport { i18nServiceFactory, I18nServiceInitOptions } from \"./i18n-service.factory\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\n\ntype SearchServiceFactoryOptions = FactoryOptions;\n\nexport type SearchServiceInitOptions = SearchServiceFactoryOptions &\n  CipherServiceInitOptions &\n  LogServiceInitOptions &\n  I18nServiceInitOptions;\n\nexport function searchServiceFactory(\n  cache: { searchService?: AbstractSearchService } & CachedServices,\n  opts: SearchServiceInitOptions\n): Promise<AbstractSearchService> {\n  return factory(\n    cache,\n    \"searchService\",\n    opts,\n    async () =>\n      new SearchService(\n        await cipherServiceFactory(cache, opts),\n        await logServiceFactory(cache, opts),\n        await i18nServiceFactory(cache, opts)\n      )\n  );\n}\n","export default class AutofillScript {\n  script: string[][] = [];\n  documentUUID: any = {};\n  properties: any = {};\n  options: any = {};\n  metadata: any = {};\n  autosubmit: any = null;\n  savedUrls: string[];\n\n  constructor(documentUUID: string) {\n    this.documentUUID = documentUUID;\n  }\n}\n","export class AutoFillConstants {\n  static readonly UsernameFieldNames: string[] = [\n    // English\n    \"username\",\n    \"user name\",\n    \"email\",\n    \"email address\",\n    \"e-mail\",\n    \"e-mail address\",\n    \"userid\",\n    \"user id\",\n    \"customer id\",\n    \"login id\",\n    // German\n    \"benutzername\",\n    \"benutzer name\",\n    \"email adresse\",\n    \"e-mail adresse\",\n    \"benutzerid\",\n    \"benutzer id\",\n  ];\n\n  static readonly PasswordFieldIgnoreList: string[] = [\n    \"onetimepassword\",\n    \"captcha\",\n    \"findanything\",\n    \"forgot\",\n  ];\n\n  static readonly ExcludedAutofillTypes: string[] = [\n    \"radio\",\n    \"checkbox\",\n    \"hidden\",\n    \"file\",\n    \"button\",\n    \"image\",\n    \"reset\",\n    \"search\",\n  ];\n}\n\nexport class CreditCardAutoFillConstants {\n  static readonly CardAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly CardAttributesExtended: string[] = [\n    ...CreditCardAutoFillConstants.CardAttributes,\n    \"label-right\",\n  ];\n\n  static readonly CardHolderFieldNames: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"name\",\n    \"nom\",\n  ];\n\n  static readonly CardHolderFieldNameValues: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"tbName\",\n  ];\n\n  static readonly CardNumberFieldNames: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"number\",\n    \"cc\",\n    \"cc-no\",\n    \"card-no\",\n    \"credit-card\",\n    \"numero-carte\",\n    \"carte\",\n    \"carte-credit\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardNumberFieldNameValues: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"cc-no\",\n    \"card-no\",\n    \"numero-carte\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardExpiryFieldNames: string[] = [\n    \"cc-exp\",\n    \"card-exp\",\n    \"cc-expiration\",\n    \"card-expiration\",\n    \"cc-ex\",\n    \"card-ex\",\n    \"card-expire\",\n    \"card-expiry\",\n    \"validite\",\n    \"expiration\",\n    \"expiry\",\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n    \"payment-cc-date\",\n  ];\n\n  static readonly CardExpiryFieldNameValues: string[] = [\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n  ];\n\n  static readonly ExpiryMonthFieldNames: string[] = [\n    \"exp-month\",\n    \"cc-exp-month\",\n    \"cc-month\",\n    \"card-month\",\n    \"cc-mo\",\n    \"card-mo\",\n    \"exp-mo\",\n    \"card-exp-mo\",\n    \"cc-exp-mo\",\n    \"card-expiration-month\",\n    \"expiration-month\",\n    \"cc-mm\",\n    \"cc-m\",\n    \"card-mm\",\n    \"card-m\",\n    \"card-exp-mm\",\n    \"cc-exp-mm\",\n    \"exp-mm\",\n    \"exp-m\",\n    \"expire-month\",\n    \"expire-mo\",\n    \"expiry-month\",\n    \"expiry-mo\",\n    \"card-expire-month\",\n    \"card-expire-mo\",\n    \"card-expiry-month\",\n    \"card-expiry-mo\",\n    \"mois-validite\",\n    \"mois-expiration\",\n    \"m-validite\",\n    \"m-expiration\",\n    \"expiry-date-field-month\",\n    \"expiration-date-month\",\n    \"expiration-date-mm\",\n    \"exp-mon\",\n    \"validity-mo\",\n    \"exp-date-mo\",\n    \"cb-date-mois\",\n    \"date-m\",\n  ];\n\n  static readonly ExpiryYearFieldNames: string[] = [\n    \"exp-year\",\n    \"cc-exp-year\",\n    \"cc-year\",\n    \"card-year\",\n    \"cc-yr\",\n    \"card-yr\",\n    \"exp-yr\",\n    \"card-exp-yr\",\n    \"cc-exp-yr\",\n    \"card-expiration-year\",\n    \"expiration-year\",\n    \"cc-yy\",\n    \"cc-y\",\n    \"card-yy\",\n    \"card-y\",\n    \"card-exp-yy\",\n    \"cc-exp-yy\",\n    \"exp-yy\",\n    \"exp-y\",\n    \"cc-yyyy\",\n    \"card-yyyy\",\n    \"card-exp-yyyy\",\n    \"cc-exp-yyyy\",\n    \"expire-year\",\n    \"expire-yr\",\n    \"expiry-year\",\n    \"expiry-yr\",\n    \"card-expire-year\",\n    \"card-expire-yr\",\n    \"card-expiry-year\",\n    \"card-expiry-yr\",\n    \"an-validite\",\n    \"an-expiration\",\n    \"annee-validite\",\n    \"annee-expiration\",\n    \"expiry-date-field-year\",\n    \"expiration-date-year\",\n    \"cb-date-ann\",\n    \"expiration-date-yy\",\n    \"expiration-date-yyyy\",\n    \"validity-year\",\n    \"exp-date-year\",\n    \"date-y\",\n  ];\n\n  static readonly CVVFieldNames: string[] = [\n    \"cvv\",\n    \"cvc\",\n    \"cvv2\",\n    \"cc-csc\",\n    \"cc-cvv\",\n    \"card-csc\",\n    \"card-cvv\",\n    \"cvd\",\n    \"cid\",\n    \"cvc2\",\n    \"cnv\",\n    \"cvn2\",\n    \"cc-code\",\n    \"card-code\",\n    \"code-securite\",\n    \"security-code\",\n    \"crypto\",\n    \"card-verif\",\n    \"verification-code\",\n    \"csc\",\n    \"ccv\",\n  ];\n\n  static readonly CardBrandFieldNames: string[] = [\n    \"cc-type\",\n    \"card-type\",\n    \"card-brand\",\n    \"cc-brand\",\n    \"cb-type\",\n  ];\n\n  // Each index represents a language. These three arrays should all be the same length.\n  // 0: English, 1: Danish, 2: German/Dutch, 3: French/Spanish/Italian, 4: Russian, 5: Portuguese\n  static readonly MonthAbbr = [\"mm\", \"mm\", \"mm\", \"mm\", \"mm\", \"mm\"];\n  static readonly YearAbbrShort = [\"yy\", \"åå\", \"jj\", \"aa\", \"гг\", \"rr\"];\n  static readonly YearAbbrLong = [\"yyyy\", \"åååå\", \"jjjj\", \"aa\", \"гггг\", \"rrrr\"];\n}\n\nexport class IdentityAutoFillConstants {\n  static readonly IdentityAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly FullNameFieldNames: string[] = [\"name\", \"full-name\", \"your-name\"];\n\n  static readonly FullNameFieldNameValues: string[] = [\"full-name\", \"your-name\"];\n\n  static readonly TitleFieldNames: string[] = [\"honorific-prefix\", \"prefix\", \"title\"];\n\n  static readonly FirstnameFieldNames: string[] = [\n    // English\n    \"f-name\",\n    \"first-name\",\n    \"given-name\",\n    \"first-n\",\n    // German\n    \"vorname\",\n  ];\n\n  static readonly MiddlenameFieldNames: string[] = [\n    \"m-name\",\n    \"middle-name\",\n    \"additional-name\",\n    \"middle-initial\",\n    \"middle-n\",\n    \"middle-i\",\n  ];\n\n  static readonly LastnameFieldNames: string[] = [\n    // English\n    \"l-name\",\n    \"last-name\",\n    \"s-name\",\n    \"surname\",\n    \"family-name\",\n    \"family-n\",\n    \"last-n\",\n    // German\n    \"nachname\",\n    \"familienname\",\n  ];\n\n  static readonly EmailFieldNames: string[] = [\"e-mail\", \"email-address\"];\n\n  static readonly AddressFieldNames: string[] = [\n    \"address\",\n    \"street-address\",\n    \"addr\",\n    \"street\",\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly AddressFieldNameValues: string[] = [\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly Address1FieldNames: string[] = [\n    \"address-1\",\n    \"address-line-1\",\n    \"addr-1\",\n    \"street-1\",\n  ];\n\n  static readonly Address2FieldNames: string[] = [\n    \"address-2\",\n    \"address-line-2\",\n    \"addr-2\",\n    \"street-2\",\n  ];\n\n  static readonly Address3FieldNames: string[] = [\n    \"address-3\",\n    \"address-line-3\",\n    \"addr-3\",\n    \"street-3\",\n  ];\n\n  static readonly PostalCodeFieldNames: string[] = [\n    \"postal\",\n    \"zip\",\n    \"zip2\",\n    \"zip-code\",\n    \"postal-code\",\n    \"post-code\",\n    \"address-zip\",\n    \"address-postal\",\n    \"address-code\",\n    \"address-postal-code\",\n    \"address-zip-code\",\n  ];\n\n  static readonly CityFieldNames: string[] = [\n    \"city\",\n    \"town\",\n    \"address-level-2\",\n    \"address-city\",\n    \"address-town\",\n  ];\n\n  static readonly StateFieldNames: string[] = [\n    \"state\",\n    \"province\",\n    \"provence\",\n    \"address-level-1\",\n    \"address-state\",\n    \"address-province\",\n  ];\n\n  static readonly CountryFieldNames: string[] = [\n    \"country\",\n    \"country-code\",\n    \"country-name\",\n    \"address-country\",\n    \"address-country-name\",\n    \"address-country-code\",\n  ];\n\n  static readonly PhoneFieldNames: string[] = [\n    \"phone\",\n    \"mobile\",\n    \"mobile-phone\",\n    \"tel\",\n    \"telephone\",\n    \"phone-number\",\n  ];\n\n  static readonly UserNameFieldNames: string[] = [\"user-name\", \"user-id\", \"screen-name\"];\n\n  static readonly CompanyFieldNames: string[] = [\n    \"company\",\n    \"company-name\",\n    \"organization\",\n    \"organization-name\",\n  ];\n\n  static readonly IsoCountries: { [id: string]: string } = {\n    afghanistan: \"AF\",\n    \"aland islands\": \"AX\",\n    albania: \"AL\",\n    algeria: \"DZ\",\n    \"american samoa\": \"AS\",\n    andorra: \"AD\",\n    angola: \"AO\",\n    anguilla: \"AI\",\n    antarctica: \"AQ\",\n    \"antigua and barbuda\": \"AG\",\n    argentina: \"AR\",\n    armenia: \"AM\",\n    aruba: \"AW\",\n    australia: \"AU\",\n    austria: \"AT\",\n    azerbaijan: \"AZ\",\n    bahamas: \"BS\",\n    bahrain: \"BH\",\n    bangladesh: \"BD\",\n    barbados: \"BB\",\n    belarus: \"BY\",\n    belgium: \"BE\",\n    belize: \"BZ\",\n    benin: \"BJ\",\n    bermuda: \"BM\",\n    bhutan: \"BT\",\n    bolivia: \"BO\",\n    \"bosnia and herzegovina\": \"BA\",\n    botswana: \"BW\",\n    \"bouvet island\": \"BV\",\n    brazil: \"BR\",\n    \"british indian ocean territory\": \"IO\",\n    \"brunei darussalam\": \"BN\",\n    bulgaria: \"BG\",\n    \"burkina faso\": \"BF\",\n    burundi: \"BI\",\n    cambodia: \"KH\",\n    cameroon: \"CM\",\n    canada: \"CA\",\n    \"cape verde\": \"CV\",\n    \"cayman islands\": \"KY\",\n    \"central african republic\": \"CF\",\n    chad: \"TD\",\n    chile: \"CL\",\n    china: \"CN\",\n    \"christmas island\": \"CX\",\n    \"cocos (keeling) islands\": \"CC\",\n    colombia: \"CO\",\n    comoros: \"KM\",\n    congo: \"CG\",\n    \"congo, democratic republic\": \"CD\",\n    \"cook islands\": \"CK\",\n    \"costa rica\": \"CR\",\n    \"cote d'ivoire\": \"CI\",\n    croatia: \"HR\",\n    cuba: \"CU\",\n    cyprus: \"CY\",\n    \"czech republic\": \"CZ\",\n    denmark: \"DK\",\n    djibouti: \"DJ\",\n    dominica: \"DM\",\n    \"dominican republic\": \"DO\",\n    ecuador: \"EC\",\n    egypt: \"EG\",\n    \"el salvador\": \"SV\",\n    \"equatorial guinea\": \"GQ\",\n    eritrea: \"ER\",\n    estonia: \"EE\",\n    ethiopia: \"ET\",\n    \"falkland islands\": \"FK\",\n    \"faroe islands\": \"FO\",\n    fiji: \"FJ\",\n    finland: \"FI\",\n    france: \"FR\",\n    \"french guiana\": \"GF\",\n    \"french polynesia\": \"PF\",\n    \"french southern territories\": \"TF\",\n    gabon: \"GA\",\n    gambia: \"GM\",\n    georgia: \"GE\",\n    germany: \"DE\",\n    ghana: \"GH\",\n    gibraltar: \"GI\",\n    greece: \"GR\",\n    greenland: \"GL\",\n    grenada: \"GD\",\n    guadeloupe: \"GP\",\n    guam: \"GU\",\n    guatemala: \"GT\",\n    guernsey: \"GG\",\n    guinea: \"GN\",\n    \"guinea-bissau\": \"GW\",\n    guyana: \"GY\",\n    haiti: \"HT\",\n    \"heard island & mcdonald islands\": \"HM\",\n    \"holy see (vatican city state)\": \"VA\",\n    honduras: \"HN\",\n    \"hong kong\": \"HK\",\n    hungary: \"HU\",\n    iceland: \"IS\",\n    india: \"IN\",\n    indonesia: \"ID\",\n    \"iran, islamic republic of\": \"IR\",\n    iraq: \"IQ\",\n    ireland: \"IE\",\n    \"isle of man\": \"IM\",\n    israel: \"IL\",\n    italy: \"IT\",\n    jamaica: \"JM\",\n    japan: \"JP\",\n    jersey: \"JE\",\n    jordan: \"JO\",\n    kazakhstan: \"KZ\",\n    kenya: \"KE\",\n    kiribati: \"KI\",\n    \"republic of korea\": \"KR\",\n    \"south korea\": \"KR\",\n    \"democratic people's republic of korea\": \"KP\",\n    \"north korea\": \"KP\",\n    kuwait: \"KW\",\n    kyrgyzstan: \"KG\",\n    \"lao people's democratic republic\": \"LA\",\n    latvia: \"LV\",\n    lebanon: \"LB\",\n    lesotho: \"LS\",\n    liberia: \"LR\",\n    \"libyan arab jamahiriya\": \"LY\",\n    liechtenstein: \"LI\",\n    lithuania: \"LT\",\n    luxembourg: \"LU\",\n    macao: \"MO\",\n    macedonia: \"MK\",\n    madagascar: \"MG\",\n    malawi: \"MW\",\n    malaysia: \"MY\",\n    maldives: \"MV\",\n    mali: \"ML\",\n    malta: \"MT\",\n    \"marshall islands\": \"MH\",\n    martinique: \"MQ\",\n    mauritania: \"MR\",\n    mauritius: \"MU\",\n    mayotte: \"YT\",\n    mexico: \"MX\",\n    \"micronesia, federated states of\": \"FM\",\n    moldova: \"MD\",\n    monaco: \"MC\",\n    mongolia: \"MN\",\n    montenegro: \"ME\",\n    montserrat: \"MS\",\n    morocco: \"MA\",\n    mozambique: \"MZ\",\n    myanmar: \"MM\",\n    namibia: \"NA\",\n    nauru: \"NR\",\n    nepal: \"NP\",\n    netherlands: \"NL\",\n    \"netherlands antilles\": \"AN\",\n    \"new caledonia\": \"NC\",\n    \"new zealand\": \"NZ\",\n    nicaragua: \"NI\",\n    niger: \"NE\",\n    nigeria: \"NG\",\n    niue: \"NU\",\n    \"norfolk island\": \"NF\",\n    \"northern mariana islands\": \"MP\",\n    norway: \"NO\",\n    oman: \"OM\",\n    pakistan: \"PK\",\n    palau: \"PW\",\n    \"palestinian territory, occupied\": \"PS\",\n    panama: \"PA\",\n    \"papua new guinea\": \"PG\",\n    paraguay: \"PY\",\n    peru: \"PE\",\n    philippines: \"PH\",\n    pitcairn: \"PN\",\n    poland: \"PL\",\n    portugal: \"PT\",\n    \"puerto rico\": \"PR\",\n    qatar: \"QA\",\n    reunion: \"RE\",\n    romania: \"RO\",\n    \"russian federation\": \"RU\",\n    rwanda: \"RW\",\n    \"saint barthelemy\": \"BL\",\n    \"saint helena\": \"SH\",\n    \"saint kitts and nevis\": \"KN\",\n    \"saint lucia\": \"LC\",\n    \"saint martin\": \"MF\",\n    \"saint pierre and miquelon\": \"PM\",\n    \"saint vincent and grenadines\": \"VC\",\n    samoa: \"WS\",\n    \"san marino\": \"SM\",\n    \"sao tome and principe\": \"ST\",\n    \"saudi arabia\": \"SA\",\n    senegal: \"SN\",\n    serbia: \"RS\",\n    seychelles: \"SC\",\n    \"sierra leone\": \"SL\",\n    singapore: \"SG\",\n    slovakia: \"SK\",\n    slovenia: \"SI\",\n    \"solomon islands\": \"SB\",\n    somalia: \"SO\",\n    \"south africa\": \"ZA\",\n    \"south georgia and sandwich isl.\": \"GS\",\n    spain: \"ES\",\n    \"sri lanka\": \"LK\",\n    sudan: \"SD\",\n    suriname: \"SR\",\n    \"svalbard and jan mayen\": \"SJ\",\n    swaziland: \"SZ\",\n    sweden: \"SE\",\n    switzerland: \"CH\",\n    \"syrian arab republic\": \"SY\",\n    taiwan: \"TW\",\n    tajikistan: \"TJ\",\n    tanzania: \"TZ\",\n    thailand: \"TH\",\n    \"timor-leste\": \"TL\",\n    togo: \"TG\",\n    tokelau: \"TK\",\n    tonga: \"TO\",\n    \"trinidad and tobago\": \"TT\",\n    tunisia: \"TN\",\n    turkey: \"TR\",\n    turkmenistan: \"TM\",\n    \"turks and caicos islands\": \"TC\",\n    tuvalu: \"TV\",\n    uganda: \"UG\",\n    ukraine: \"UA\",\n    \"united arab emirates\": \"AE\",\n    \"united kingdom\": \"GB\",\n    \"united states\": \"US\",\n    \"united states outlying islands\": \"UM\",\n    uruguay: \"UY\",\n    uzbekistan: \"UZ\",\n    vanuatu: \"VU\",\n    venezuela: \"VE\",\n    vietnam: \"VN\",\n    \"virgin islands, british\": \"VG\",\n    \"virgin islands, u.s.\": \"VI\",\n    \"wallis and futuna\": \"WF\",\n    \"western sahara\": \"EH\",\n    yemen: \"YE\",\n    zambia: \"ZM\",\n    zimbabwe: \"ZW\",\n  };\n\n  static readonly IsoStates: { [id: string]: string } = {\n    alabama: \"AL\",\n    alaska: \"AK\",\n    \"american samoa\": \"AS\",\n    arizona: \"AZ\",\n    arkansas: \"AR\",\n    california: \"CA\",\n    colorado: \"CO\",\n    connecticut: \"CT\",\n    delaware: \"DE\",\n    \"district of columbia\": \"DC\",\n    \"federated states of micronesia\": \"FM\",\n    florida: \"FL\",\n    georgia: \"GA\",\n    guam: \"GU\",\n    hawaii: \"HI\",\n    idaho: \"ID\",\n    illinois: \"IL\",\n    indiana: \"IN\",\n    iowa: \"IA\",\n    kansas: \"KS\",\n    kentucky: \"KY\",\n    louisiana: \"LA\",\n    maine: \"ME\",\n    \"marshall islands\": \"MH\",\n    maryland: \"MD\",\n    massachusetts: \"MA\",\n    michigan: \"MI\",\n    minnesota: \"MN\",\n    mississippi: \"MS\",\n    missouri: \"MO\",\n    montana: \"MT\",\n    nebraska: \"NE\",\n    nevada: \"NV\",\n    \"new hampshire\": \"NH\",\n    \"new jersey\": \"NJ\",\n    \"new mexico\": \"NM\",\n    \"new york\": \"NY\",\n    \"north carolina\": \"NC\",\n    \"north dakota\": \"ND\",\n    \"northern mariana islands\": \"MP\",\n    ohio: \"OH\",\n    oklahoma: \"OK\",\n    oregon: \"OR\",\n    palau: \"PW\",\n    pennsylvania: \"PA\",\n    \"puerto rico\": \"PR\",\n    \"rhode island\": \"RI\",\n    \"south carolina\": \"SC\",\n    \"south dakota\": \"SD\",\n    tennessee: \"TN\",\n    texas: \"TX\",\n    utah: \"UT\",\n    vermont: \"VT\",\n    \"virgin islands\": \"VI\",\n    virginia: \"VA\",\n    washington: \"WA\",\n    \"west virginia\": \"WV\",\n    wisconsin: \"WI\",\n    wyoming: \"WY\",\n  };\n\n  static readonly IsoProvinces: { [id: string]: string } = {\n    alberta: \"AB\",\n    \"british columbia\": \"BC\",\n    manitoba: \"MB\",\n    \"new brunswick\": \"NB\",\n    \"newfoundland and labrador\": \"NL\",\n    \"nova scotia\": \"NS\",\n    ontario: \"ON\",\n    \"prince edward island\": \"PE\",\n    quebec: \"QC\",\n    saskatchewan: \"SK\",\n  };\n}\n","import { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { FieldView } from \"@bitwarden/common/models/view/field.view\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport AutofillField from \"../models/autofillField\";\nimport AutofillPageDetails from \"../models/autofillPageDetails\";\nimport AutofillScript from \"../models/autofillScript\";\n\nimport {\n  AutoFillOptions,\n  AutofillService as AutofillServiceInterface,\n  PageDetail,\n  FormData,\n} from \"./abstractions/autofill.service\";\nimport { BrowserStateService } from \"./abstractions/browser-state.service\";\nimport {\n  AutoFillConstants,\n  CreditCardAutoFillConstants,\n  IdentityAutoFillConstants,\n} from \"./autofillConstants\";\n\nexport interface GenerateFillScriptOptions {\n  skipUsernameOnlyFill: boolean;\n  onlyEmptyFields: boolean;\n  onlyVisibleFields: boolean;\n  fillNewPassword: boolean;\n  cipher: CipherView;\n}\n\nexport default class AutofillService implements AutofillServiceInterface {\n  constructor(\n    private cipherService: CipherService,\n    private stateService: BrowserStateService,\n    private totpService: TotpService,\n    private eventService: EventService,\n    private logService: LogService\n  ) {}\n\n  getFormsWithPasswordFields(pageDetails: AutofillPageDetails): FormData[] {\n    const formData: FormData[] = [];\n\n    const passwordFields = AutofillService.loadPasswordFields(\n      pageDetails,\n      true,\n      true,\n      false,\n      false\n    );\n    if (passwordFields.length === 0) {\n      return formData;\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const formPasswordFields = passwordFields.filter((pf) => formKey === pf.form);\n      if (formPasswordFields.length > 0) {\n        let uf = this.findUsernameField(pageDetails, formPasswordFields[0], false, false, false);\n        if (uf == null) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          uf = this.findUsernameField(pageDetails, formPasswordFields[0], true, true, false);\n        }\n        formData.push({\n          form: pageDetails.forms[formKey],\n          password: formPasswordFields[0],\n          username: uf,\n          passwords: formPasswordFields,\n        });\n      }\n    }\n\n    return formData;\n  }\n\n  async doAutoFill(options: AutoFillOptions) {\n    const tab = options.tab;\n    if (!tab || !options.cipher || !options.pageDetails || !options.pageDetails.length) {\n      throw new Error(\"Nothing to auto-fill.\");\n    }\n\n    let totpPromise: Promise<string> = null;\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    let didAutofill = false;\n    options.pageDetails.forEach((pd) => {\n      // make sure we're still on correct tab\n      if (pd.tab.id !== tab.id || pd.tab.url !== tab.url) {\n        return;\n      }\n\n      const fillScript = this.generateFillScript(pd.details, {\n        skipUsernameOnlyFill: options.skipUsernameOnlyFill || false,\n        onlyEmptyFields: options.onlyEmptyFields || false,\n        onlyVisibleFields: options.onlyVisibleFields || false,\n        fillNewPassword: options.fillNewPassword || false,\n        cipher: options.cipher,\n      });\n\n      if (!fillScript || !fillScript.script || !fillScript.script.length) {\n        return;\n      }\n\n      // Add a small delay between operations\n      fillScript.properties.delay_between_operations = 20;\n\n      didAutofill = true;\n      if (!options.skipLastUsed) {\n        this.cipherService.updateLastUsedDate(options.cipher.id);\n      }\n\n      BrowserApi.tabSendMessage(\n        tab,\n        {\n          command: \"fillForm\",\n          fillScript: fillScript,\n          url: tab.url,\n        },\n        { frameId: pd.frameId }\n      );\n\n      if (\n        options.cipher.type !== CipherType.Login ||\n        totpPromise ||\n        !options.cipher.login.totp ||\n        (!canAccessPremium && !options.cipher.organizationUseTotp)\n      ) {\n        return;\n      }\n\n      totpPromise = this.stateService.getDisableAutoTotpCopy().then((disabled) => {\n        if (!disabled) {\n          return this.totpService.getCode(options.cipher.login.totp);\n        }\n        return null;\n      });\n    });\n\n    if (didAutofill) {\n      this.eventService.collect(EventType.Cipher_ClientAutofilled, options.cipher.id);\n      if (totpPromise != null) {\n        return await totpPromise;\n      } else {\n        return null;\n      }\n    } else {\n      throw new Error(\"Did not auto-fill.\");\n    }\n  }\n\n  async doAutoFillOnTab(pageDetails: PageDetail[], tab: chrome.tabs.Tab, fromCommand: boolean) {\n    let cipher: CipherView;\n    if (fromCommand) {\n      cipher = await this.cipherService.getNextCipherForUrl(tab.url);\n    } else {\n      const lastLaunchedCipher = await this.cipherService.getLastLaunchedForUrl(tab.url, true);\n      if (\n        lastLaunchedCipher &&\n        Date.now().valueOf() - lastLaunchedCipher.localData?.lastLaunched?.valueOf() < 30000\n      ) {\n        cipher = lastLaunchedCipher;\n      } else {\n        cipher = await this.cipherService.getLastUsedForUrl(tab.url, true);\n      }\n    }\n\n    if (cipher == null || cipher.reprompt !== CipherRepromptType.None) {\n      return null;\n    }\n\n    const totpCode = await this.doAutoFill({\n      tab: tab,\n      cipher: cipher,\n      pageDetails: pageDetails,\n      skipLastUsed: !fromCommand,\n      skipUsernameOnlyFill: !fromCommand,\n      onlyEmptyFields: !fromCommand,\n      onlyVisibleFields: !fromCommand,\n      fillNewPassword: fromCommand,\n    });\n\n    // Update last used index as autofill has succeed\n    if (fromCommand) {\n      this.cipherService.updateLastUsedIndexForUrl(tab.url);\n    }\n\n    return totpCode;\n  }\n\n  async doAutoFillActiveTab(pageDetails: PageDetail[], fromCommand: boolean) {\n    const tab = await this.getActiveTab();\n    if (!tab || !tab.url) {\n      return;\n    }\n\n    return await this.doAutoFillOnTab(pageDetails, tab, fromCommand);\n  }\n\n  // Helpers\n\n  private async getActiveTab(): Promise<chrome.tabs.Tab> {\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (!tab) {\n      throw new Error(\"No tab found.\");\n    }\n\n    return tab;\n  }\n\n  private generateFillScript(\n    pageDetails: AutofillPageDetails,\n    options: GenerateFillScriptOptions\n  ): AutofillScript {\n    if (!pageDetails || !options.cipher) {\n      return null;\n    }\n\n    let fillScript = new AutofillScript(pageDetails.documentUUID);\n    const filledFields: { [id: string]: AutofillField } = {};\n    const fields = options.cipher.fields;\n\n    if (fields && fields.length) {\n      const fieldNames: string[] = [];\n\n      fields.forEach((f) => {\n        if (AutofillService.hasValue(f.name)) {\n          fieldNames.push(f.name.toLowerCase());\n        }\n      });\n\n      pageDetails.fields.forEach((field) => {\n        // eslint-disable-next-line\n        if (filledFields.hasOwnProperty(field.opid)) {\n          return;\n        }\n\n        if (!field.viewable && field.tagName !== \"span\") {\n          return;\n        }\n\n        const matchingIndex = this.findMatchingFieldIndex(field, fieldNames);\n        if (matchingIndex > -1) {\n          const matchingField: FieldView = fields[matchingIndex];\n          let val: string;\n          if (matchingField.type === FieldType.Linked) {\n            // Assumption: Linked Field is not being used to autofill a boolean value\n            val = options.cipher.linkedFieldValue(matchingField.linkedId) as string;\n          } else {\n            val = matchingField.value;\n            if (val == null && matchingField.type === FieldType.Boolean) {\n              val = \"false\";\n            }\n          }\n\n          filledFields[field.opid] = field;\n          AutofillService.fillByOpid(fillScript, field, val);\n        }\n      });\n    }\n\n    switch (options.cipher.type) {\n      case CipherType.Login:\n        fillScript = this.generateLoginFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Card:\n        fillScript = this.generateCardFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Identity:\n        fillScript = this.generateIdentityFillScript(\n          fillScript,\n          pageDetails,\n          filledFields,\n          options\n        );\n        break;\n      default:\n        return null;\n    }\n\n    return fillScript;\n  }\n\n  private generateLoginFillScript(\n    fillScript: AutofillScript,\n    pageDetails: AutofillPageDetails,\n    filledFields: { [id: string]: AutofillField },\n    options: GenerateFillScriptOptions\n  ): AutofillScript {\n    if (!options.cipher.login) {\n      return null;\n    }\n\n    const passwords: AutofillField[] = [];\n    const usernames: AutofillField[] = [];\n    let pf: AutofillField = null;\n    let username: AutofillField = null;\n    const login = options.cipher.login;\n    fillScript.savedUrls =\n      login?.uris?.filter((u) => u.match != UriMatchType.Never).map((u) => u.uri) ?? [];\n\n    if (!login.password || login.password === \"\") {\n      // No password for this login. Maybe they just wanted to auto-fill some custom fields?\n      fillScript = AutofillService.setFillScriptForFocus(filledFields, fillScript);\n      return fillScript;\n    }\n\n    let passwordFields = AutofillService.loadPasswordFields(\n      pageDetails,\n      false,\n      false,\n      options.onlyEmptyFields,\n      options.fillNewPassword\n    );\n    if (!passwordFields.length && !options.onlyVisibleFields) {\n      // not able to find any viewable password fields. maybe there are some \"hidden\" ones?\n      passwordFields = AutofillService.loadPasswordFields(\n        pageDetails,\n        true,\n        true,\n        options.onlyEmptyFields,\n        options.fillNewPassword\n      );\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const passwordFieldsForForm: AutofillField[] = [];\n      passwordFields.forEach((passField) => {\n        if (formKey === passField.form) {\n          passwordFieldsForForm.push(passField);\n        }\n      });\n\n      passwordFields.forEach((passField) => {\n        pf = passField;\n        passwords.push(pf);\n\n        if (login.username) {\n          username = this.findUsernameField(pageDetails, pf, false, false, false);\n\n          if (!username && !options.onlyVisibleFields) {\n            // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n            username = this.findUsernameField(pageDetails, pf, true, true, false);\n          }\n\n          if (username) {\n            usernames.push(username);\n          }\n        }\n      });\n    }\n\n    if (passwordFields.length && !passwords.length) {\n      // The page does not have any forms with password fields. Use the first password field on the page and the\n      // input field just before it as the username.\n\n      pf = passwordFields[0];\n      passwords.push(pf);\n\n      if (login.username && pf.elementNumber > 0) {\n        username = this.findUsernameField(pageDetails, pf, false, false, true);\n\n        if (!username && !options.onlyVisibleFields) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          username = this.findUsernameField(pageDetails, pf, true, true, true);\n        }\n\n        if (username) {\n          usernames.push(username);\n        }\n      }\n    }\n\n    if (!passwordFields.length && !options.skipUsernameOnlyFill) {\n      // No password fields on this page. Let's try to just fuzzy fill the username.\n      pageDetails.fields.forEach((f) => {\n        if (\n          f.viewable &&\n          (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\") &&\n          AutofillService.fieldIsFuzzyMatch(f, AutoFillConstants.UsernameFieldNames)\n        ) {\n          usernames.push(f);\n        }\n      });\n    }\n\n    usernames.forEach((u) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(u.opid)) {\n        return;\n      }\n\n      filledFields[u.opid] = u;\n      AutofillService.fillByOpid(fillScript, u, login.username);\n    });\n\n    passwords.forEach((p) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(p.opid)) {\n        return;\n      }\n\n      filledFields[p.opid] = p;\n      AutofillService.fillByOpid(fillScript, p, login.password);\n    });\n\n    fillScript = AutofillService.setFillScriptForFocus(filledFields, fillScript);\n    return fillScript;\n  }\n\n  private generateCardFillScript(\n    fillScript: AutofillScript,\n    pageDetails: AutofillPageDetails,\n    filledFields: { [id: string]: AutofillField },\n    options: GenerateFillScriptOptions\n  ): AutofillScript {\n    if (!options.cipher.card) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f) => {\n      if (AutofillService.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < CreditCardAutoFillConstants.CardAttributes.length; i++) {\n        const attr = CreditCardAutoFillConstants.CardAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.cardholderName &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardHolderFieldNames,\n            CreditCardAutoFillConstants.CardHolderFieldNameValues\n          )\n        ) {\n          fillFields.cardholderName = f;\n          break;\n        } else if (\n          !fillFields.number &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardNumberFieldNames,\n            CreditCardAutoFillConstants.CardNumberFieldNameValues\n          )\n        ) {\n          fillFields.number = f;\n          break;\n        } else if (\n          !fillFields.exp &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardExpiryFieldNames,\n            CreditCardAutoFillConstants.CardExpiryFieldNameValues\n          )\n        ) {\n          fillFields.exp = f;\n          break;\n        } else if (\n          !fillFields.expMonth &&\n          AutofillService.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryMonthFieldNames)\n        ) {\n          fillFields.expMonth = f;\n          break;\n        } else if (\n          !fillFields.expYear &&\n          AutofillService.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryYearFieldNames)\n        ) {\n          fillFields.expYear = f;\n          break;\n        } else if (\n          !fillFields.code &&\n          AutofillService.isFieldMatch(f[attr], CreditCardAutoFillConstants.CVVFieldNames)\n        ) {\n          fillFields.code = f;\n          break;\n        } else if (\n          !fillFields.brand &&\n          AutofillService.isFieldMatch(f[attr], CreditCardAutoFillConstants.CardBrandFieldNames)\n        ) {\n          fillFields.brand = f;\n          break;\n        }\n      }\n    });\n\n    const card = options.cipher.card;\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"cardholderName\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"number\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"code\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"brand\");\n\n    if (fillFields.expMonth && AutofillService.hasValue(card.expMonth)) {\n      let expMonth: string = card.expMonth;\n\n      if (fillFields.expMonth.selectInfo && fillFields.expMonth.selectInfo.options) {\n        let index: number = null;\n        const siOptions = fillFields.expMonth.selectInfo.options;\n        if (siOptions.length === 12) {\n          index = parseInt(card.expMonth, null) - 1;\n        } else if (siOptions.length === 13) {\n          if (\n            siOptions[0][0] != null &&\n            siOptions[0][0] !== \"\" &&\n            (siOptions[12][0] == null || siOptions[12][0] === \"\")\n          ) {\n            index = parseInt(card.expMonth, null) - 1;\n          } else {\n            index = parseInt(card.expMonth, null);\n          }\n        }\n\n        if (index != null) {\n          const option = siOptions[index];\n          if (option.length > 1) {\n            expMonth = option[1];\n          }\n        }\n      } else if (\n        (this.fieldAttrsContain(fillFields.expMonth, \"mm\") ||\n          fillFields.expMonth.maxLength === 2) &&\n        expMonth.length === 1\n      ) {\n        expMonth = \"0\" + expMonth;\n      }\n\n      filledFields[fillFields.expMonth.opid] = fillFields.expMonth;\n      AutofillService.fillByOpid(fillScript, fillFields.expMonth, expMonth);\n    }\n\n    if (fillFields.expYear && AutofillService.hasValue(card.expYear)) {\n      let expYear: string = card.expYear;\n      if (fillFields.expYear.selectInfo && fillFields.expYear.selectInfo.options) {\n        for (let i = 0; i < fillFields.expYear.selectInfo.options.length; i++) {\n          const o: [string, string] = fillFields.expYear.selectInfo.options[i];\n          if (o[0] === card.expYear || o[1] === card.expYear) {\n            expYear = o[1];\n            break;\n          }\n          if (\n            o[1].length === 2 &&\n            card.expYear.length === 4 &&\n            o[1] === card.expYear.substring(2)\n          ) {\n            expYear = o[1];\n            break;\n          }\n          const colonIndex = o[1].indexOf(\":\");\n          if (colonIndex > -1 && o[1].length > colonIndex + 1) {\n            const val = o[1].substring(colonIndex + 2);\n            if (val != null && val.trim() !== \"\" && val === card.expYear) {\n              expYear = o[1];\n              break;\n            }\n          }\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yyyy\") ||\n        fillFields.expYear.maxLength === 4\n      ) {\n        if (expYear.length === 2) {\n          expYear = \"20\" + expYear;\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yy\") ||\n        fillFields.expYear.maxLength === 2\n      ) {\n        if (expYear.length === 4) {\n          expYear = expYear.substr(2);\n        }\n      }\n\n      filledFields[fillFields.expYear.opid] = fillFields.expYear;\n      AutofillService.fillByOpid(fillScript, fillFields.expYear, expYear);\n    }\n\n    if (\n      fillFields.exp &&\n      AutofillService.hasValue(card.expMonth) &&\n      AutofillService.hasValue(card.expYear)\n    ) {\n      const fullMonth = (\"0\" + card.expMonth).slice(-2);\n\n      let fullYear: string = card.expYear;\n      let partYear: string = null;\n      if (fullYear.length === 2) {\n        partYear = fullYear;\n        fullYear = \"20\" + fullYear;\n      } else if (fullYear.length === 4) {\n        partYear = fullYear.substr(2, 2);\n      }\n\n      let exp: string = null;\n      for (let i = 0; i < CreditCardAutoFillConstants.MonthAbbr.length; i++) {\n        if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"/\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"/\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"-\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"-\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + fullYear;\n        }\n\n        if (exp != null) {\n          break;\n        }\n      }\n\n      if (exp == null) {\n        exp = fullYear + \"-\" + fullMonth;\n      }\n\n      this.makeScriptActionWithValue(fillScript, exp, fillFields.exp, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private fieldAttrsContain(field: AutofillField, containsVal: string) {\n    if (!field) {\n      return false;\n    }\n\n    let doesContain = false;\n    CreditCardAutoFillConstants.CardAttributesExtended.forEach((attr) => {\n      // eslint-disable-next-line\n      if (doesContain || !field.hasOwnProperty(attr) || !field[attr]) {\n        return;\n      }\n\n      let val = field[attr];\n      val = val.replace(/ /g, \"\").toLowerCase();\n      doesContain = val.indexOf(containsVal) > -1;\n    });\n\n    return doesContain;\n  }\n\n  private generateIdentityFillScript(\n    fillScript: AutofillScript,\n    pageDetails: AutofillPageDetails,\n    filledFields: { [id: string]: AutofillField },\n    options: GenerateFillScriptOptions\n  ): AutofillScript {\n    if (!options.cipher.identity) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f) => {\n      if (AutofillService.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < IdentityAutoFillConstants.IdentityAttributes.length; i++) {\n        const attr = IdentityAutoFillConstants.IdentityAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.name &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.FullNameFieldNames,\n            IdentityAutoFillConstants.FullNameFieldNameValues\n          )\n        ) {\n          fillFields.name = f;\n          break;\n        } else if (\n          !fillFields.firstName &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.FirstnameFieldNames)\n        ) {\n          fillFields.firstName = f;\n          break;\n        } else if (\n          !fillFields.middleName &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.MiddlenameFieldNames)\n        ) {\n          fillFields.middleName = f;\n          break;\n        } else if (\n          !fillFields.lastName &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.LastnameFieldNames)\n        ) {\n          fillFields.lastName = f;\n          break;\n        } else if (\n          !fillFields.title &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.TitleFieldNames)\n        ) {\n          fillFields.title = f;\n          break;\n        } else if (\n          !fillFields.email &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.EmailFieldNames)\n        ) {\n          fillFields.email = f;\n          break;\n        } else if (\n          !fillFields.address &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.AddressFieldNames,\n            IdentityAutoFillConstants.AddressFieldNameValues\n          )\n        ) {\n          fillFields.address = f;\n          break;\n        } else if (\n          !fillFields.address1 &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.Address1FieldNames)\n        ) {\n          fillFields.address1 = f;\n          break;\n        } else if (\n          !fillFields.address2 &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.Address2FieldNames)\n        ) {\n          fillFields.address2 = f;\n          break;\n        } else if (\n          !fillFields.address3 &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.Address3FieldNames)\n        ) {\n          fillFields.address3 = f;\n          break;\n        } else if (\n          !fillFields.postalCode &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.PostalCodeFieldNames)\n        ) {\n          fillFields.postalCode = f;\n          break;\n        } else if (\n          !fillFields.city &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.CityFieldNames)\n        ) {\n          fillFields.city = f;\n          break;\n        } else if (\n          !fillFields.state &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.StateFieldNames)\n        ) {\n          fillFields.state = f;\n          break;\n        } else if (\n          !fillFields.country &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.CountryFieldNames)\n        ) {\n          fillFields.country = f;\n          break;\n        } else if (\n          !fillFields.phone &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.PhoneFieldNames)\n        ) {\n          fillFields.phone = f;\n          break;\n        } else if (\n          !fillFields.username &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.UserNameFieldNames)\n        ) {\n          fillFields.username = f;\n          break;\n        } else if (\n          !fillFields.company &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.CompanyFieldNames)\n        ) {\n          fillFields.company = f;\n          break;\n        }\n      }\n    });\n\n    const identity = options.cipher.identity;\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"title\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"firstName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"middleName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"lastName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address1\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address2\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address3\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"city\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"postalCode\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"company\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"email\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"phone\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"username\");\n\n    let filledState = false;\n    if (fillFields.state && identity.state && identity.state.length > 2) {\n      const stateLower = identity.state.toLowerCase();\n      const isoState =\n        IdentityAutoFillConstants.IsoStates[stateLower] ||\n        IdentityAutoFillConstants.IsoProvinces[stateLower];\n      if (isoState) {\n        filledState = true;\n        this.makeScriptActionWithValue(fillScript, isoState, fillFields.state, filledFields);\n      }\n    }\n\n    if (!filledState) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"state\");\n    }\n\n    let filledCountry = false;\n    if (fillFields.country && identity.country && identity.country.length > 2) {\n      const countryLower = identity.country.toLowerCase();\n      const isoCountry = IdentityAutoFillConstants.IsoCountries[countryLower];\n      if (isoCountry) {\n        filledCountry = true;\n        this.makeScriptActionWithValue(fillScript, isoCountry, fillFields.country, filledFields);\n      }\n    }\n\n    if (!filledCountry) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"country\");\n    }\n\n    if (fillFields.name && (identity.firstName || identity.lastName)) {\n      let fullName = \"\";\n      if (AutofillService.hasValue(identity.firstName)) {\n        fullName = identity.firstName;\n      }\n      if (AutofillService.hasValue(identity.middleName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.middleName;\n      }\n      if (AutofillService.hasValue(identity.lastName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.lastName;\n      }\n\n      this.makeScriptActionWithValue(fillScript, fullName, fillFields.name, filledFields);\n    }\n\n    if (fillFields.address && AutofillService.hasValue(identity.address1)) {\n      let address = \"\";\n      if (AutofillService.hasValue(identity.address1)) {\n        address = identity.address1;\n      }\n      if (AutofillService.hasValue(identity.address2)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address2;\n      }\n      if (AutofillService.hasValue(identity.address3)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address3;\n      }\n\n      this.makeScriptActionWithValue(fillScript, address, fillFields.address, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private isExcludedType(type: string, excludedTypes: string[]) {\n    return excludedTypes.indexOf(type) > -1;\n  }\n\n  private static isFieldMatch(\n    value: string,\n    options: string[],\n    containsOptions?: string[]\n  ): boolean {\n    value = value\n      .trim()\n      .toLowerCase()\n      .replace(/[^a-zA-Z0-9]+/g, \"\");\n    for (let i = 0; i < options.length; i++) {\n      let option = options[i];\n      const checkValueContains = containsOptions == null || containsOptions.indexOf(option) > -1;\n      option = option.toLowerCase().replace(/-/g, \"\");\n      if (value === option || (checkValueContains && value.indexOf(option) > -1)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private makeScriptAction(\n    fillScript: AutofillScript,\n    cipherData: any,\n    fillFields: { [id: string]: AutofillField },\n    filledFields: { [id: string]: AutofillField },\n    dataProp: string,\n    fieldProp?: string\n  ) {\n    fieldProp = fieldProp || dataProp;\n    this.makeScriptActionWithValue(\n      fillScript,\n      cipherData[dataProp],\n      fillFields[fieldProp],\n      filledFields\n    );\n  }\n\n  private makeScriptActionWithValue(\n    fillScript: AutofillScript,\n    dataValue: any,\n    field: AutofillField,\n    filledFields: { [id: string]: AutofillField }\n  ) {\n    let doFill = false;\n    if (AutofillService.hasValue(dataValue) && field) {\n      if (field.type === \"select-one\" && field.selectInfo && field.selectInfo.options) {\n        for (let i = 0; i < field.selectInfo.options.length; i++) {\n          const option = field.selectInfo.options[i];\n          for (let j = 0; j < option.length; j++) {\n            if (\n              AutofillService.hasValue(option[j]) &&\n              option[j].toLowerCase() === dataValue.toLowerCase()\n            ) {\n              doFill = true;\n              if (option.length > 1) {\n                dataValue = option[1];\n              }\n              break;\n            }\n          }\n\n          if (doFill) {\n            break;\n          }\n        }\n      } else {\n        doFill = true;\n      }\n    }\n\n    if (doFill) {\n      filledFields[field.opid] = field;\n      AutofillService.fillByOpid(fillScript, field, dataValue);\n    }\n  }\n\n  static loadPasswordFields(\n    pageDetails: AutofillPageDetails,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    mustBeEmpty: boolean,\n    fillNewPassword: boolean\n  ) {\n    const arr: AutofillField[] = [];\n    pageDetails.fields.forEach((f) => {\n      if (AutofillService.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      const isPassword = f.type === \"password\";\n      const valueIsLikePassword = (value: string) => {\n        if (value == null) {\n          return false;\n        }\n        // Removes all whitespace, _ and - characters\n        // eslint-disable-next-line\n        const cleanedValue = value.toLowerCase().replace(/[\\s_\\-]/g, \"\");\n\n        if (cleanedValue.indexOf(\"password\") < 0) {\n          return false;\n        }\n\n        if (AutoFillConstants.PasswordFieldIgnoreList.some((i) => cleanedValue.indexOf(i) > -1)) {\n          return false;\n        }\n\n        return true;\n      };\n      const isLikePassword = () => {\n        if (f.type !== \"text\") {\n          return false;\n        }\n        if (valueIsLikePassword(f.htmlID)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.htmlName)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.placeholder)) {\n          return true;\n        }\n        return false;\n      };\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (isPassword || isLikePassword()) &&\n        (canBeHidden || f.viewable) &&\n        (!mustBeEmpty || f.value == null || f.value.trim() === \"\") &&\n        (fillNewPassword || f.autoCompleteType !== \"new-password\")\n      ) {\n        arr.push(f);\n      }\n    });\n    return arr;\n  }\n\n  private findUsernameField(\n    pageDetails: AutofillPageDetails,\n    passwordField: AutofillField,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    withoutForm: boolean\n  ) {\n    let usernameField: AutofillField = null;\n    for (let i = 0; i < pageDetails.fields.length; i++) {\n      const f = pageDetails.fields[i];\n      if (AutofillService.forCustomFieldsOnly(f)) {\n        continue;\n      }\n\n      if (f.elementNumber >= passwordField.elementNumber) {\n        break;\n      }\n\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (withoutForm || f.form === passwordField.form) &&\n        (canBeHidden || f.viewable) &&\n        (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\")\n      ) {\n        usernameField = f;\n\n        if (this.findMatchingFieldIndex(f, AutoFillConstants.UsernameFieldNames) > -1) {\n          // We found an exact match. No need to keep looking.\n          break;\n        }\n      }\n    }\n\n    return usernameField;\n  }\n\n  private findMatchingFieldIndex(field: AutofillField, names: string[]): number {\n    for (let i = 0; i < names.length; i++) {\n      if (names[i].indexOf(\"=\") > -1) {\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlID\", names[i], \"id\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlName\", names[i], \"name\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-tag\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-aria\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"placeholder\", names[i], \"placeholder\")) {\n          return i;\n        }\n      }\n\n      if (this.fieldPropertyIsMatch(field, \"htmlID\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"htmlName\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-tag\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-aria\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"placeholder\", names[i])) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  private fieldPropertyIsPrefixMatch(\n    field: any,\n    property: string,\n    name: string,\n    prefix: string,\n    separator = \"=\"\n  ): boolean {\n    if (name.indexOf(prefix + separator) === 0) {\n      const sepIndex = name.indexOf(separator);\n      const val = name.substring(sepIndex + 1);\n      return val != null && this.fieldPropertyIsMatch(field, property, val);\n    }\n    return false;\n  }\n\n  private fieldPropertyIsMatch(field: any, property: string, name: string): boolean {\n    let fieldVal = field[property] as string;\n    if (!AutofillService.hasValue(fieldVal)) {\n      return false;\n    }\n\n    fieldVal = fieldVal.trim().replace(/(?:\\r\\n|\\r|\\n)/g, \"\");\n    if (name.startsWith(\"regex=\")) {\n      try {\n        const regexParts = name.split(\"=\", 2);\n        if (regexParts.length === 2) {\n          const regex = new RegExp(regexParts[1], \"i\");\n          return regex.test(fieldVal);\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else if (name.startsWith(\"csv=\")) {\n      const csvParts = name.split(\"=\", 2);\n      if (csvParts.length === 2) {\n        const csvVals = csvParts[1].split(\",\");\n        for (let i = 0; i < csvVals.length; i++) {\n          const val = csvVals[i];\n          if (val != null && val.trim().toLowerCase() === fieldVal.toLowerCase()) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }\n\n    return fieldVal.toLowerCase() === name;\n  }\n\n  static fieldIsFuzzyMatch(field: AutofillField, names: string[]): boolean {\n    if (AutofillService.hasValue(field.htmlID) && this.fuzzyMatch(names, field.htmlID)) {\n      return true;\n    }\n    if (AutofillService.hasValue(field.htmlName) && this.fuzzyMatch(names, field.htmlName)) {\n      return true;\n    }\n    if (\n      AutofillService.hasValue(field[\"label-tag\"]) &&\n      this.fuzzyMatch(names, field[\"label-tag\"])\n    ) {\n      return true;\n    }\n    if (AutofillService.hasValue(field.placeholder) && this.fuzzyMatch(names, field.placeholder)) {\n      return true;\n    }\n    if (\n      AutofillService.hasValue(field[\"label-left\"]) &&\n      this.fuzzyMatch(names, field[\"label-left\"])\n    ) {\n      return true;\n    }\n    if (\n      AutofillService.hasValue(field[\"label-top\"]) &&\n      this.fuzzyMatch(names, field[\"label-top\"])\n    ) {\n      return true;\n    }\n    if (\n      AutofillService.hasValue(field[\"label-aria\"]) &&\n      this.fuzzyMatch(names, field[\"label-aria\"])\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private static fuzzyMatch(options: string[], value: string): boolean {\n    if (options == null || options.length === 0 || value == null || value === \"\") {\n      return false;\n    }\n\n    value = value\n      .replace(/(?:\\r\\n|\\r|\\n)/g, \"\")\n      .trim()\n      .toLowerCase();\n\n    for (let i = 0; i < options.length; i++) {\n      if (value.indexOf(options[i]) > -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  static hasValue(str: string): boolean {\n    return str && str !== \"\";\n  }\n\n  static setFillScriptForFocus(\n    filledFields: { [id: string]: AutofillField },\n    fillScript: AutofillScript\n  ): AutofillScript {\n    let lastField: AutofillField = null;\n    let lastPasswordField: AutofillField = null;\n\n    for (const opid in filledFields) {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(opid) && filledFields[opid].viewable) {\n        lastField = filledFields[opid];\n\n        if (filledFields[opid].type === \"password\") {\n          lastPasswordField = filledFields[opid];\n        }\n      }\n    }\n\n    // Prioritize password field over others.\n    if (lastPasswordField) {\n      fillScript.script.push([\"focus_by_opid\", lastPasswordField.opid]);\n    } else if (lastField) {\n      fillScript.script.push([\"focus_by_opid\", lastField.opid]);\n    }\n\n    return fillScript;\n  }\n\n  static fillByOpid(fillScript: AutofillScript, field: AutofillField, value: string): void {\n    if (field.maxLength && value && value.length > field.maxLength) {\n      value = value.substr(0, value.length);\n    }\n    if (field.tagName !== \"span\") {\n      fillScript.script.push([\"click_on_opid\", field.opid]);\n      fillScript.script.push([\"focus_by_opid\", field.opid]);\n    }\n    fillScript.script.push([\"fill_by_opid\", field.opid, value]);\n  }\n\n  static forCustomFieldsOnly(field: AutofillField): boolean {\n    return field.tagName === \"span\";\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\nimport { FolderService as BaseFolderService } from \"@bitwarden/common/services/folder/folder.service\";\n\nimport { browserSession, sessionSync } from \"../decorators/session-sync-observable\";\n\n@browserSession\nexport class BrowserFolderService extends BaseFolderService {\n  @sessionSync({ initializer: Folder.fromJSON, initializeAs: \"array\" })\n  protected _folders: BehaviorSubject<Folder[]>;\n  @sessionSync({ initializer: FolderView.fromJSON, initializeAs: \"array\" })\n  protected _folderViews: BehaviorSubject<FolderView[]>;\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\n\nimport { browserSession, sessionSync } from \"../decorators/session-sync-observable\";\n\n@browserSession\nexport class BrowserPolicyService extends PolicyService {\n  @sessionSync({ ctor: Policy, initializeAs: \"array\" })\n  protected _policies: BehaviorSubject<Policy[]>;\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModeBackgroundService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenPopupMainMessageListener(message);\n  }\n}\n","import { VaultTimeoutService as BaseVaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\n\nimport { SafariApp } from \"../../browser/safariApp\";\n\nexport default class VaultTimeoutService extends BaseVaultTimeoutService {\n  startCheck() {\n    this.checkVaultTimeout();\n    if (this.platformUtilsService.isSafari()) {\n      this.checkSafari();\n    } else {\n      setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n    }\n  }\n\n  // This is a work-around to safari adding an arbitary delay to setTimeout and\n  //  setIntervals. It works by calling the native extension which sleeps for 10s,\n  //  efficiently replicating setInterval.\n  async checkSafari() {\n    // eslint-disable-next-line\n    while (true) {\n      try {\n        await SafariApp.sendMessageToApp(\"sleep\");\n        this.checkVaultTimeout();\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log(\"Exception Safari VaultTimeout\", e);\n      }\n    }\n  }\n}\n","import { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class CommandsBackground {\n  private isSafari: boolean;\n  private isVivaldi: boolean;\n\n  constructor(\n    private main: MainBackground,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private authService: AuthService\n  ) {\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.isVivaldi = this.platformUtilsService.isVivaldi();\n  }\n\n  async init() {\n    BrowserApi.messageListener(\n      \"commands.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"commands.background\") {\n          await this.processCommand(\n            msg.data.commandToRetry.msg.command,\n            msg.data.commandToRetry.sender\n          );\n        }\n      }\n    );\n\n    if (chrome && chrome.commands) {\n      chrome.commands.onCommand.addListener(async (command: string) => {\n        await this.processCommand(command);\n      });\n    }\n  }\n\n  private async processCommand(command: string, sender?: chrome.runtime.MessageSender) {\n    switch (command) {\n      case \"generate_password\":\n        await this.generatePasswordToClipboard();\n        break;\n      case \"autofill_login\":\n        await this.autoFillLogin(sender ? sender.tab : null);\n        break;\n      case \"open_popup\":\n        await this.openPopup();\n        break;\n      case \"lock_vault\":\n        await this.vaultTimeoutService.lock();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())?.[0] ?? {};\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async autoFillLogin(tab?: chrome.tabs.Tab) {\n    if (!tab) {\n      tab = await BrowserApi.getTabFromCurrentWindowId();\n    }\n\n    if (tab == null) {\n      return;\n    }\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: \"autofill_login\" },\n          sender: { tab: tab },\n        },\n        target: \"commands.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    await this.main.collectPageDetailsForContentScript(tab, \"autofill_cmd\");\n  }\n\n  private async openPopup() {\n    // Chrome APIs cannot open popup\n    if (!this.isSafari) {\n      return;\n    }\n\n    this.main.openPopup();\n  }\n}\n","import { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class ContextMenusBackground {\n  private readonly noopCommandSuffix = \"noop\";\n  private contextMenus: any;\n\n  constructor(\n    private main: MainBackground,\n    private cipherService: CipherService,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private authService: AuthService,\n    private eventService: EventService,\n    private totpService: TotpService\n  ) {\n    this.contextMenus = chrome.contextMenus;\n  }\n\n  async init() {\n    if (!this.contextMenus) {\n      return;\n    }\n\n    this.contextMenus.onClicked.addListener(\n      async (info: chrome.contextMenus.OnClickData, tab: chrome.tabs.Tab) => {\n        if (info.menuItemId === \"generate-password\") {\n          await this.generatePasswordToClipboard();\n        } else if (info.menuItemId === \"copy-identifier\") {\n          await this.getClickedElement(tab, info.frameId);\n        } else if (\n          info.parentMenuItemId === \"autofill\" ||\n          info.parentMenuItemId === \"copy-username\" ||\n          info.parentMenuItemId === \"copy-password\" ||\n          info.parentMenuItemId === \"copy-totp\"\n        ) {\n          await this.cipherAction(tab, info);\n        }\n      }\n    );\n\n    BrowserApi.messageListener(\n      \"contextmenus.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"contextmenus.background\") {\n          await this.cipherAction(\n            msg.data.commandToRetry.sender.tab,\n            msg.data.commandToRetry.msg.data\n          );\n        }\n      }\n    );\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())?.[0] ?? {};\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async getClickedElement(tab: chrome.tabs.Tab, frameId: number) {\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, { command: \"getClickedElement\" }, { frameId: frameId });\n  }\n\n  private async cipherAction(tab: chrome.tabs.Tab, info: chrome.contextMenus.OnClickData) {\n    if (typeof info.menuItemId !== \"string\") {\n      return;\n    }\n\n    const id = info.menuItemId.split(\"_\")[1];\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: this.noopCommandSuffix, data: info },\n          sender: { tab: tab },\n        },\n        target: \"contextmenus.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    let cipher: CipherView;\n    if (id === this.noopCommandSuffix) {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(tab.url);\n      cipher = ciphers.find((c) => c.reprompt === CipherRepromptType.None);\n    } else {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      cipher = ciphers.find((c) => c.id === id);\n    }\n\n    if (cipher == null) {\n      return;\n    }\n\n    if (info.parentMenuItemId === \"autofill\") {\n      await this.startAutofillPage(tab, cipher);\n    } else if (info.parentMenuItemId === \"copy-username\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.username, { window: window });\n    } else if (info.parentMenuItemId === \"copy-password\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.password, { window: window });\n      this.eventService.collect(EventType.Cipher_ClientCopiedPassword, cipher.id);\n    } else if (info.parentMenuItemId === \"copy-totp\") {\n      const totpValue = await this.totpService.getCode(cipher.login.totp);\n      this.platformUtilsService.copyToClipboard(totpValue, { window: window });\n    }\n  }\n\n  private async startAutofillPage(tab: chrome.tabs.Tab, cipher: CipherView) {\n    this.main.loginToAutoFill = cipher;\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, {\n      command: \"collectPageDetails\",\n      tab: tab,\n      sender: \"contextMenu\",\n    });\n  }\n}\n","import { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\n\nimport { BrowserStateService } from \"../services/abstractions/browser-state.service\";\n\nconst IdleInterval = 60 * 5; // 5 minutes\n\nexport default class IdleBackground {\n  private idle: any;\n  private idleTimer: number = null;\n  private idleState = \"active\";\n\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private stateService: BrowserStateService,\n    private notificationsService: NotificationsService\n  ) {\n    this.idle = chrome.idle || (browser != null ? browser.idle : null);\n  }\n\n  async init() {\n    if (!this.idle) {\n      return;\n    }\n\n    const idleHandler = (newState: string) => {\n      if (newState === \"active\") {\n        this.notificationsService.reconnectFromActivity();\n      } else {\n        this.notificationsService.disconnectFromInactivity();\n      }\n    };\n    if (this.idle.onStateChanged && this.idle.setDetectionInterval) {\n      this.idle.setDetectionInterval(IdleInterval);\n      this.idle.onStateChanged.addListener(idleHandler);\n    } else {\n      this.pollIdle(idleHandler);\n    }\n\n    if (this.idle.onStateChanged) {\n      this.idle.onStateChanged.addListener(async (newState: string) => {\n        if (newState === \"locked\") {\n          // If the screen is locked or the screensaver activates\n          const timeout = await this.stateService.getVaultTimeout();\n          if (timeout === -2) {\n            // On System Lock vault timeout option\n            const action = await this.stateService.getVaultTimeoutAction();\n            if (action === \"logOut\") {\n              await this.vaultTimeoutService.logOut();\n            } else {\n              await this.vaultTimeoutService.lock();\n            }\n          }\n        }\n      });\n    }\n  }\n\n  private pollIdle(handler: (newState: string) => void) {\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idle.queryState(IdleInterval, (state: string) => {\n      if (state !== this.idleState) {\n        this.idleState = state;\n        handler(state);\n      }\n      this.idleTimer = window.setTimeout(() => this.pollIdle(handler), 5000);\n    });\n  }\n}\n","import { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport RuntimeBackground from \"./runtime.background\";\n\nconst MessageValidTimeout = 10 * 1000;\nconst EncryptionAlgorithm = \"sha1\";\n\ntype Message = {\n  command: string;\n\n  // Filled in by this service\n  userId?: string;\n  timestamp?: number;\n\n  // Used for sharing secret\n  publicKey?: string;\n};\n\ntype OuterMessage = {\n  message: Message | EncString;\n  appId: string;\n};\n\ntype ReceiveMessage = {\n  timestamp: number;\n  command: string;\n  response?: any;\n\n  // Unlock key\n  keyB64?: string;\n};\n\ntype ReceiveMessageOuter = {\n  command: string;\n  appId: string;\n\n  // Should only have one of these.\n  message?: EncString;\n  sharedSecret?: string;\n};\n\nexport class NativeMessagingBackground {\n  private connected = false;\n  private connecting: boolean;\n  private port: browser.runtime.Port | chrome.runtime.Port;\n\n  private resolver: any = null;\n  private privateKey: ArrayBuffer = null;\n  private publicKey: ArrayBuffer = null;\n  private secureSetupResolve: any = null;\n  private sharedSecret: SymmetricCryptoKey;\n  private appId: string;\n  private validatingFingerprint: boolean;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private runtimeBackground: RuntimeBackground,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private appIdService: AppIdService,\n    private platformUtilsService: PlatformUtilsService,\n    private stateService: StateService,\n    private logService: LogService,\n    private authService: AuthService\n  ) {\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    if (chrome?.permissions?.onAdded) {\n      // Reload extension to activate nativeMessaging\n      chrome.permissions.onAdded.addListener((permissions) => {\n        BrowserApi.reloadExtension(null);\n      });\n    }\n  }\n\n  async connect() {\n    this.appId = await this.appIdService.getAppId();\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    return new Promise<void>((resolve, reject) => {\n      this.port = BrowserApi.connectNative(\"com.8bit.bitwarden\");\n\n      this.connecting = true;\n\n      const connectedCallback = () => {\n        this.connected = true;\n        this.connecting = false;\n        resolve();\n      };\n\n      // Safari has a bundled native component which is always available, no need to\n      // check if the desktop app is running.\n      if (this.platformUtilsService.isSafari()) {\n        connectedCallback();\n      }\n\n      this.port.onMessage.addListener(async (message: ReceiveMessageOuter) => {\n        switch (message.command) {\n          case \"connected\":\n            connectedCallback();\n            break;\n          case \"disconnected\":\n            if (this.connecting) {\n              reject(\"startDesktop\");\n            }\n            this.connected = false;\n            this.port.disconnect();\n            break;\n          case \"setupEncryption\": {\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            const encrypted = Utils.fromB64ToArray(message.sharedSecret);\n            const decrypted = await this.cryptoFunctionService.rsaDecrypt(\n              encrypted.buffer,\n              this.privateKey,\n              EncryptionAlgorithm\n            );\n\n            if (this.validatingFingerprint) {\n              this.validatingFingerprint = false;\n              this.stateService.setBiometricFingerprintValidated(true);\n            }\n            this.sharedSecret = new SymmetricCryptoKey(decrypted);\n            this.secureSetupResolve();\n            break;\n          }\n          case \"invalidateEncryption\":\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            this.sharedSecret = null;\n            this.privateKey = null;\n            this.connected = false;\n\n            this.messagingService.send(\"showDialog\", {\n              text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n              title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n              confirmText: this.i18nService.t(\"ok\"),\n              type: \"error\",\n            });\n            break;\n          case \"verifyFingerprint\": {\n            if (this.sharedSecret == null) {\n              this.validatingFingerprint = true;\n              this.showFingerprintDialog();\n            }\n            break;\n          }\n          case \"wrongUserId\":\n            this.showWrongUserDialog();\n            break;\n          default:\n            // Ignore since it belongs to another device\n            if (!this.platformUtilsService.isSafari() && message.appId !== this.appId) {\n              return;\n            }\n\n            this.onMessage(message.message);\n        }\n      });\n\n      this.port.onDisconnect.addListener((p: any) => {\n        let error;\n        if (BrowserApi.isWebExtensionsApi) {\n          error = p.error.message;\n        } else {\n          error = chrome.runtime.lastError.message;\n        }\n\n        this.sharedSecret = null;\n        this.privateKey = null;\n        this.connected = false;\n\n        const reason = error != null ? \"desktopIntegrationDisabled\" : null;\n        reject(reason);\n      });\n    });\n  }\n\n  showWrongUserDialog() {\n    this.messagingService.send(\"showDialog\", {\n      text: this.i18nService.t(\"nativeMessagingWrongUserDesc\"),\n      title: this.i18nService.t(\"nativeMessagingWrongUserTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"error\",\n    });\n  }\n\n  async send(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.userId = await this.stateService.getUserId();\n    message.timestamp = Date.now();\n\n    if (this.platformUtilsService.isSafari()) {\n      this.postMessage(message as any);\n    } else {\n      this.postMessage({ appId: this.appId, message: await this.encryptMessage(message) });\n    }\n  }\n\n  async encryptMessage(message: Message) {\n    if (this.sharedSecret == null) {\n      await this.secureCommunication();\n    }\n\n    return await this.cryptoService.encrypt(JSON.stringify(message), this.sharedSecret);\n  }\n\n  getResponse(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.resolver = resolve;\n    });\n  }\n\n  private postMessage(message: OuterMessage) {\n    // Wrap in try-catch to when the port disconnected without triggering `onDisconnect`.\n    try {\n      const msg: any = message;\n      if (message.message instanceof EncString) {\n        // Alternative, backwards-compatible serialization of EncString\n        msg.message = {\n          encryptedString: message.message.encryptedString,\n          encryptionType: message.message.encryptionType,\n          data: message.message.data,\n          iv: message.message.iv,\n          mac: message.message.mac,\n        };\n      }\n      this.port.postMessage(msg);\n    } catch (e) {\n      this.logService.error(\"NativeMessaging port disconnected, disconnecting.\");\n\n      this.sharedSecret = null;\n      this.privateKey = null;\n      this.connected = false;\n\n      this.messagingService.send(\"showDialog\", {\n        text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n        title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n        confirmText: this.i18nService.t(\"ok\"),\n        type: \"error\",\n      });\n    }\n  }\n\n  private async onMessage(rawMessage: ReceiveMessage | EncString) {\n    let message = rawMessage as ReceiveMessage;\n    if (!this.platformUtilsService.isSafari()) {\n      message = JSON.parse(\n        await this.cryptoService.decryptToUtf8(rawMessage as EncString, this.sharedSecret)\n      );\n    }\n\n    if (Math.abs(message.timestamp - Date.now()) > MessageValidTimeout) {\n      this.logService.error(\"NativeMessage is to old, ignoring.\");\n      return;\n    }\n\n    switch (message.command) {\n      case \"biometricUnlock\": {\n        await this.stateService.setBiometricAwaitingAcceptance(null);\n\n        if (message.response === \"not enabled\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotEnabledDesc\"),\n            title: this.i18nService.t(\"biometricsNotEnabledTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        } else if (message.response === \"not supported\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotSupportedDesc\"),\n            title: this.i18nService.t(\"biometricsNotSupportedTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        }\n\n        const enabled = await this.stateService.getBiometricUnlock();\n        if (enabled === null || enabled === false) {\n          if (message.response === \"unlocked\") {\n            await this.stateService.setBiometricUnlock(true);\n          }\n          break;\n        }\n\n        // Ignore unlock if already unlocked\n        if ((await this.authService.getAuthStatus()) === AuthenticationStatus.Unlocked) {\n          break;\n        }\n\n        if (message.response === \"unlocked\") {\n          await this.cryptoService.setKey(\n            new SymmetricCryptoKey(Utils.fromB64ToArray(message.keyB64).buffer)\n          );\n\n          // Verify key is correct by attempting to decrypt a secret\n          try {\n            await this.cryptoService.getFingerprint(await this.stateService.getUserId());\n          } catch (e) {\n            this.logService.error(\"Unable to verify key: \" + e);\n            await this.cryptoService.clearKey();\n            this.showWrongUserDialog();\n\n            // Exit early\n            if (this.resolver) {\n              this.resolver(message);\n            }\n            return;\n          }\n\n          this.runtimeBackground.processMessage({ command: \"unlocked\" }, null, null);\n        }\n        break;\n      }\n      default:\n        this.logService.error(\"NativeMessage, got unknown command: \" + message.command);\n        break;\n    }\n\n    if (this.resolver) {\n      this.resolver(message);\n    }\n  }\n\n  private async secureCommunication() {\n    const [publicKey, privateKey] = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    this.publicKey = publicKey;\n    this.privateKey = privateKey;\n\n    this.sendUnencrypted({\n      command: \"setupEncryption\",\n      publicKey: Utils.fromBufferToB64(publicKey),\n      userId: await this.stateService.getUserId(),\n    });\n\n    return new Promise((resolve, reject) => (this.secureSetupResolve = resolve));\n  }\n\n  private async sendUnencrypted(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.timestamp = Date.now();\n\n    this.postMessage({ appId: this.appId, message: message });\n  }\n\n  private async showFingerprintDialog() {\n    const fingerprint = (\n      await this.cryptoService.getFingerprint(await this.stateService.getUserId(), this.publicKey)\n    ).join(\" \");\n\n    this.messagingService.send(\"showDialog\", {\n      html: `${this.i18nService.t(\n        \"desktopIntegrationVerificationText\"\n      )}<br><br><strong>${fingerprint}</strong>`,\n      title: this.i18nService.t(\"desktopSyncVerificationTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"warning\",\n    });\n  }\n}\n","export enum NotificationQueueMessageType {\n  AddLogin = 0,\n  ChangePassword = 1,\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\nimport { LoginView } from \"@bitwarden/common/models/view/login.view\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport { BrowserStateService } from \"../services/abstractions/browser-state.service\";\n\nimport AddChangePasswordQueueMessage from \"./models/addChangePasswordQueueMessage\";\nimport AddLoginQueueMessage from \"./models/addLoginQueueMessage\";\nimport AddLoginRuntimeMessage from \"./models/addLoginRuntimeMessage\";\nimport ChangePasswordRuntimeMessage from \"./models/changePasswordRuntimeMessage\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\nimport { NotificationQueueMessageType } from \"./models/notificationQueueMessageType\";\n\nexport default class NotificationBackground {\n  private notificationQueue: (AddLoginQueueMessage | AddChangePasswordQueueMessage)[] = [];\n\n  constructor(\n    private autofillService: AutofillService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private policyService: PolicyService,\n    private folderService: FolderService,\n    private stateService: BrowserStateService\n  ) {}\n\n  async init() {\n    if (chrome.runtime == null) {\n      return;\n    }\n\n    BrowserApi.messageListener(\n      \"notification.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender) => {\n        await this.processMessage(msg, sender);\n      }\n    );\n\n    this.cleanupNotificationQueue();\n  }\n\n  async processMessage(msg: any, sender: chrome.runtime.MessageSender) {\n    switch (msg.command) {\n      case \"unlockCompleted\":\n        if (msg.data.target !== \"notification.background\") {\n          return;\n        }\n        await this.processMessage(msg.data.commandToRetry.msg, msg.data.commandToRetry.sender);\n        break;\n      case \"bgGetDataForTab\":\n        await this.getDataForTab(sender.tab, msg.responseCommand);\n        break;\n      case \"bgCloseNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"closeNotificationBar\");\n        break;\n      case \"bgAdjustNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"adjustNotificationBar\", msg.data);\n        break;\n      case \"bgAddLogin\":\n        await this.addLogin(msg.login, sender.tab);\n        break;\n      case \"bgChangedPassword\":\n        await this.changedPassword(msg.data, sender.tab);\n        break;\n      case \"bgAddClose\":\n      case \"bgChangeClose\":\n        this.removeTabFromNotificationQueue(sender.tab);\n        break;\n      case \"bgAddSave\":\n      case \"bgChangeSave\":\n        if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n          const retryMessage: LockedVaultPendingNotificationsItem = {\n            commandToRetry: {\n              msg: msg,\n              sender: sender,\n            },\n            target: \"notification.background\",\n          };\n          await BrowserApi.tabSendMessageData(\n            sender.tab,\n            \"addToLockedVaultPendingNotifications\",\n            retryMessage\n          );\n          await BrowserApi.tabSendMessageData(sender.tab, \"promptForLogin\");\n          return;\n        }\n        await this.saveOrUpdateCredentials(sender.tab, msg.folder);\n        break;\n      case \"bgNeverSave\":\n        await this.saveNever(sender.tab);\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"notificationBar\": {\n            const forms = this.autofillService.getFormsWithPasswordFields(msg.details);\n            await BrowserApi.tabSendMessageData(msg.tab, \"notificationBarPageDetails\", {\n              details: msg.details,\n              forms: forms,\n            });\n            break;\n          }\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async checkNotificationQueue(tab: chrome.tabs.Tab = null): Promise<void> {\n    if (this.notificationQueue.length === 0) {\n      return;\n    }\n\n    if (tab != null) {\n      await this.doNotificationQueueCheck(tab);\n      return;\n    }\n\n    const currentTab = await BrowserApi.getTabFromCurrentWindow();\n    if (currentTab != null) {\n      await this.doNotificationQueueCheck(currentTab);\n    }\n  }\n\n  private cleanupNotificationQueue() {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].expires < new Date()) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n    setTimeout(() => this.cleanupNotificationQueue(), 2 * 60 * 1000); // check every 2 minutes\n  }\n\n  private async doNotificationQueueCheck(tab: chrome.tabs.Tab): Promise<void> {\n    if (tab == null) {\n      return;\n    }\n\n    const tabDomain = Utils.getDomain(tab.url);\n    if (tabDomain == null) {\n      return;\n    }\n\n    for (let i = 0; i < this.notificationQueue.length; i++) {\n      if (\n        this.notificationQueue[i].tabId !== tab.id ||\n        this.notificationQueue[i].domain !== tabDomain\n      ) {\n        continue;\n      }\n\n      if (this.notificationQueue[i].type === NotificationQueueMessageType.AddLogin) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"add\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n            theme: await this.getCurrentTheme(),\n          },\n        });\n      } else if (this.notificationQueue[i].type === NotificationQueueMessageType.ChangePassword) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"change\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n            theme: await this.getCurrentTheme(),\n          },\n        });\n      }\n      break;\n    }\n  }\n\n  private async getCurrentTheme() {\n    const theme = await this.stateService.getTheme();\n\n    if (theme !== ThemeType.System) {\n      return theme;\n    }\n\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  private removeTabFromNotificationQueue(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].tabId === tab.id) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n  }\n\n  private async addLogin(loginInfo: AddLoginRuntimeMessage, tab: chrome.tabs.Tab) {\n    const authStatus = await this.authService.getAuthStatus();\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return;\n    }\n\n    const loginDomain = Utils.getDomain(loginInfo.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    let normalizedUsername = loginInfo.username;\n    if (normalizedUsername != null) {\n      normalizedUsername = normalizedUsername.toLowerCase();\n    }\n\n    const disabledAddLogin = await this.stateService.getDisableAddLoginNotification();\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab, true);\n      return;\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(loginInfo.url);\n    const usernameMatches = ciphers.filter(\n      (c) => c.login.username != null && c.login.username.toLowerCase() === normalizedUsername\n    );\n    if (usernameMatches.length === 0) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab);\n    } else if (\n      usernameMatches.length === 1 &&\n      usernameMatches[0].login.password !== loginInfo.password\n    ) {\n      const disabledChangePassword =\n        await this.stateService.getDisableChangedPasswordNotification();\n      if (disabledChangePassword) {\n        return;\n      }\n      this.pushChangePasswordToQueue(usernameMatches[0].id, loginDomain, loginInfo.password, tab);\n    }\n  }\n\n  private async pushAddLoginToQueue(\n    loginDomain: string,\n    loginInfo: AddLoginRuntimeMessage,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddLoginQueueMessage = {\n      type: NotificationQueueMessageType.AddLogin,\n      username: loginInfo.username,\n      password: loginInfo.password,\n      domain: loginDomain,\n      uri: loginInfo.url,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async changedPassword(changeData: ChangePasswordRuntimeMessage, tab: chrome.tabs.Tab) {\n    const loginDomain = Utils.getDomain(changeData.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      this.pushChangePasswordToQueue(null, loginDomain, changeData.newPassword, tab, true);\n      return;\n    }\n\n    let id: string = null;\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(changeData.url);\n    if (changeData.currentPassword != null) {\n      const passwordMatches = ciphers.filter(\n        (c) => c.login.password === changeData.currentPassword\n      );\n      if (passwordMatches.length === 1) {\n        id = passwordMatches[0].id;\n      }\n    } else if (ciphers.length === 1) {\n      id = ciphers[0].id;\n    }\n    if (id != null) {\n      this.pushChangePasswordToQueue(id, loginDomain, changeData.newPassword, tab);\n    }\n  }\n\n  private async pushChangePasswordToQueue(\n    cipherId: string,\n    loginDomain: string,\n    newPassword: string,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddChangePasswordQueueMessage = {\n      type: NotificationQueueMessageType.ChangePassword,\n      cipherId: cipherId,\n      newPassword: newPassword,\n      domain: loginDomain,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async saveOrUpdateCredentials(tab: chrome.tabs.Tab, folderId?: string) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        (queueMessage.type !== NotificationQueueMessageType.AddLogin &&\n          queueMessage.type !== NotificationQueueMessageType.ChangePassword)\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      if (queueMessage.type === NotificationQueueMessageType.ChangePassword) {\n        const changePasswordMessage = queueMessage as AddChangePasswordQueueMessage;\n        const cipher = await this.getDecryptedCipherById(changePasswordMessage.cipherId);\n        if (cipher == null) {\n          return;\n        }\n        await this.updateCipher(cipher, changePasswordMessage.newPassword);\n        return;\n      }\n\n      if (queueMessage.type === NotificationQueueMessageType.AddLogin) {\n        if (!queueMessage.wasVaultLocked) {\n          await this.createNewCipher(queueMessage as AddLoginQueueMessage, folderId);\n          BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n          return;\n        }\n\n        // If the vault was locked, check if a cipher needs updating instead of creating a new one\n        const addLoginMessage = queueMessage as AddLoginQueueMessage;\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(addLoginMessage.uri);\n        const usernameMatches = ciphers.filter(\n          (c) =>\n            c.login.username != null && c.login.username.toLowerCase() === addLoginMessage.username\n        );\n\n        if (usernameMatches.length >= 1) {\n          await this.updateCipher(usernameMatches[0], addLoginMessage.password);\n          return;\n        }\n\n        await this.createNewCipher(addLoginMessage, folderId);\n        BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n      }\n    }\n  }\n\n  private async createNewCipher(queueMessage: AddLoginQueueMessage, folderId: string) {\n    const loginModel = new LoginView();\n    const loginUri = new LoginUriView();\n    loginUri.uri = queueMessage.uri;\n    loginModel.uris = [loginUri];\n    loginModel.username = queueMessage.username;\n    loginModel.password = queueMessage.password;\n    const model = new CipherView();\n    model.name = Utils.getHostname(queueMessage.uri) || queueMessage.domain;\n    model.name = model.name.replace(/^www\\./, \"\");\n    model.type = CipherType.Login;\n    model.login = loginModel;\n\n    if (!Utils.isNullOrWhitespace(folderId)) {\n      const folders = await firstValueFrom(this.folderService.folderViews$);\n      if (folders.some((x) => x.id === folderId)) {\n        model.folderId = folderId;\n      }\n    }\n\n    const cipher = await this.cipherService.encrypt(model);\n    await this.cipherService.createWithServer(cipher);\n  }\n\n  private async getDecryptedCipherById(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.type === CipherType.Login) {\n      return await cipher.decrypt();\n    }\n    return null;\n  }\n\n  private async updateCipher(cipher: CipherView, newPassword: string) {\n    if (cipher != null && cipher.type === CipherType.Login) {\n      cipher.login.password = newPassword;\n      const newCipher = await this.cipherService.encrypt(cipher);\n      await this.cipherService.updateWithServer(newCipher);\n    }\n  }\n\n  private async saveNever(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        queueMessage.type !== NotificationQueueMessageType.AddLogin\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      const hostname = Utils.getHostname(tab.url);\n      await this.cipherService.saveNeverDomain(hostname);\n    }\n  }\n\n  private async getDataForTab(tab: chrome.tabs.Tab, responseCommand: string) {\n    const responseData: any = {};\n    if (responseCommand === \"notificationBarGetFoldersList\") {\n      responseData.folders = await firstValueFrom(this.folderService.folderViews$);\n    }\n\n    await BrowserApi.tabSendMessageData(tab, responseCommand, responseData);\n  }\n\n  private async allowPersonalOwnership(): Promise<boolean> {\n    return !(await firstValueFrom(\n      this.policyService.policyAppliesToActiveUser$(PolicyType.PersonalOwnership)\n    ));\n  }\n}\n","import { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { SystemService } from \"@bitwarden/common/abstractions/system.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport { BrowserEnvironmentService } from \"../services/browser-environment.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class RuntimeBackground {\n  private autofillTimeout: any;\n  private pageDetailsToAutoFill: any[] = [];\n  private onInstalledReason: string = null;\n  private lockedVaultPendingNotifications: LockedVaultPendingNotificationsItem[] = [];\n\n  constructor(\n    private main: MainBackground,\n    private autofillService: AutofillService,\n    private platformUtilsService: BrowserPlatformUtilsService,\n    private i18nService: I18nService,\n    private notificationsService: NotificationsService,\n    private systemService: SystemService,\n    private environmentService: BrowserEnvironmentService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {\n    // onInstalled listener must be wired up before anything else, so we do it in the ctor\n    chrome.runtime.onInstalled.addListener((details: any) => {\n      this.onInstalledReason = details.reason;\n    });\n  }\n\n  async init() {\n    if (!chrome.runtime) {\n      return;\n    }\n\n    await this.checkOnInstalled();\n    const backgroundMessageListener = async (\n      msg: any,\n      sender: chrome.runtime.MessageSender,\n      sendResponse: any\n    ) => {\n      await this.processMessage(msg, sender, sendResponse);\n    };\n\n    BrowserApi.messageListener(\"runtime.background\", backgroundMessageListener);\n    if (this.main.popupOnlyContext) {\n      (window as any).bitwardenBackgroundMessageListener = backgroundMessageListener;\n    }\n  }\n\n  async processMessage(msg: any, sender: any, sendResponse: any) {\n    switch (msg.command) {\n      case \"loggedIn\":\n      case \"unlocked\": {\n        let item: LockedVaultPendingNotificationsItem;\n\n        if (this.lockedVaultPendingNotifications?.length > 0) {\n          await BrowserApi.closeLoginTab();\n\n          item = this.lockedVaultPendingNotifications.pop();\n          if (item.commandToRetry.sender?.tab?.id) {\n            await BrowserApi.focusSpecifiedTab(item.commandToRetry.sender.tab.id);\n          }\n        }\n\n        await this.main.refreshBadge();\n        await this.main.refreshMenu(false);\n        this.notificationsService.updateConnection(msg.command === \"unlocked\");\n        this.systemService.cancelProcessReload();\n\n        if (item) {\n          await BrowserApi.tabSendMessageData(\n            item.commandToRetry.sender.tab,\n            \"unlockCompleted\",\n            item\n          );\n        }\n        break;\n      }\n      case \"addToLockedVaultPendingNotifications\":\n        this.lockedVaultPendingNotifications.push(msg.data);\n        break;\n      case \"logout\":\n        await this.main.logout(msg.expired, msg.userId);\n        break;\n      case \"syncCompleted\":\n        if (msg.successfully) {\n          setTimeout(async () => {\n            await this.main.refreshBadge();\n            await this.main.refreshMenu();\n          }, 2000);\n        }\n        break;\n      case \"openPopup\":\n        await this.main.openPopup();\n        break;\n      case \"promptForLogin\":\n        await BrowserApi.createNewTab(\"popup/index.html?uilocation=popout\", true, true);\n        break;\n      case \"showDialogResolve\":\n        this.platformUtilsService.resolveDialogPromise(msg.dialogId, msg.confirmed);\n        break;\n      case \"bgCollectPageDetails\":\n        await this.main.collectPageDetailsForContentScript(sender.tab, msg.sender, sender.frameId);\n        break;\n      case \"bgUpdateContextMenu\":\n      case \"editedCipher\":\n      case \"addedCipher\":\n      case \"deletedCipher\":\n        await this.main.refreshBadge();\n        await this.main.refreshMenu();\n        break;\n      case \"bgReseedStorage\":\n        await this.main.reseedStorage();\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"autofiller\":\n          case \"autofill_cmd\": {\n            const totpCode = await this.autofillService.doAutoFillActiveTab(\n              [\n                {\n                  frameId: sender.frameId,\n                  tab: msg.tab,\n                  details: msg.details,\n                },\n              ],\n              msg.sender === \"autofill_cmd\"\n            );\n            if (totpCode != null) {\n              this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n            }\n            break;\n          }\n          case \"contextMenu\":\n            clearTimeout(this.autofillTimeout);\n            this.pageDetailsToAutoFill.push({\n              frameId: sender.frameId,\n              tab: msg.tab,\n              details: msg.details,\n            });\n            this.autofillTimeout = setTimeout(async () => await this.autofillPage(msg.tab), 300);\n            break;\n          default:\n            break;\n        }\n        break;\n      case \"authResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        try {\n          BrowserApi.createNewTab(\n            \"popup/index.html?uilocation=popout#/sso?code=\" +\n              encodeURIComponent(msg.code) +\n              \"&state=\" +\n              encodeURIComponent(msg.state)\n          );\n        } catch {\n          this.logService.error(\"Unable to open sso popout tab\");\n        }\n        break;\n      }\n      case \"webAuthnResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        const params =\n          `webAuthnResponse=${encodeURIComponent(msg.data)};` +\n          `remember=${encodeURIComponent(msg.remember)}`;\n        BrowserApi.createNewTab(\n          `popup/index.html?uilocation=popout#/2fa;${params}`,\n          undefined,\n          false\n        );\n        break;\n      }\n      case \"reloadPopup\":\n        this.messagingService.send(\"reloadPopup\");\n        break;\n      case \"emailVerificationRequired\":\n        this.messagingService.send(\"showDialog\", {\n          dialogId: \"emailVerificationRequired\",\n          title: this.i18nService.t(\"emailVerificationRequired\"),\n          text: this.i18nService.t(\"emailVerificationRequiredDesc\"),\n          confirmText: this.i18nService.t(\"ok\"),\n          type: \"info\",\n        });\n        break;\n      case \"getClickedElementResponse\":\n        this.platformUtilsService.copyToClipboard(msg.identifier, { window: window });\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async autofillPage(tabToAutoFill: chrome.tabs.Tab) {\n    const totpCode = await this.autofillService.doAutoFill({\n      tab: tabToAutoFill,\n      cipher: this.main.loginToAutoFill,\n      pageDetails: this.pageDetailsToAutoFill,\n      fillNewPassword: true,\n    });\n\n    if (totpCode != null) {\n      this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n    }\n\n    // reset\n    this.main.loginToAutoFill = null;\n    this.pageDetailsToAutoFill = [];\n  }\n\n  private async checkOnInstalled() {\n    setTimeout(async () => {\n      if (this.onInstalledReason != null) {\n        if (this.onInstalledReason === \"install\") {\n          BrowserApi.createNewTab(\"https://bitwarden.com/browser-start/\");\n\n          if (await this.environmentService.hasManagedEnvironment()) {\n            await this.environmentService.setUrlsToManagedEnvironment();\n          }\n        }\n\n        this.onInstalledReason = null;\n      }\n    }, 100);\n  }\n}\n","import MainBackground from \"./main.background\";\nimport NotificationBackground from \"./notification.background\";\n\nexport default class TabsBackground {\n  constructor(\n    private main: MainBackground,\n    private notificationBackground: NotificationBackground\n  ) {}\n\n  private focusedWindowId: number;\n\n  async init() {\n    if (!chrome.tabs || !chrome.windows) {\n      return;\n    }\n\n    chrome.windows.onFocusChanged.addListener(async (windowId: number) => {\n      if (windowId === null || windowId < 0) {\n        return;\n      }\n\n      this.focusedWindowId = windowId;\n      this.main.messagingService.send(\"windowChanged\");\n    });\n\n    chrome.tabs.onActivated.addListener(async (activeInfo: chrome.tabs.TabActiveInfo) => {\n      await this.main.refreshBadge();\n      await this.main.refreshMenu();\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onReplaced.addListener(async (addedTabId: number, removedTabId: number) => {\n      if (this.main.onReplacedRan) {\n        return;\n      }\n      this.main.onReplacedRan = true;\n\n      await this.notificationBackground.checkNotificationQueue();\n      await this.main.refreshBadge();\n      await this.main.refreshMenu();\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onUpdated.addListener(\n      async (tabId: number, changeInfo: chrome.tabs.TabChangeInfo, tab: chrome.tabs.Tab) => {\n        if (this.focusedWindowId > 0 && tab.windowId != this.focusedWindowId) {\n          return;\n        }\n\n        if (!tab.active) {\n          return;\n        }\n\n        if (this.main.onUpdatedRan) {\n          return;\n        }\n        this.main.onUpdatedRan = true;\n\n        await this.notificationBackground.checkNotificationQueue(tab);\n        await this.main.refreshBadge();\n        await this.main.refreshMenu();\n        this.main.messagingService.send(\"tabChanged\");\n      }\n    );\n  }\n}\n","import { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nexport default class WebRequestBackground {\n  private pendingAuthRequests: any[] = [];\n  private webRequest: any;\n  private isFirefox: boolean;\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private authService: AuthService\n  ) {\n    if (BrowserApi.manifestVersion === 2) {\n      this.webRequest = (window as any).chrome.webRequest;\n    }\n    this.isFirefox = platformUtilsService.isFirefox();\n  }\n\n  async init() {\n    if (!this.webRequest || !this.webRequest.onAuthRequired) {\n      return;\n    }\n\n    this.webRequest.onAuthRequired.addListener(\n      async (details: any, callback: any) => {\n        if (!details.url || this.pendingAuthRequests.indexOf(details.requestId) !== -1) {\n          if (callback) {\n            callback();\n          }\n          return;\n        }\n\n        this.pendingAuthRequests.push(details.requestId);\n\n        if (this.isFirefox) {\n          // eslint-disable-next-line\n          return new Promise(async (resolve, reject) => {\n            await this.resolveAuthCredentials(details.url, resolve, reject);\n          });\n        } else {\n          await this.resolveAuthCredentials(details.url, callback, callback);\n        }\n      },\n      { urls: [\"http://*/*\", \"https://*/*\"] },\n      [this.isFirefox ? \"blocking\" : \"asyncBlocking\"]\n    );\n\n    this.webRequest.onCompleted.addListener((details: any) => this.completeAuthRequest(details), {\n      urls: [\"http://*/*\"],\n    });\n    this.webRequest.onErrorOccurred.addListener(\n      (details: any) => this.completeAuthRequest(details),\n      {\n        urls: [\"http://*/*\"],\n      }\n    );\n  }\n\n  // eslint-disable-next-line\n  private async resolveAuthCredentials(domain: string, success: Function, error: Function) {\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      error();\n      return;\n    }\n\n    try {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(\n        domain,\n        null,\n        UriMatchType.Host\n      );\n      if (ciphers == null || ciphers.length !== 1) {\n        error();\n        return;\n      }\n\n      success({\n        authCredentials: {\n          username: ciphers[0].login.username,\n          password: ciphers[0].login.password,\n        },\n      });\n    } catch {\n      error();\n    }\n  }\n\n  private completeAuthRequest(details: any) {\n    const i = this.pendingAuthRequests.indexOf(details.requestId);\n    if (i > -1) {\n      this.pendingAuthRequests.splice(i, 1);\n    }\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport { EventService as EventServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { InternalOrganizationService as InternalOrganizationServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"@bitwarden/common/abstractions/sync/syncNotifier.service.abstraction\";\nimport { SystemService as SystemServiceAbstraction } from \"@bitwarden/common/abstractions/system.service\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\nimport { EncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/encrypt.service.implementation\";\nimport { MultithreadEncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/multithread-encrypt.service.implementation\";\nimport { EventService } from \"@bitwarden/common/services/event.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync/sync.service\";\nimport { SyncNotifierService } from \"@bitwarden/common/services/sync/syncNotifier.service\";\nimport { SystemService } from \"@bitwarden/common/services/system.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/services/userVerification/userVerification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeoutSettings.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\nimport { flagEnabled } from \"../flags\";\nimport { UpdateBadge } from \"../listeners/update-badge\";\nimport { Account } from \"../models/account\";\nimport { PopupUtilsService } from \"../popup/services/popup-utils.service\";\nimport { AutofillService as AutofillServiceAbstraction } from \"../services/abstractions/autofill.service\";\nimport { BrowserStateService as StateServiceAbstraction } from \"../services/abstractions/browser-state.service\";\nimport AutofillService from \"../services/autofill.service\";\nimport { BrowserEnvironmentService } from \"../services/browser-environment.service\";\nimport { BrowserFolderService } from \"../services/browser-folder.service\";\nimport { BrowserOrganizationService } from \"../services/browser-organization.service\";\nimport { BrowserPolicyService } from \"../services/browser-policy.service\";\nimport { BrowserSettingsService } from \"../services/browser-settings.service\";\nimport { BrowserStateService } from \"../services/browser-state.service\";\nimport { BrowserCryptoService } from \"../services/browserCrypto.service\";\nimport BrowserLocalStorageService from \"../services/browserLocalStorage.service\";\nimport BrowserMessagingService from \"../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModeBackgroundService from \"../services/browserMessagingPrivateModeBackground.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\nimport I18nService from \"../services/i18n.service\";\nimport { KeyGenerationService } from \"../services/keyGeneration.service\";\nimport { LocalBackedSessionStorageService } from \"../services/localBackedSessionStorage.service\";\nimport { VaultFilterService } from \"../services/vaultFilter.service\";\nimport VaultTimeoutService from \"../services/vaultTimeout/vaultTimeout.service\";\n\nimport CommandsBackground from \"./commands.background\";\nimport ContextMenusBackground from \"./contextMenus.background\";\nimport IdleBackground from \"./idle.background\";\nimport IconDetails from \"./models/iconDetails\";\nimport { NativeMessagingBackground } from \"./nativeMessaging.background\";\nimport NotificationBackground from \"./notification.background\";\nimport RuntimeBackground from \"./runtime.background\";\nimport TabsBackground from \"./tabs.background\";\nimport WebRequestBackground from \"./webRequest.background\";\n\nexport default class MainBackground {\n  messagingService: MessagingServiceAbstraction;\n  storageService: AbstractStorageService;\n  secureStorageService: AbstractStorageService;\n  memoryStorageService: AbstractStorageService;\n  i18nService: I18nServiceAbstraction;\n  platformUtilsService: PlatformUtilsServiceAbstraction;\n  logService: LogServiceAbstraction;\n  cryptoService: CryptoServiceAbstraction;\n  cryptoFunctionService: CryptoFunctionServiceAbstraction;\n  tokenService: TokenServiceAbstraction;\n  appIdService: AppIdServiceAbstraction;\n  apiService: ApiServiceAbstraction;\n  environmentService: BrowserEnvironmentService;\n  settingsService: SettingsServiceAbstraction;\n  cipherService: CipherServiceAbstraction;\n  folderService: InternalFolderServiceAbstraction;\n  collectionService: CollectionServiceAbstraction;\n  vaultTimeoutService: VaultTimeoutServiceAbstraction;\n  vaultTimeoutSettingsService: VaultTimeoutSettingsServiceAbstraction;\n  syncService: SyncServiceAbstraction;\n  passwordGenerationService: PasswordGenerationServiceAbstraction;\n  totpService: TotpServiceAbstraction;\n  autofillService: AutofillServiceAbstraction;\n  containerService: ContainerService;\n  auditService: AuditServiceAbstraction;\n  authService: AuthServiceAbstraction;\n  exportService: ExportServiceAbstraction;\n  searchService: SearchServiceAbstraction;\n  notificationsService: NotificationsServiceAbstraction;\n  stateService: StateServiceAbstraction;\n  stateMigrationService: StateMigrationService;\n  systemService: SystemServiceAbstraction;\n  eventService: EventServiceAbstraction;\n  policyService: InternalPolicyServiceAbstraction;\n  popupUtilsService: PopupUtilsService;\n  sendService: SendServiceAbstraction;\n  fileUploadService: FileUploadServiceAbstraction;\n  organizationService: InternalOrganizationServiceAbstraction;\n  providerService: ProviderServiceAbstraction;\n  keyConnectorService: KeyConnectorServiceAbstraction;\n  userVerificationService: UserVerificationServiceAbstraction;\n  twoFactorService: TwoFactorServiceAbstraction;\n  vaultFilterService: VaultFilterService;\n  usernameGenerationService: UsernameGenerationServiceAbstraction;\n  encryptService: EncryptService;\n  folderApiService: FolderApiServiceAbstraction;\n  policyApiService: PolicyApiServiceAbstraction;\n  userVerificationApiService: UserVerificationApiServiceAbstraction;\n  syncNotifierService: SyncNotifierServiceAbstraction;\n\n  // Passed to the popup for Safari to workaround issues with theming, downloading, etc.\n  backgroundWindow = window;\n\n  onUpdatedRan: boolean;\n  onReplacedRan: boolean;\n  loginToAutoFill: CipherView = null;\n\n  private commandsBackground: CommandsBackground;\n  private contextMenusBackground: ContextMenusBackground;\n  private idleBackground: IdleBackground;\n  private notificationBackground: NotificationBackground;\n  private runtimeBackground: RuntimeBackground;\n  private tabsBackground: TabsBackground;\n  private webRequestBackground: WebRequestBackground;\n\n  private sidebarAction: any;\n  private buildingContextMenu: boolean;\n  private menuOptionsLoaded: any[] = [];\n  private syncTimeout: any;\n  private isSafari: boolean;\n  private nativeMessagingBackground: NativeMessagingBackground;\n  popupOnlyContext: boolean;\n\n  constructor(public isPrivateMode: boolean = false) {\n    this.popupOnlyContext = isPrivateMode || BrowserApi.manifestVersion === 3;\n\n    // Services\n    const lockedCallback = async (userId?: string) => {\n      if (this.notificationsService != null) {\n        this.notificationsService.updateConnection(false);\n      }\n      await this.refreshBadge();\n      await this.refreshMenu(true);\n      if (this.systemService != null) {\n        await this.systemService.clearPendingClipboard();\n        await this.systemService.startProcessReload(this.authService);\n      }\n    };\n\n    const logoutCallback = async (expired: boolean, userId?: string) =>\n      await this.logout(expired, userId);\n\n    this.messagingService = this.popupOnlyContext\n      ? new BrowserMessagingPrivateModeBackgroundService()\n      : new BrowserMessagingService();\n    this.logService = new ConsoleLogService(false);\n    this.cryptoFunctionService = new WebCryptoFunctionService(window);\n    this.storageService = new BrowserLocalStorageService();\n    this.secureStorageService = new BrowserLocalStorageService();\n    this.memoryStorageService =\n      BrowserApi.manifestVersion === 3\n        ? new LocalBackedSessionStorageService(\n            new EncryptServiceImplementation(this.cryptoFunctionService, this.logService, false),\n            new KeyGenerationService(this.cryptoFunctionService)\n          )\n        : new MemoryStorageService();\n    this.stateMigrationService = new StateMigrationService(\n      this.storageService,\n      this.secureStorageService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.stateService = new BrowserStateService(\n      this.storageService,\n      this.secureStorageService,\n      this.memoryStorageService,\n      this.logService,\n      this.stateMigrationService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.platformUtilsService = new BrowserPlatformUtilsService(\n      this.messagingService,\n      (clipboardValue, clearMs) => {\n        if (this.systemService != null) {\n          this.systemService.clearClipboard(clipboardValue, clearMs);\n        }\n      },\n      async () => {\n        if (this.nativeMessagingBackground != null) {\n          const promise = this.nativeMessagingBackground.getResponse();\n\n          try {\n            await this.nativeMessagingBackground.send({ command: \"biometricUnlock\" });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n\n          return promise.then((result) => result.response === \"unlocked\");\n        }\n      },\n      window\n    );\n    this.i18nService = new I18nService(BrowserApi.getUILanguage(window));\n    this.encryptService = flagEnabled(\"multithreadDecryption\")\n      ? new MultithreadEncryptServiceImplementation(\n          this.cryptoFunctionService,\n          this.logService,\n          true\n        )\n      : new EncryptServiceImplementation(this.cryptoFunctionService, this.logService, true);\n    this.cryptoService = new BrowserCryptoService(\n      this.cryptoFunctionService,\n      this.encryptService,\n      this.platformUtilsService,\n      this.logService,\n      this.stateService\n    );\n    this.tokenService = new TokenService(this.stateService);\n    this.appIdService = new AppIdService(this.storageService);\n    this.environmentService = new BrowserEnvironmentService(this.stateService, this.logService);\n    this.apiService = new ApiService(\n      this.tokenService,\n      this.platformUtilsService,\n      this.environmentService,\n      this.appIdService,\n      (expired: boolean) => this.logout(expired)\n    );\n    this.settingsService = new BrowserSettingsService(this.stateService);\n    this.fileUploadService = new FileUploadService(this.logService, this.apiService);\n    this.cipherService = new CipherService(\n      this.cryptoService,\n      this.settingsService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      () => this.searchService,\n      this.logService,\n      this.stateService,\n      this.encryptService\n    );\n    this.folderService = new BrowserFolderService(\n      this.cryptoService,\n      this.i18nService,\n      this.cipherService,\n      this.stateService\n    );\n    this.folderApiService = new FolderApiService(this.folderService, this.apiService);\n    this.collectionService = new CollectionService(\n      this.cryptoService,\n      this.i18nService,\n      this.stateService\n    );\n    this.searchService = new SearchService(this.cipherService, this.logService, this.i18nService);\n    this.sendService = new SendService(\n      this.cryptoService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      this.cryptoFunctionService,\n      this.stateService\n    );\n    this.syncNotifierService = new SyncNotifierService();\n    this.organizationService = new BrowserOrganizationService(this.stateService);\n    this.policyService = new BrowserPolicyService(this.stateService, this.organizationService);\n    this.policyApiService = new PolicyApiService(\n      this.policyService,\n      this.apiService,\n      this.stateService,\n      this.organizationService\n    );\n    this.keyConnectorService = new KeyConnectorService(\n      this.stateService,\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.logService,\n      this.organizationService,\n      this.cryptoFunctionService,\n      logoutCallback\n    );\n    this.vaultFilterService = new VaultFilterService(\n      this.stateService,\n      this.organizationService,\n      this.folderService,\n      this.cipherService,\n      this.collectionService,\n      this.policyService\n    );\n\n    this.twoFactorService = new TwoFactorService(this.i18nService, this.platformUtilsService);\n\n    // eslint-disable-next-line\n    const that = this;\n    const backgroundMessagingService = new (class extends MessagingServiceAbstraction {\n      // AuthService should send the messages to the background not popup.\n      send = (subscriber: string, arg: any = {}) => {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        that.runtimeBackground.processMessage(message, that, null);\n      };\n    })();\n    this.authService = new AuthService(\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.appIdService,\n      this.platformUtilsService,\n      backgroundMessagingService,\n      this.logService,\n      this.keyConnectorService,\n      this.environmentService,\n      this.stateService,\n      this.twoFactorService,\n      this.i18nService\n    );\n\n    this.vaultTimeoutSettingsService = new VaultTimeoutSettingsService(\n      this.cryptoService,\n      this.tokenService,\n      this.policyService,\n      this.stateService\n    );\n\n    this.vaultTimeoutService = new VaultTimeoutService(\n      this.cipherService,\n      this.folderService,\n      this.collectionService,\n      this.cryptoService,\n      this.platformUtilsService,\n      this.messagingService,\n      this.searchService,\n      this.keyConnectorService,\n      this.stateService,\n      this.authService,\n      this.vaultTimeoutSettingsService,\n      lockedCallback,\n      logoutCallback\n    );\n\n    this.providerService = new ProviderService(this.stateService);\n    this.syncService = new SyncService(\n      this.apiService,\n      this.settingsService,\n      this.folderService,\n      this.cipherService,\n      this.cryptoService,\n      this.collectionService,\n      this.messagingService,\n      this.policyService,\n      this.sendService,\n      this.logService,\n      this.keyConnectorService,\n      this.stateService,\n      this.providerService,\n      this.folderApiService,\n      this.organizationService,\n      logoutCallback\n    );\n    this.eventService = new EventService(\n      this.apiService,\n      this.cipherService,\n      this.stateService,\n      this.logService,\n      this.organizationService\n    );\n    this.passwordGenerationService = new PasswordGenerationService(\n      this.cryptoService,\n      this.policyService,\n      this.stateService\n    );\n    this.totpService = new TotpService(this.cryptoFunctionService, this.logService);\n    this.autofillService = new AutofillService(\n      this.cipherService,\n      this.stateService,\n      this.totpService,\n      this.eventService,\n      this.logService\n    );\n    this.containerService = new ContainerService(this.cryptoService, this.encryptService);\n    this.auditService = new AuditService(this.cryptoFunctionService, this.apiService);\n    this.exportService = new ExportService(\n      this.folderService,\n      this.cipherService,\n      this.apiService,\n      this.cryptoService,\n      this.cryptoFunctionService\n    );\n    this.notificationsService = new NotificationsService(\n      this.syncService,\n      this.appIdService,\n      this.apiService,\n      this.environmentService,\n      logoutCallback,\n      this.logService,\n      this.stateService,\n      this.authService\n    );\n    this.popupUtilsService = new PopupUtilsService(isPrivateMode);\n\n    this.userVerificationApiService = new UserVerificationApiService(this.apiService);\n\n    this.userVerificationService = new UserVerificationService(\n      this.cryptoService,\n      this.i18nService,\n      this.userVerificationApiService\n    );\n\n    const systemUtilsServiceReloadCallback = () => {\n      const forceWindowReload =\n        this.platformUtilsService.isSafari() ||\n        this.platformUtilsService.isFirefox() ||\n        this.platformUtilsService.isOpera();\n      BrowserApi.reloadExtension(forceWindowReload ? window : null);\n      return Promise.resolve();\n    };\n\n    this.systemService = new SystemService(\n      this.messagingService,\n      this.platformUtilsService,\n      systemUtilsServiceReloadCallback,\n      this.stateService\n    );\n\n    // Other fields\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.sidebarAction = this.isSafari\n      ? null\n      : typeof opr !== \"undefined\" && opr.sidebarAction\n      ? opr.sidebarAction\n      : (window as any).chrome.sidebarAction;\n\n    // Background\n    this.runtimeBackground = new RuntimeBackground(\n      this,\n      this.autofillService,\n      this.platformUtilsService as BrowserPlatformUtilsService,\n      this.i18nService,\n      this.notificationsService,\n      this.systemService,\n      this.environmentService,\n      this.messagingService,\n      this.logService\n    );\n    this.nativeMessagingBackground = new NativeMessagingBackground(\n      this.cryptoService,\n      this.cryptoFunctionService,\n      this.runtimeBackground,\n      this.i18nService,\n      this.messagingService,\n      this.appIdService,\n      this.platformUtilsService,\n      this.stateService,\n      this.logService,\n      this.authService\n    );\n    this.commandsBackground = new CommandsBackground(\n      this,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.vaultTimeoutService,\n      this.authService\n    );\n    this.notificationBackground = new NotificationBackground(\n      this.autofillService,\n      this.cipherService,\n      this.authService,\n      this.policyService,\n      this.folderService,\n      this.stateService\n    );\n\n    this.tabsBackground = new TabsBackground(this, this.notificationBackground);\n    this.contextMenusBackground = new ContextMenusBackground(\n      this,\n      this.cipherService,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.authService,\n      this.eventService,\n      this.totpService\n    );\n    this.idleBackground = new IdleBackground(\n      this.vaultTimeoutService,\n      this.stateService,\n      this.notificationsService\n    );\n    this.webRequestBackground = new WebRequestBackground(\n      this.platformUtilsService,\n      this.cipherService,\n      this.authService\n    );\n\n    this.usernameGenerationService = new UsernameGenerationService(\n      this.cryptoService,\n      this.stateService,\n      this.apiService\n    );\n  }\n\n  async bootstrap() {\n    this.containerService.attachToGlobal(window);\n\n    await this.stateService.init();\n\n    await (this.vaultTimeoutService as VaultTimeoutService).init(true);\n    await (this.i18nService as I18nService).init();\n    await (this.eventService as EventService).init(true);\n    await this.runtimeBackground.init();\n    await this.notificationBackground.init();\n    await this.commandsBackground.init();\n\n    this.twoFactorService.init();\n\n    await this.tabsBackground.init();\n    await this.contextMenusBackground.init();\n    await this.idleBackground.init();\n    await this.webRequestBackground.init();\n\n    if (this.platformUtilsService.isFirefox() && !this.isPrivateMode) {\n      // Set Private Mode windows to the default icon - they do not share state with the background page\n      const privateWindows = await BrowserApi.getPrivateModeWindows();\n      privateWindows.forEach(async (win) => {\n        await new UpdateBadge(self).setBadgeIcon(\"\", win.id);\n      });\n\n      BrowserApi.onWindowCreated(async (win) => {\n        if (win.incognito) {\n          await new UpdateBadge(self).setBadgeIcon(\"\", win.id);\n        }\n      });\n    }\n\n    return new Promise<void>((resolve) => {\n      setTimeout(async () => {\n        await this.environmentService.setUrlsFromStorage();\n        await this.refreshBadge();\n        this.fullSync(true);\n        setTimeout(() => this.notificationsService.init(), 2500);\n        resolve();\n      }, 500);\n    });\n  }\n\n  async refreshBadge() {\n    await new UpdateBadge(self).run({ existingServices: this as any });\n  }\n\n  async refreshMenu(forLocked = false) {\n    if (!chrome.windows || !chrome.contextMenus) {\n      return;\n    }\n\n    const menuDisabled = await this.stateService.getDisableContextMenuItem();\n    if (!menuDisabled) {\n      await this.buildContextMenu();\n    } else {\n      await this.contextMenusRemoveAll();\n    }\n\n    if (forLocked) {\n      await this.loadMenuForNoAccessState(!menuDisabled);\n      this.onUpdatedRan = this.onReplacedRan = false;\n      return;\n    }\n\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (tab) {\n      await this.contextMenuReady(tab, !menuDisabled);\n    }\n  }\n\n  async logout(expired: boolean, userId?: string) {\n    await this.eventService.uploadEvents(userId);\n\n    await Promise.all([\n      this.eventService.clearEvents(userId),\n      this.syncService.setLastSync(new Date(0), userId),\n      this.cryptoService.clearKeys(userId),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(userId),\n      this.vaultTimeoutSettingsService.clear(userId),\n      this.keyConnectorService.clear(),\n      this.vaultFilterService.clear(),\n    ]);\n\n    await this.stateService.clean({ userId: userId });\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      this.messagingService.send(\"doneLoggingOut\", { expired: expired, userId: userId });\n    }\n\n    if (BrowserApi.manifestVersion === 3) {\n      BrowserApi.sendMessage(\"updateBadge\");\n    }\n    await this.refreshBadge();\n    await this.refreshMenu(true);\n    await this.reseedStorage();\n    this.notificationsService.updateConnection(false);\n    await this.systemService.clearPendingClipboard();\n    await this.systemService.startProcessReload(this.authService);\n  }\n\n  async collectPageDetailsForContentScript(tab: any, sender: string, frameId: number = null) {\n    if (tab == null || !tab.id) {\n      return;\n    }\n\n    const options: any = {};\n    if (frameId != null) {\n      options.frameId = frameId;\n    }\n\n    BrowserApi.tabSendMessage(\n      tab,\n      {\n        command: \"collectPageDetails\",\n        tab: tab,\n        sender: sender,\n      },\n      options\n    );\n  }\n\n  async openPopup() {\n    // Chrome APIs cannot open popup\n\n    // TODO: Do we need to open this popup?\n    if (!this.isSafari) {\n      return;\n    }\n    await SafariApp.sendMessageToApp(\"showPopover\", null, true);\n  }\n\n  async reseedStorage() {\n    if (\n      !this.platformUtilsService.isChrome() &&\n      !this.platformUtilsService.isVivaldi() &&\n      !this.platformUtilsService.isOpera()\n    ) {\n      return;\n    }\n\n    const currentVaultTimeout = await this.stateService.getVaultTimeout();\n    if (currentVaultTimeout == null) {\n      return;\n    }\n\n    const getStorage = (): Promise<any> =>\n      new Promise((resolve) => {\n        chrome.storage.local.get(null, (o: any) => resolve(o));\n      });\n\n    const clearStorage = (): Promise<void> =>\n      new Promise((resolve) => {\n        chrome.storage.local.clear(() => resolve());\n      });\n\n    const storage = await getStorage();\n    await clearStorage();\n\n    for (const key in storage) {\n      // eslint-disable-next-line\n      if (!storage.hasOwnProperty(key)) {\n        continue;\n      }\n      await this.storageService.save(key, storage[key]);\n    }\n  }\n\n  private async buildContextMenu() {\n    if (!chrome.contextMenus || this.buildingContextMenu) {\n      return;\n    }\n\n    this.buildingContextMenu = true;\n    await this.contextMenusRemoveAll();\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"root\",\n      contexts: [\"all\"],\n      title: \"Bitwarden\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"autofill\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"autoFill\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-username\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyUsername\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyPassword\"),\n    });\n\n    if (await this.stateService.getCanAccessPremium()) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp\",\n        parentId: \"root\",\n        contexts: [\"all\"],\n        title: this.i18nService.t(\"copyVerificationCode\"),\n      });\n    }\n\n    await this.contextMenusCreate({\n      type: \"separator\",\n      parentId: \"root\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"generate-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"generatePasswordCopied\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-identifier\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyElementIdentifier\"),\n    });\n\n    this.buildingContextMenu = false;\n  }\n\n  private async contextMenuReady(tab: any, contextMenuEnabled: boolean) {\n    await this.loadMenu(tab.url, tab.id, contextMenuEnabled);\n    this.onUpdatedRan = this.onReplacedRan = false;\n  }\n\n  private async loadMenu(url: string, tabId: number, contextMenuEnabled: boolean) {\n    if (!url || (!chrome.browserAction && !this.sidebarAction)) {\n      return;\n    }\n\n    this.menuOptionsLoaded = [];\n    const authStatus = await this.authService.getAuthStatus();\n    if (authStatus === AuthenticationStatus.Unlocked) {\n      try {\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(url);\n        ciphers.sort((a, b) => this.cipherService.sortCiphersByLastUsedThenName(a, b));\n\n        if (contextMenuEnabled) {\n          ciphers.forEach((cipher) => {\n            this.loadLoginContextMenuOptions(cipher);\n          });\n        }\n\n        if (contextMenuEnabled && ciphers.length === 0) {\n          await this.loadNoLoginsContextMenuOptions(this.i18nService.t(\"noMatchingLogins\"));\n        }\n\n        return;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    await this.loadMenuForNoAccessState(contextMenuEnabled);\n  }\n\n  private async loadMenuForNoAccessState(contextMenuEnabled: boolean) {\n    if (contextMenuEnabled) {\n      const authed = await this.stateService.getIsAuthenticated();\n      await this.loadNoLoginsContextMenuOptions(\n        this.i18nService.t(authed ? \"unlockVaultMenu\" : \"loginToVaultMenu\")\n      );\n    }\n  }\n\n  private async loadLoginContextMenuOptions(cipher: any) {\n    if (\n      cipher == null ||\n      cipher.type !== CipherType.Login ||\n      cipher.reprompt !== CipherRepromptType.None\n    ) {\n      return;\n    }\n\n    let title = cipher.name;\n    if (cipher.login.username && cipher.login.username !== \"\") {\n      title += \" (\" + cipher.login.username + \")\";\n    }\n    await this.loadContextMenuOptions(title, cipher.id, cipher);\n  }\n\n  private async loadNoLoginsContextMenuOptions(noLoginsMessage: string) {\n    await this.loadContextMenuOptions(noLoginsMessage, \"noop\", null);\n  }\n\n  private async loadContextMenuOptions(title: string, idSuffix: string, cipher: any) {\n    if (\n      !chrome.contextMenus ||\n      this.menuOptionsLoaded.indexOf(idSuffix) > -1 ||\n      (cipher != null && cipher.type !== CipherType.Login)\n    ) {\n      return;\n    }\n\n    this.menuOptionsLoaded.push(idSuffix);\n\n    if (cipher == null || (cipher.login.password && cipher.login.password !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"autofill_\" + idSuffix,\n        parentId: \"autofill\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (cipher == null || (cipher.login.username && cipher.login.username !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-username_\" + idSuffix,\n        parentId: \"copy-username\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (\n      cipher == null ||\n      (cipher.login.password && cipher.login.password !== \"\" && cipher.viewPassword)\n    ) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-password_\" + idSuffix,\n        parentId: \"copy-password\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (canAccessPremium && (cipher == null || (cipher.login.totp && cipher.login.totp !== \"\"))) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp_\" + idSuffix,\n        parentId: \"copy-totp\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n  }\n\n  private sanitizeContextMenuTitle(title: string): string {\n    return title.replace(/&/g, \"&&\");\n  }\n\n  private async fullSync(override = false) {\n    const syncInternal = 6 * 60 * 60 * 1000; // 6 hours\n    const lastSync = await this.syncService.getLastSync();\n\n    let lastSyncAgo = syncInternal + 1;\n    if (lastSync != null) {\n      lastSyncAgo = new Date().getTime() - lastSync.getTime();\n    }\n\n    if (override || lastSyncAgo >= syncInternal) {\n      await this.syncService.fullSync(override);\n      this.scheduleNextSync();\n    } else {\n      this.scheduleNextSync();\n    }\n  }\n\n  private scheduleNextSync() {\n    if (this.syncTimeout) {\n      clearTimeout(this.syncTimeout);\n    }\n\n    this.syncTimeout = setTimeout(async () => await this.fullSync(), 5 * 60 * 1000); // check every 5 minutes\n  }\n\n  // Browser API Helpers\n\n  private contextMenusRemoveAll() {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.removeAll(() => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private contextMenusCreate(options: any) {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.create(options, () => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private async actionSetIcon(theAction: any, suffix: string, windowId?: number): Promise<any> {\n    if (!theAction || !theAction.setIcon) {\n      return;\n    }\n\n    const options: IconDetails = {\n      path: {\n        19: \"images/icon19\" + suffix + \".png\",\n        38: \"images/icon38\" + suffix + \".png\",\n      },\n    };\n\n    if (this.platformUtilsService.isFirefox()) {\n      options.windowId = windowId;\n      await theAction.setIcon(options);\n    } else if (this.platformUtilsService.isSafari()) {\n      // Workaround since Safari 14.0.3 returns a pending promise\n      // which doesn't resolve within a reasonable time.\n      theAction.setIcon(options);\n    } else {\n      return new Promise<void>((resolve) => {\n        theAction.setIcon(options, () => resolve());\n      });\n    }\n  }\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport class FileDownloadBuilder {\n  get blobOptions(): any {\n    const options = this._request.blobOptions ?? {};\n    if (options.type == null) {\n      options.type = this.fileType;\n    }\n    return options;\n  }\n\n  get blob(): Blob {\n    if (this.blobOptions != null) {\n      return new Blob([this._request.blobData], this.blobOptions);\n    } else {\n      return new Blob([this._request.blobData]);\n    }\n  }\n\n  get downloadMethod(): \"save\" | \"open\" {\n    if (this._request.downloadMethod != null) {\n      return this._request.downloadMethod;\n    }\n    return this.fileType != \"application/pdf\" ? \"save\" : \"open\";\n  }\n\n  private get fileType() {\n    const fileNameLower = this._request.fileName.toLowerCase();\n    if (fileNameLower.endsWith(\".pdf\")) {\n      return \"application/pdf\";\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      return \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      return \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      return \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      return \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      return \"image/gif\";\n    }\n    return null;\n  }\n\n  constructor(private readonly _request: FileDownloadRequest) {}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileDownloadBuilder } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadBuilder\";\nimport { FileDownloadRequest } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadRequest\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\n\n@Injectable()\nexport class BrowserFileDownloadService implements FileDownloadService {\n  download(request: FileDownloadRequest): void {\n    const builder = new FileDownloadBuilder(request);\n    if (BrowserApi.isSafariApi) {\n      let data: BlobPart = null;\n      if (builder.blobOptions.type === \"text/plain\" && typeof request.blobData === \"string\") {\n        data = request.blobData;\n      } else {\n        data = Utils.fromBufferToB64(request.blobData as ArrayBuffer);\n      }\n      SafariApp.sendMessageToApp(\n        \"downloadFile\",\n        JSON.stringify({\n          blobData: data,\n          blobOptions: request.blobOptions,\n          fileName: request.fileName,\n        }),\n        true\n      );\n    } else {\n      if ((navigator as any).msSaveOrOpenBlob) {\n        (navigator as any).msSaveBlob(builder.blob, request.fileName);\n      } else {\n        const a = window.document.createElement(\"a\");\n        a.href = URL.createObjectURL(builder.blob);\n        a.download = request.fileName;\n        window.document.body.appendChild(a);\n        a.click();\n        window.document.body.removeChild(a);\n      }\n    }\n  }\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModePopupService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenBackgroundMessageListener(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService as LogServiceAbstraction } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { BrowserStateService as StateServiceAbstraction } from \"../../services/abstractions/browser-state.service\";\n\nimport { PopupUtilsService } from \"./popup-utils.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private popupUtilsService: PopupUtilsService,\n    private stateService: StateServiceAbstraction,\n    private logService: LogServiceAbstraction,\n    private themingService: AbstractThemingService\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      if (!this.popupUtilsService.inPopup(window)) {\n        window.document.body.classList.add(\"body-full\");\n      } else if (window.screen.availHeight < 600) {\n        window.document.body.classList.add(\"body-xs\");\n      } else if (window.screen.availHeight <= 800) {\n        window.document.body.classList.add(\"body-sm\");\n      }\n\n      const htmlEl = window.document.documentElement;\n      await this.themingService.monitorThemeChanges();\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n\n      // Workaround for slow performance on external monitors on Chrome + MacOS\n      // See: https://bugs.chromium.org/p/chromium/issues/detail?id=971701#c64\n      if (\n        this.platformUtilsService.isChrome() &&\n        navigator.platform.indexOf(\"Mac\") > -1 &&\n        this.popupUtilsService.inPopup(window) &&\n        (window.screenLeft < 0 ||\n          window.screenTop < 0 ||\n          window.screenLeft > window.screen.width ||\n          window.screenTop > window.screen.height)\n      ) {\n        htmlEl.classList.add(\"force_redraw\");\n        this.logService.info(\"Force redraw is on\");\n      }\n    };\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { LockGuard as BaseLockGuardService } from \"@bitwarden/angular/guards/lock.guard\";\n\n@Injectable()\nexport class LockGuardService extends BaseLockGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"@bitwarden/angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div class=\"box\">\n          <h1 class=\"box-header\">{{ \"passwordConfirmation\" | i18n }}</h1>\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appAutofocus\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"box-footer\">\n            {{ \"passwordConfirmationDesc\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"@bitwarden/angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\n\nexport class PopupSearchService extends SearchService {\n  constructor(\n    private mainSearchService: SearchService,\n    cipherService: CipherService,\n    consoleLogService: ConsoleLogService,\n    i18nService: I18nService\n  ) {\n    super(cipherService, consoleLogService, i18nService);\n  }\n\n  clearIndex() {\n    throw new Error(\"Not available.\");\n  }\n\n  indexCiphers(): Promise<void> {\n    throw new Error(\"Not available.\");\n  }\n\n  getIndexForSearch() {\n    return this.mainSearchService.getIndexForSearch();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { UnauthGuard as BaseUnauthGuardService } from \"@bitwarden/angular/guards/unauth.guard\";\n\n@Injectable()\nexport class UnauthGuardService extends BaseUnauthGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { APP_INITIALIZER, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { LockGuard as BaseLockGuardService } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard as BaseUnauthGuardService } from \"@bitwarden/angular/guards/unauth.guard\";\nimport { MEMORY_STORAGE, SECURE_STORAGE } from \"@bitwarden/angular/services/injection-tokens\";\nimport { JslibServicesModule } from \"@bitwarden/angular/services/jslib-services.module\";\nimport { ThemingService } from \"@bitwarden/angular/services/theming/theming.service\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileUploadService } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService as LoginServiceAbstraction } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { LoginService } from \"@bitwarden/common/services/login.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\n\nimport MainBackground from \"../../background/main.background\";\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { Account } from \"../../models/account\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { BrowserStateService as StateServiceAbstraction } from \"../../services/abstractions/browser-state.service\";\nimport { BrowserEnvironmentService } from \"../../services/browser-environment.service\";\nimport { BrowserOrganizationService } from \"../../services/browser-organization.service\";\nimport { BrowserPolicyService } from \"../../services/browser-policy.service\";\nimport { BrowserSettingsService } from \"../../services/browser-settings.service\";\nimport { BrowserStateService } from \"../../services/browser-state.service\";\nimport { BrowserFileDownloadService } from \"../../services/browserFileDownloadService\";\nimport BrowserMessagingService from \"../../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModePopupService from \"../../services/browserMessagingPrivateModePopup.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\n\nimport { DebounceNavigationService } from \"./debounceNavigationService\";\nimport { InitService } from \"./init.service\";\nimport { LockGuardService } from \"./lock-guard.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PopupSearchService } from \"./popup-search.service\";\nimport { PopupUtilsService } from \"./popup-utils.service\";\nimport { UnauthGuardService } from \"./unauth-guard.service\";\n\nconst needsBackgroundInit = BrowserApi.getBackgroundPage() == null;\nconst isPrivateMode = needsBackgroundInit && BrowserApi.manifestVersion !== 3;\nconst mainBackground: MainBackground = needsBackgroundInit\n  ? createLocalBgService()\n  : BrowserApi.getBackgroundPage().bitwardenMain;\n\nfunction createLocalBgService() {\n  const localBgService = new MainBackground(isPrivateMode);\n  localBgService.bootstrap();\n  return localBgService;\n}\n\nfunction getBgService<T>(service: keyof MainBackground) {\n  return (): T => {\n    return mainBackground ? (mainBackground[service] as any as T) : null;\n  };\n}\n\n@NgModule({\n  imports: [JslibServicesModule],\n  declarations: [],\n  providers: [\n    InitService,\n    DebounceNavigationService,\n    {\n      provide: LOCALE_ID,\n      useFactory: () => getBgService<I18nService>(\"i18nService\")().translationLocale,\n      deps: [],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    { provide: BaseLockGuardService, useClass: LockGuardService },\n    { provide: BaseUnauthGuardService, useClass: UnauthGuardService },\n    { provide: PopupUtilsService, useFactory: () => new PopupUtilsService(isPrivateMode) },\n    {\n      provide: MessagingService,\n      useFactory: () => {\n        return needsBackgroundInit\n          ? new BrowserMessagingPrivateModePopupService()\n          : new BrowserMessagingService();\n      },\n    },\n    {\n      provide: TwoFactorService,\n      useFactory: getBgService<TwoFactorService>(\"twoFactorService\"),\n      deps: [],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useFactory: getBgService<AuthService>(\"authService\"),\n      deps: [],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useFactory: (\n        cipherService: CipherService,\n        logService: ConsoleLogService,\n        i18nService: I18nService\n      ) => {\n        return new PopupSearchService(\n          getBgService<SearchService>(\"searchService\")(),\n          cipherService,\n          logService,\n          i18nService\n        );\n      },\n      deps: [CipherService, LogServiceAbstraction, I18nService],\n    },\n    { provide: AuditService, useFactory: getBgService<AuditService>(\"auditService\"), deps: [] },\n    {\n      provide: FileUploadService,\n      useFactory: getBgService<FileUploadService>(\"fileUploadService\"),\n      deps: [],\n    },\n    { provide: CipherService, useFactory: getBgService<CipherService>(\"cipherService\"), deps: [] },\n    {\n      provide: CryptoFunctionService,\n      useFactory: getBgService<CryptoFunctionService>(\"cryptoFunctionService\"),\n      deps: [],\n    },\n    {\n      provide: FolderService,\n      useFactory: getBgService<FolderService>(\"folderService\"),\n      deps: [],\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useFactory: getBgService<FolderApiServiceAbstraction>(\"folderApiService\"),\n      deps: [],\n    },\n    {\n      provide: CollectionService,\n      useFactory: getBgService<CollectionService>(\"collectionService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    {\n      provide: BrowserEnvironmentService,\n      useExisting: EnvironmentService,\n    },\n    {\n      provide: EnvironmentService,\n      useFactory: getBgService<EnvironmentService>(\"environmentService\"),\n      deps: [],\n    },\n    { provide: TotpService, useFactory: getBgService<TotpService>(\"totpService\"), deps: [] },\n    { provide: TokenService, useFactory: getBgService<TokenService>(\"tokenService\"), deps: [] },\n    { provide: I18nService, useFactory: getBgService<I18nService>(\"i18nService\"), deps: [] },\n    { provide: CryptoService, useFactory: getBgService<CryptoService>(\"cryptoService\"), deps: [] },\n    { provide: EventService, useFactory: getBgService<EventService>(\"eventService\"), deps: [] },\n    {\n      provide: PolicyService,\n      useFactory: (\n        stateService: StateServiceAbstraction,\n        organizationService: OrganizationService\n      ) => {\n        return new BrowserPolicyService(stateService, organizationService);\n      },\n      deps: [StateServiceAbstraction, OrganizationService],\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useFactory: getBgService<PolicyApiServiceAbstraction>(\"policyApiService\"),\n      deps: [],\n    },\n    {\n      provide: PlatformUtilsService,\n      useFactory: getBgService<PlatformUtilsService>(\"platformUtilsService\"),\n      deps: [],\n    },\n    {\n      provide: PasswordGenerationService,\n      useFactory: getBgService<PasswordGenerationService>(\"passwordGenerationService\"),\n      deps: [],\n    },\n    { provide: ApiService, useFactory: getBgService<ApiService>(\"apiService\"), deps: [] },\n    { provide: SyncService, useFactory: getBgService<SyncService>(\"syncService\"), deps: [] },\n    {\n      provide: SettingsService,\n      useFactory: (stateService: StateServiceAbstraction) => {\n        return new BrowserSettingsService(stateService);\n      },\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: AbstractStorageService,\n      useFactory: getBgService<AbstractStorageService>(\"storageService\"),\n      deps: [],\n    },\n    { provide: AppIdService, useFactory: getBgService<AppIdService>(\"appIdService\"), deps: [] },\n    {\n      provide: AutofillService,\n      useFactory: getBgService<AutofillService>(\"autofillService\"),\n      deps: [],\n    },\n    { provide: ExportService, useFactory: getBgService<ExportService>(\"exportService\"), deps: [] },\n    { provide: SendService, useFactory: getBgService<SendService>(\"sendService\"), deps: [] },\n    {\n      provide: KeyConnectorService,\n      useFactory: getBgService<KeyConnectorService>(\"keyConnectorService\"),\n      deps: [],\n    },\n    {\n      provide: UserVerificationService,\n      useFactory: getBgService<UserVerificationService>(\"userVerificationService\"),\n      deps: [],\n    },\n    {\n      provide: VaultTimeoutSettingsService,\n      useFactory: getBgService<VaultTimeoutSettingsService>(\"vaultTimeoutSettingsService\"),\n      deps: [],\n    },\n    {\n      provide: VaultTimeoutService,\n      useFactory: getBgService<VaultTimeoutService>(\"vaultTimeoutService\"),\n      deps: [],\n    },\n    {\n      provide: NotificationsService,\n      useFactory: getBgService<NotificationsService>(\"notificationsService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationService,\n      useFactory: (stateService: StateServiceAbstraction) => {\n        return new BrowserOrganizationService(stateService);\n      },\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultFilterService,\n      useFactory: () => {\n        return new VaultFilterService(\n          getBgService<StateServiceAbstraction>(\"stateService\")(),\n          getBgService<OrganizationService>(\"organizationService\")(),\n          getBgService<FolderService>(\"folderService\")(),\n          getBgService<CipherService>(\"cipherService\")(),\n          getBgService<CollectionService>(\"collectionService\")(),\n          getBgService<PolicyService>(\"policyService\")()\n        );\n      },\n      deps: [],\n    },\n    {\n      provide: ProviderService,\n      useFactory: getBgService<ProviderService>(\"providerService\"),\n      deps: [],\n    },\n    {\n      provide: SECURE_STORAGE,\n      useFactory: getBgService<AbstractStorageService>(\"secureStorageService\"),\n      deps: [],\n    },\n    {\n      provide: MEMORY_STORAGE,\n      useFactory: getBgService<AbstractStorageService>(\"memoryStorageService\"),\n    },\n    {\n      provide: StateMigrationService,\n      useFactory: getBgService<StateMigrationService>(\"stateMigrationService\"),\n      deps: [],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: (\n        storageService: AbstractStorageService,\n        secureStorageService: AbstractStorageService,\n        memoryStorageService: AbstractStorageService,\n        logService: LogServiceAbstraction,\n        stateMigrationService: StateMigrationService\n      ) => {\n        return new BrowserStateService(\n          storageService,\n          secureStorageService,\n          memoryStorageService,\n          logService,\n          stateMigrationService,\n          new StateFactory(GlobalState, Account)\n        );\n      },\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogServiceAbstraction,\n        StateMigrationService,\n      ],\n    },\n    {\n      provide: UsernameGenerationService,\n      useFactory: getBgService<UsernameGenerationService>(\"usernameGenerationService\"),\n      deps: [],\n    },\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateServiceAbstraction,\n      deps: [],\n    },\n    {\n      provide: FileDownloadService,\n      useClass: BrowserFileDownloadService,\n    },\n    {\n      provide: LoginServiceAbstraction,\n      useClass: LoginService,\n    },\n    {\n      provide: AbstractThemingService,\n      useFactory: (\n        stateService: StateServiceAbstraction,\n        platformUtilsService: PlatformUtilsService\n      ) => {\n        return new ThemingService(\n          stateService,\n          // Safari doesn't properly handle the (prefers-color-scheme) media query in the popup window, it always returns light.\n          // In Safari we have to use the background page instead, which comes with limitations like not dynamically changing the extension theme when the system theme is changed.\n          platformUtilsService.isSafari() ? getBgService<Window>(\"backgroundWindow\")() : window,\n          document\n        );\n      },\n      deps: [StateServiceAbstraction, PlatformUtilsService],\n    },\n  ],\n})\nexport class ServicesModule {}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { LayoutModule } from \"@angular/cdk/layout\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { CurrencyPipe, DatePipe, registerLocaleData } from \"@angular/common\";\nimport localeAr from \"@angular/common/locales/ar\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeEu from \"@angular/common/locales/eu\";\nimport localeFa from \"@angular/common/locales/fa\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLt from \"@angular/common/locales/lt\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTh from \"@angular/common/locales/th\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { BitwardenToastModule } from \"@bitwarden/angular/components/toastr.component\";\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { ActionButtonsComponent } from \"./components/action-buttons.component\";\nimport { CipherRowComponent } from \"./components/cipher-row.component\";\nimport { PasswordRepromptComponent } from \"./components/password-reprompt.component\";\nimport { PopOutComponent } from \"./components/pop-out.component\";\nimport { PrivateModeWarningComponent } from \"./components/private-mode-warning.component\";\nimport { SendListComponent } from \"./components/send-list.component\";\nimport { SetPinComponent } from \"./components/set-pin.component\";\nimport { UserVerificationComponent } from \"./components/user-verification.component\";\nimport { GeneratorComponent } from \"./generator/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"./send/efflux-dates.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { ServicesModule } from \"./services/services.module\";\nimport { AboutComponent } from \"./settings/about.component\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { VaultTimeoutInputComponent } from \"./settings/vault-timeout-input.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditCustomFieldsComponent } from \"./vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { VaultFilterComponent } from \"./vault/vault-filter.component\";\nimport { VaultSelectComponent } from \"./vault/vault-select.component\";\nimport { ViewCustomFieldsComponent } from \"./vault/view-custom-fields.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nregisterLocaleData(localeAr, \"ar\");\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeEu, \"eu\");\nregisterLocaleData(localeFa, \"fa\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLt, \"lt\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTh, \"th\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n\n@NgModule({\n  imports: [\n    A11yModule,\n    AppRoutingModule,\n    BitwardenToastModule.forRoot({\n      maxOpened: 2,\n      autoDismiss: true,\n      closeButton: true,\n      positionClass: \"toast-bottom-full-width\",\n    }),\n    BrowserAnimationsModule,\n    BrowserModule,\n    DragDropModule,\n    FormsModule,\n    JslibModule,\n    LayoutModule,\n    OverlayModule,\n    ReactiveFormsModule,\n    ScrollingModule,\n    ServicesModule,\n  ],\n  declarations: [\n    ActionButtonsComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AppComponent,\n    AttachmentsComponent,\n    CipherRowComponent,\n    CiphersComponent,\n    CollectionsComponent,\n    CurrentTabComponent,\n    EnvironmentComponent,\n    ExcludedDomainsComponent,\n    ExportComponent,\n    FolderAddEditComponent,\n    FoldersComponent,\n    VaultFilterComponent,\n    HintComponent,\n    HomeComponent,\n    LockComponent,\n    LoginComponent,\n    OptionsComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordHistoryComponent,\n    PasswordRepromptComponent,\n    PopOutComponent,\n    PremiumComponent,\n    PrivateModeWarningComponent,\n    RegisterComponent,\n    SendAddEditComponent,\n    SendEffluxDatesComponent,\n    SendGroupingsComponent,\n    SendListComponent,\n    SendTypeComponent,\n    SetPasswordComponent,\n    SetPinComponent,\n    SettingsComponent,\n    ShareComponent,\n    SsoComponent,\n    SyncComponent,\n    TabsComponent,\n    TwoFactorComponent,\n    TwoFactorOptionsComponent,\n    UpdateTempPasswordComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    ViewComponent,\n    ViewCustomFieldsComponent,\n    RemovePasswordComponent,\n    VaultSelectComponent,\n    AboutComponent,\n  ],\n  providers: [CurrencyPipe, DatePipe],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nrequire(\"./scss/popup.scss\");\n\nimport { AppModule } from \"./app.module\";\n\nif (process.env.ENV === \"production\") {\n  enableProdMode();\n}\n\nfunction init() {\n  platformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n}\n\ninit();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + \"encrypt-worker\" + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t347: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_browser\"] = self[\"webpackChunk_bitwarden_browser\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [286,902], () => (__webpack_require__(34356)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","remove","BitwardenToast","constructor","toastrService","toastPackage","super","opacity","BitwardenToastGlobalConfig","toastComponent","BitwardenToastModule","static","config","ngModule","providers","provide","useValue","default","numberFormats","Visa","cardLength","blocks","Mastercard","Maestro","Discover","JCB","UnionPay","Amex","Mir","Other","CreditCardNumberPipe","transform","creditCardNumber","brand","rules","length","matchingRule","find","r","chunks","total","forEach","c","push","slice","join","I18nService","I18nPipe","i18nService","id","p1","p2","p3","this","t","SearchPipe","items","searchText","prop1","prop2","prop3","trim","toLowerCase","filter","i","toString","indexOf","UserNamePipe","user","name","email","JslibModule","forRoot","maxOpened","autoDismiss","closeButton","AuthenticationStatus","AuthService","MessagingService","KeyConnectorService","AuthGuard","authService","router","messagingService","keyConnectorService","canActivate","route","routerState","authStatus","getAuthStatus","LoggedOut","send","url","Locked","createUrlTree","queryParams","promptBiometric","includes","getConvertAccountRequired","LockGuard","homepage","loginpage","redirectUrl","UnauthGuard","PlatformUtilsService","EnvironmentService","platformUtilsService","environmentService","onSaved","showCustom","urls","getUrls","baseUrl","base","webVaultUrl","webVault","apiUrl","api","identityUrl","identity","iconsUrl","icons","notificationsUrl","notifications","submit","resUrls","setUrls","showToast","saved","toggleCustom","emit","EnvironmentUrls","events","keyConnector","obj","Object","assign","stateService","urlsSubject","Subject","scimUrl","activeAccount$","pipe","concatMap","setUrlsFromStorage","subscribe","hasBaseUrl","getNotificationsUrl","getWebVaultUrl","getSendUrl","getIconsUrl","getApiUrl","getIdentityUrl","getEventsUrl","eventsUrl","getKeyConnectorUrl","keyConnectorUrl","getScimUrl","getEnvironmentUrls","envUrls","formatUrl","scim","setEnvironmentUrls","next","replace","startsWith","isCloud","getFlags","envFlags","JSON","parse","flagEnabled","flag","flags","EncryptionType","BrowserEnvironmentService","logService","hasManagedEnvironment","getManagedEnvironment","e","error","settingsHaveChanged","env","Promise","resolve","reject","chrome","storage","managed","get","result","runtime","lastError","environment","setUrlsToManagedEnvironment","BoxRowDirective","elRef","el","nativeElement","ngOnInit","formEls","Array","from","querySelectorAll","formEl","addEventListener","classList","add","onClick","event","target","contains","tagName","inputEl","type","click","focus","nodeURL","window","inited","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","self","str","Uint8Array","Buffer","binaryString","atob","bytes","charCodeAt","fromB64ToArray","fromUrlB64ToB64","parseInt","substr","strUtf8","unescape","encodeURIComponent","arr","buffer","binary","byteLength","String","fromCharCode","btoa","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","apply","decodeURIComponent","escape","prototype","map","call","x","urlB64Str","output","Error","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","Math","random","RegExp","test","uriString","isNullOrWhitespace","hostname","validHosts","getUrl","host","parseResult","isIp","domain","search","Map","split","pair","parts","set","prop","a","b","collator","compare","localeCompare","undefined","source","keys","k","Number","isNaN","getUrlObject","s","charAt","toUpperCase","bgColor","threshold","svgTextFill","bgColorHexNums","substring","hash","color","bitwardenContainerService","fromEntries","record","entries","destination","win","mobile","navigator","userAgent","vendor","opera","match","URL","hasProtocol","anchor","document","createElement","href","regexpEmojiPresentation","init","EncString","encryptedStringOrType","data","iv","mac","initFromData","initFromEncryptedString","ivBytes","macBytes","dataBytes","toJSON","encryptedString","encType","encryptionType","encPieces","parseEncryptedString","AesCbc128_HmacSha256_B64","AesCbc256_HmacSha256_B64","AesCbc256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","headerPieces","decrypt","orgId","key","decryptedValue","getKeyForDecryption","encryptService","getEncryptService","decryptToUtf8","cryptoService","getCryptoService","getOrgKey","getKeyForUserEncryption","Domain","buildDomainModel","dataObj","notEncList","hasOwnProperty","objProp","buildDataModel","notEncStringList","decryptObj","viewModel","promises","theProp","p","then","mapProp","val","all","MasterPasswordPolicyOptions","minComplexity","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","CalloutComponent","useAlertRole","calloutStyle","enforcedPolicyMessage","title","icon","getPasswordScoreAlertDisplay","enforcedPolicyOptions","InputVerbatimDirective","renderer","appInputVerbatim","condition","disableComplete","hasAttribute","setAttribute","StopClickDirective","$event","preventDefault","resetEnvironment","EnvironmentComponent","showEditedManagedSettings","navigate","PasswordHintRequest","ApiService","LogService","LoginService","apiService","loginService","successRoute","getEmail","formPromise","postPasswordHint","onSuccessfulSubmit","ValidationService","ApiActionDirective","validationService","ngOnChanges","changes","appApiAction","loading","response","captchaRequired","getSingleMessage","showError","AutofocusDirective","ngZone","appAutofocus","autofocus","isStable","onStable","take","HintComponent","StateService","HomeComponent","formBuilder","loginInitiated","formGroup","group","getRememberedEmail","patchValue","markAllAsTouched","invalid","setRememberedEmail","value","selfHostedDomain","HashPurpose","KeySuffixOptions","SecretVerificationRequest","CryptoService","VaultTimeoutService","VaultTimeoutSettingsService","vaultTimeoutService","vaultTimeoutSettingsService","masterPassword","pin","showPassword","pinLock","webVaultHostname","invalidPinAttempts","destroy$","load","takeUntil","ngOnDestroy","complete","handlePinRequiredUnlock","handleMasterPasswordRequiredUnlock","logOut","showDialog","unlockBiometric","biometricLock","success","getKey","Biometric","doContinue","togglePassword","input","getElementById","doUnlockWithPin","failed","kdf","getKdfType","kdfIterations","getKdfIterations","pinSet","makeKeyFromPin","getDecryptedPinProtected","encKey","getEncKey","protectedPin","getProtectedPin","setKeyAndContinue","doUnlockWithMasterPassword","makeKey","passwordValid","getKeyHash","compareAndUpdateKeyHash","request","serverKeyHash","hashPassword","ServerAuthorization","masterPasswordHash","postAccountVerifyPassword","localKeyHash","LocalAuthorization","setKeyHash","decPin","pinKey","makePinKey","setDecryptedPinProtected","encrypt","setKey","setEverBeenUnlocked","disableFavicon","getDisableFavicon","setDisableFavicon","isPinLockSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricText","getBiometricText","usesKeyConnector","getUsesKeyConnector","hideInput","vaultUrl","BiometricErrors","startDesktop","description","desktopIntegrationDisabled","A11yTitleDirective","appA11yTitle","ClientType","DeviceType","SafariApp","command","resolveNow","BrowserApi","isSafariApi","messageId","Date","getTime","floor","MAX_SAFE_INTEGER","browser","sendNativeMessage","responseData","DialogPromiseExpiration","BrowserPlatformUtilsService","clipboardWriteCallback","biometricCallback","showDialogResolves","passwordDialogResolves","deviceCache","getDevice","isFirefox","FirefoxExtension","isOpera","OperaExtension","isEdge","EdgeExtension","isVivaldi","VivaldiExtension","isChrome","ChromeExtension","isSafari","SafariExtension","getDeviceString","getClientType","Browser","opr","addons","isIE","isMacAppStore","isViewOpen","isPopupOpen","sidebarView","sidebarViewName","extension","getViews","lockTimeout","launchUri","uri","options","createNewTab","extensionPage","getApplicationVersion","getApplicationVersionNumber","supportsWebAuthn","PublicKeyCredential","supportsDuo","text","body","confirmText","cancelText","bodyIsHtml","dialogId","html","date","isDev","isSelfHost","copyToClipboard","doc","clearing","clearMs","sendMessageToApp","clipboard","writeText","clipboardData","setData","queryCommandSupported","textarea","textContent","style","position","appendChild","select","execCommand","console","warn","removeChild","readFromClipboard","readText","resolveDialogPromise","confirmed","has","delete","resolvePasswordDialogPromise","canceled","password","resolveObj","tryResolve","getPlatformInfo","os","getBrowserInfo","version","authenticateBiometric","sidebarAction","manifestVersion","getManifest","manifest_version","tabsQueryFirst","active","windowId","windows","WINDOW_ID_CURRENT","tabId","tabs","currentWindow","tabsQuery","query","tab","tabSendMessage","sendMessage","message","responseCallback","getAll","incognito","callback","onCreated","addListener","getBackgroundPage","create","onMessage","msg","sender","subscriber","arg","windowType","tabToClose","update","highlighted","isWebExtensionsApi","isFirefoxOnAndroid","finally","close","i18n","getUILanguage","location","reload","w","application","connectNative","isChromeApi","permission","permissions","action","browserAction","PopupUtilsService","privateMode","inSidebar","inTab","inPopout","inPopup","inPrivateMode","getContentScrollY","scrollingContainer","getElementsByTagName","scrollTop","setContentScrollY","scrollY","popOut","hrefParts","bodyRect","querySelector","getBoundingClientRect","width","round","height","closePopup","PrivateModeWarningComponent","popupUtilsService","showWarning","LockComponent","pendingBiometric","isInitialLockScreen","previousPopupUrl","disableAutoBiometricsPrompt","getDisableAutoBiometricsPrompt","setTimeout","biometricError","AuthenticationType","PasswordLogInCredentials","captchaToken","twoFactor","SsoLogInCredentials","code","codeVerifier","CaptchaIFrame","path","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","bind","connectorLink","stop","start","iframe","src","contentWindow","postMessage","base64Encode","cleanup","removeEventListener","createParams","URLSearchParams","stringify","parent","v","initComponent","params","validMessage","origin","parsedMessage","siteKey","locale","translationLocale","CaptchaProtectedComponent","captchaSiteKey","setupCaptcha","captcha","token","info","showCaptcha","handleCaptchaRequired","AppIdService","PasswordGenerationService","CryptoFunctionService","FormValidationErrorsService","appIdService","passwordGenerationService","cryptoFunctionService","formValidationErrorService","selfHosted","validatedEmail","paramEmailSet","rememberEmail","twoFactorRoute","forcePasswordResetRoute","alwaysRememberEmail","skipRememberEmail","loggedEmail","queryParamsEmail","setValue","getRememberEmail","validateEmail","errorText","getErrorToastMessage","credentials","logIn","setFormValues","requiresTwoFactor","onSuccessfulLoginTwoFactorNavigate","forcePasswordReset","onSuccessfulLoginForceResetNavigate","clearValues","onSuccessfulLogin","onSuccessfulLoginNavigate","launchSsoBrowser","clientId","ssoRedirectUri","passwordOptions","uppercase","lowercase","numbers","special","state","generatePassword","ssoCodeVerifier","codeVerifierHash","codeChallenge","setSsoState","setSsoCodeVerifier","webUrl","controls","markAsTouched","toggleValidateEmail","getLoginWithDevice","reset","setEmail","setRememberEmail","getFormValidationErrors","shift","errorName","errorTag","controlName","deviceIdentifier","getAppId","res","getKnownDevice","showLoginWithDevice","SyncService","LoginComponent","syncService","fullSync","settings","redirectUri","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","KeysRequest","publicKey","encryptedPrivateKey","RegisterRequest","masterPasswordHint","referenceData","captchaResponse","InputsFieldMatch","matchTo","errorMessage","control","inputsMatchError","inputsDoesntMatchError","field","fieldMatchTo","fieldCtrl","fieldMatchToCtrl","setErrors","isInTrialFlow","createdAccount","showTerms","showErrorSummary","confirmMasterPassword","hint","validateInputsDoesntMatch","acceptPolicies","acceptPoliciesValidation","validator","validateFormInputsMatch","accountCreated","captchaBypassToken","registerResponse","registerAccount","buildRegisterRequest","successful","getStrengthResult","passwordStrengthResult","getPasswordScoreText","required","validateRegistration","hasError","isValid","score","makeEncKey","hashedPassword","makeKeyPair","orgInvite","getOrganizationInvitation","organizationUserId","postRegister","loginResponse","PasswordStrengthComponent","showText","passwordScoreColor","scoreWidth","updatePasswordStrength","masterPasswordScoreColor","masterPasswordScore","masterPasswordScoreText","masterPasswordStrengthTimeout","setPasswordScoreText","clearTimeout","strengthResult","passwordStrength","getPasswordStrengthUserInput","userInput","atPosition","concat","RegisterComponent","OrganizationApiServiceAbstraction","organizationApiService","continuing","leaving","organization","getManagingOrganization","convert","actionPromise","migrateUser","removeConvertAccountRequired","leave","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","orgIdentifier","PolicyService","ChangePasswordComponent","policyService","masterPasswordPolicyOptions$","enforcedPasswordPolicyOptions","strongPassword","setupSubmitActions","remakeEncKey","performSubmitActions","masterPasswordRetype","evaluateMasterPassword","PolicyApiServiceAbstraction","policyApiService","syncLoading","identifier","resetPasswordAutoEnroll","first","qParams","getAutoEnrollStatus","resetPasswordEnabled","getMasterPasswordPoliciesForInvitedUsers","setPassword","onSetPasswordSuccess","getKeys","userId","getUserId","userEncKey","encryptedKey","rsaEncrypt","resetRequest","resetPasswordKey","putOrganizationUserResetPasswordEnrollment","onSuccessfulChangePassword","confirmField","setKdfType","setKdfIterations","setEncKey","setEncPrivateKey","SetPasswordComponent","loggingIn","changePasswordRoute","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidateSso","authorizeUrl","buildAuthorizeUrl","sameWindow","userIdentifier","getSsoUserIdentifier","orgIdFromState","sso","resetMasterPassword","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","SsoComponent","Unlocked","reloadOpenWindows","open","TwoFactorService","twoFactorService","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","Window","TwoFactorOptionsComponent","setSelectedProvider","TwoFactorProviderType","WebAuthnIFrame","webAuthnNewTab","btnText","append","allow","TokenTwoFactorRequest","provider","remember","TwoFactorEmailRequest","TwoFactorProviders","Authenticator","priority","sort","premium","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","selectedTwoFactorProviderType","twoFactorProvidersData","getDefaultProvider","webAuthnSupported","providerType","providerPriority","_value","clearSelectedProvider","setProviders","twoFactorProviders2","clearProviders","getProviders","webAuthnReady","selectedProviderType","webAuthn","twoFactorEmail","loginRoute","webAuthnAllow","authing","needsLock","cleanupWebAuthn","providerData","authWebAuthn","Host","sig_request","Signature","submit_callback","f","sig","size","sendEmail","doSubmit","logInTwoFactor","doToast","emailPromise","authRequestAccessCode","accessCode","authRequestId","postTwoFactorEmail","authingWithPassword","authingWithSso","authingWithApiKey","authingWithPasswordless","BroadcasterService","anotherMethod","TwoFactorComponent","broadcasterService","showNewWindowMessage","snapshot","paramMap","isLinux","unsubscribe","UpdateTempPasswordRequest","newKey","newPasswordHash","newEncKey","newMasterPasswordHash","putUpdateTempPassword","UpdateTempPasswordComponent","UsernameGenerationService","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","username","showOptions","avoidAmbiguous","usernameWebsite","typeOptions","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","forwardOptions","passwordOptionsResponse","getOptions","ambiguous","subaddressEmail","subaddressType","catchallType","website","websiteOption","generatorOptions","getGeneratorOptions","regenerateWithoutButtonPress","regenerate","typeChanged","setGeneratorOptions","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","addHistory","sliderInput","normalizePasswordOptions","saveOptions","saveUsernameOptions","generateUsername","usernameGeneratingPromise","copy","copyOptions","toggleOptions","number","checked","normalizeOptions","SelectCopyDirective","onCopy","copyText","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","expand","PopOutComponent","show","ColorPasswordPipe","generateTemplate","character","templateGenerator","passwordArray","colorizedPassword","isSpecial","GeneratorComponent","addEditCipherInfo","getAddEditCipherInfo","cipherState","cipher","login","hasUris","uris","setAddEditCipherInfo","back","PolicyType","SendType","history","getHistory","clear","PasswordGeneratorHistoryComponent","SendFileView","sizeName","fileName","fileSize","json","SendTextView","hidden","maskedText","SymmetricCryptoKey","macKey","keyB64","encKeyB64","macKeyB64","arrayBuffer","SendView","accessId","notes","file","maxAccessCount","accessCount","revisionDate","deletionDate","expirationDate","disabled","hideEmail","urlB64Key","maxAccessCountReached","expired","pendingDelete","cryptoKey","fromJSON","SendService","BrowserPath","DateField","DatePreset","AddEditComponent","datePipe","sendService","onSavedSend","onDeletedSend","onCancelled","copyLink","disableSend","disableHideEmail","sendType","canAccessPremium","emailVerified","alertShown","File","Text","sendLinkBaseUrl","link","isDateTimeLocalSupported","policyAppliesToActiveUser$","DisableSend","policyAppliesToActiveUser","SendOptions","editMode","sendId","setDates","getCanAccessPremium","getEmailVerified","loadSend","setDate","getDate","hasPassword","files","encryptSend","encSend","uploadPromise","saveWithServer","copySuccess","copyLinkToClipboard","deletePromise","deleteWithServer","sendData","togglePasswordVisible","BrowserStateService","datesChanged","datesForm","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","Never","browserPath","Firefox","Safari","Default","formattedDeletionDate","now","miliseconds","setTime","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toISOString","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","h","m","hour","minutes","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","popOutWindow","EffluxDatesComponent","useExisting","SendAddEditComponent","isUnsupportedMac","showFileSelector","showFilePopoutMessage","showFirefoxFileWarning","showSafariFileWarning","showChromiumFileWarning","appVersion","cancel","SearchService","indexedEntityId","SendComponent","searchService","loaded","refreshing","sends","filteredSends","searchPending","hasSearched","getAllDecrypted","onSuccessfulLoad","selectAll","refresh","applyFilter","timeout","searchTimeout","isSearchable","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","searchTextChanged","clearSelections","selectedAll","selectType","selectedType","searchSends","BrowserComponentState","BrowserSendComponentState","typeCounts","StopPropDirective","stopPropagation","selectSend","copySendLink","SendListComponent","disabledByPolicy","onCopySendLink","onRemovePassword","onDeleteSend","addSend","ComponentId","SendGroupingsComponent","popupUtils","changeDetectorRef","showLeftHeader","calculateTypeCounts","setBrowserSendTypeComponentState","restoredScopeState","restoreState","syncInProgress","loadedTimeout","run","detectChanges","saveState","showSearching","setBrowserSendComponentState","getBrowserSendComponentState","SendTypeComponent","applySavedState","getBrowserSendTypeComponentState","groupingTitle","successfully","refreshTimeout","routeDirection","DebounceNavigationService","navigationStartSub","pairwise","lastNavigation","thisNavigation","navigationSuccessSub","lastNavigationSuccessId","navigationTrigger","toggleUriInput","removeUri","ExcludedDomainsComponent","excludedDomains","existingExcludedDomains","savedDomains","getNeverDomains","showCurrentUris","loadCurrentUris","loadCurrentUrisTimeout","addUri","splice","newExcludedDomains","getNewlyAddedDomians","validDomain","setNeverDomains","trackByFunction","index","item","newDomain","some","oldDomain","uriSet","Set","currentUris","EncryptedExportType","EventType","ExportService","EventService","UserVerificationService","FileDownloadService","exportService","eventService","userVerificationService","fileDownloadService","exportForm","format","secret","filePassword","confirmFilePassword","fileEncryptionType","AccountEncrypted","formatOptions","DisablePersonalVaultExport","checkExportDisabled","merge","startWith","adjustValidators","disable","encryptedFormat","doExport","getExportData","downloadFile","collectEvent","clearValidators","warningDialog","verifyUser","FileEncrypted","getPasswordProtectedExport","getExport","getFileName","prefix","collect","User_ClientExportedVault","toggleFilePassword","showFilePassword","toggleConfirmFilePassword","showConfirmFilePassword","enable","csv","download","blobData","blobOptions","isNotProviderUser","org","isProviderUser","OrganizationService","VerificationType","ExportScopeCalloutComponent","organizationService","organizationId","hasOrganizations","scopeConfig","scopeIdentifier","requestOTP","disableRequestOTP","sentCode","processChanges","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","OTP","MasterPassword","multi","UserVerificationComponent","ExportComponent","FolderView","FolderService","FolderApiServiceAbstraction","folderService","folderApiService","onSavedFolder","onDeletedFolder","folder","save","folderId","FolderAddEditComponent","ThemeType","UriMatchType","folderSelected","FoldersComponent","folders$","folderViews$","folders","addFolder","TotpService","AbstractThemingService","saveClearClipboard","saveDefaultUriMatch","updateAutoTotpCopy","updateAddLoginNotification","updateChangedPasswordNotification","updateContextMenuItem","updateShowCardsCurrentTab","updateShowIdentitiesCurrentTab","updateFavicon","updateBadgeCounter","saveTheme","updateAutoFillOnPageLoad","updateAutoFillOnPageLoadDefault","OptionsComponent","totpService","themingService","enableFavicon","enableBadgeCounter","enableAutoFillOnPageLoad","autoFillOnPageLoadDefault","enableAutoTotpCopy","enableContextMenuItem","enableAddLoginNotification","enableChangedPasswordNotification","showCardsCurrentTab","showIdentitiesCurrentTab","showClearClipboard","defaultUriMatch","showGeneral","showAutofill","showDisplay","themeOptions","System","Light","Dark","Nord","SolarizedDark","uriMatchOptions","StartsWith","RegularExpression","Exact","clearClipboardOptions","autoFillOnPageLoadOptions","getEnableAutoFillOnPageLoad","getAutoFillOnPageLoadDefault","getDisableAddLoginNotification","getDisableChangedPasswordNotification","getDisableContextMenuItem","getDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","getDisableAutoTotpCopy","getDisableBadgeCounter","theme","getTheme","getDefaultUriMatch","clearClipboard","getClearClipboard","setDisableAddLoginNotification","setDisableChangedPasswordNotification","setDisableContextMenuItem","setDisableAutoTotpCopy","setEnableAutoFillOnPageLoad","setAutoFillOnPageLoadDefault","setDisableBadgeCounter","setDontShowCardsCurrentTab","setDontShowIdentitiesCurrentTab","updateConfiguredTheme","setDefaultUriMatch","setClearClipboard","isPremium","price","refreshPromise","refreshIdentityToken","purchase","manage","PremiumComponent","currencyPipe","thePrice","priceString","goBack","ModalRef","_onCreated","_onClose","_onClosed","_onShow","_onShown","asObservable","onClose","onClosed","onShow","onShown","shown","lastResult","closed","created","onClosedPromise","toPromise","DynamicModalComponent","modalService","cd","focusTrapFactory","modalRef","ngAfterViewInit","loadChildComponent","childComponentType","setComponentParameters","componentRef","instance","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","resolveComponentFactory","modalContentRef","createComponent","destroy","getFocus","autoFocusEl","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","ModalConfig","ModalService","componentFactoryResolver","applicationRef","injector","modalList","factoryResolvers","modalCount","topModal","openViewRef","viewContainerRef","modalComponentRef","openInternal","insert","hostView","replaceTopModal","allowMultipleModals","registerComponentFactoryResolver","closeAll","modal","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","pop","setupHandlers","backdrop","modalEl","dialogEl","className","zIndex","prepend","modals","closeElement","WeakMap","showPin","masterPassOnRestart","showMasterPassOnRestart","toggleVisibility","pinProtectedKey","encPin","setProtectedPin","setEncryptedPinProtected","SetPinComponent","ConfigServiceAbstraction","AboutComponent","configService","year","getFullYear","serverConfig$","form","vaultTimeout","custom","hours","CUSTOM_VALUE","exceedsMinimumTimout","customTimeInMinutes","MIN_CUSTOM_MINUTES","MaximumVaultTimeout","combineLatestWith","policies$","policies","vaultTimeoutPolicy","policy","enabled","applyVaultTimeoutPolicy","getVaultTimeout","current","max","vaultTimeouts","every","onTouched","validate","policyError","minTimeoutError","registerOnValidatorChange","validatorChange","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","VaultTimeoutInputComponent","updateBiometric","updateAutoBiometricsPrompt","changePassword","RateUrls","SettingsComponent","biometric","enableAutoBiometricsPrompt","previousVaultTimeout","showChangeMasterPass","showOnLocked","vaultTimeoutActions","saveVaultTimeout","getVaultTimeoutAction","vaultTimeoutAction","newValue","setVaultTimeoutOptions","saveVaultTimeoutAction","option","vaultTimeoutActionSelectRef","updatePin","ref","clearPinProtectedKey","granted","requestPermission","submitted","heightAuto","buttonsStyling","titleText","iconHtml","showCancelButton","cancelButtonText","showConfirmButton","allowOutsideClick","setBiometricAwaitingAcceptance","toggleKey","race","dismiss","catch","setBiometricUnlock","setBiometricFingerprintValidated","setDisableAutoBiometricsPrompt","lock","twoStep","share","import","export","help","about","fingerprint","getFingerprint","innerText","div","confirmButtonText","rate","deviceType","CipherRepromptType","CipherType","OrganizationUserStatusType","SecureNoteType","LoginLinkedId","CardLinkedId","IdentityLinkedId","SyncComponent","lastSync","setLastSync","sync","syncPromise","last","getLastSync","toLocaleDateString","toLocaleTimeString","TabsComponent","showCurrentTab","LinkedMetadata","propertyKey","_i18nKey","i18nKey","linkedFieldOption","linkedFieldOptions","ItemView","InitializerKey","CardView","cardholderName","expMonth","expYear","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","subTitle","count","expiration","exp","formatYear","AttachmentView","FieldView","newField","showValue","showCount","linkedId","maskedValue","IdentityView","middleName","address1","address2","address3","city","postalCode","country","company","phone","ssn","passportNumber","licenseNumber","_firstName","_lastName","firstName","lastName","fullName","fullAddress","address","fullAddressPart2","addressPart2","CanLaunchWhitelist","LoginUriView","u","_uri","_domain","_hostname","_host","_canLaunch","hostnameOrUri","hostOrUri","isWebsite","canLaunch","LoginView","l","passwordRevisionDate","totp","autofillOnPageLoad","maskedPassword","hasTotp","PasswordHistoryView","ph","lastUsedDate","SecureNoteView","n","CipherView","initializerKey","favorite","organizationUseTotp","edit","viewPassword","card","secureNote","attachments","fields","passwordHistory","collectionIds","creationDate","deletedDate","reprompt","None","localData","Login","SecureNote","Card","Identity","hasPasswordHistory","hasAttachments","hasOldAttachments","hasFields","passwordRevisionDisplayDate","isDeleted","linkedFieldValue","linkedFieldI18nKey","view","CipherService","AuditService","CollectionService","PasswordRepromptService","FieldType","cipherService","auditService","collectionService","passwordRepromptService","cloneMode","onSavedCipher","onDeletedCipher","onRestoredCipher","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","collections","showCardNumber","showCardCode","cipherType","ownershipOptions","currentDate","allowPersonal","canUseReprompt","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","autofillOnPageLoadOptions","PersonalOwnership","personalOwnershipPolicyAppliesToActiveUser","myEmail","o","status","Confirmed","writeableCollections","loadCollections","cipherId","loadCipher","Generic","organizationChanged","previousCipherId","Cipher_ClientViewed","restore","encryptCipher","saveCipher","getCardExpMonthDisplay","editCollections","deleteCipher","restorePromise","restoreCipher","Cipher_ClientToggledPasswordVisible","toggleCardNumber","Cipher_ClientToggledCardNumberVisible","toggleCardCode","Cipher_ClientToggledCardCodeVisible","toggleUriOptions","loginUriMatchChanged","useTotp","checkPassword","checkPasswordPromise","passwordLeaked","matches","repromptChanged","Password","readOnly","createWithServer","updateWithServer","softDeleteWithServer","restoreWithServer","addFieldType","fieldType","eventType","addFieldTypeOptions","Hidden","Boolean","addFieldLinkedTypeOption","Linked","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","removeField","toggleFieldValue","Cipher_ClientToggledHiddenFieldVisible","drop","previousIndex","currentIndex","TrueFalseValueDirective","elementRef","trueValue","falseValue","propagateChange","_","onHostChange","ev","setProperty","AddEditCustomFieldsComponent","showAttachments","collectionId","collection","selectedVault","openAttachmentsInPopup","showAutoFillOnPageLoadOptions","destinationUrl","currentBaseUrl","saveCipherState","allowOwnershipOptions","EncArrayBuffer","encBytes","minimumLength","ENC_TYPE_LENGTH","throwDecryptionError","b64","BaseResponse","getResponseProperty","propertyName","exactName","otherCasePropertyName","ErrorResponse","identityResponse","errorModel","responseErrorModel","validationErrors","HCaptcha_SiteKey","statusCode","getAllMessages","messages","lastSep","lastIndexOf","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","fileEl","saveCipherAttachment","cipherDomain","attachment","deleteCipherAttachment","downloading","canAccessAttachments","getAttachmentData","fetch","Request","cache","encBuf","fromResponse","decBuf","decryptFromBytes","hasEncKey","reuploadCipherAttachment","admin","saveAttachmentRawWithServer","foundAttachment","a2","saveAttachmentWithServer","attachmentId","deleteAttachmentWithServer","AttachmentsComponent","openedAttachmentsInPopup","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","ciphers","searchPlaceholder","deleted","deletedFilter","indexedCiphers","doSearch","selectCipher","rightClickCipher","addCipher","addCipherOptions","isSearching","searchCiphers","VaultFilter","selectedCollection","selectedFolder","myVaultOnly","refreshCollectionsAndFolders","resetFilter","selectedCollectionId","selectedFolderId","resetOrganization","selectedOrganizationId","buildFilter","cipherPassesFilter","TreeNode","node","children","ServiceUtils","nodeTree","partIndex","delimiter","end","partName","nestedTraverse","newPartName","getTreeNodeObject","DynamicTreeNode","hasId","fullList","storeCollapsedFilterNodes","collapsedFilterNodes","setCollapsedGroupings","buildCollapsedFilterNodes","getCollapsedGroupings","buildOrganizations","organizations","buildNestedFolders","transformation","storedFolders","orgCiphers","oc","nestedFolders","getAllFoldersNested","nestedList","mergeMap","buildCollections","storedCollections","nestedCollections","getAllNested","checkForSingleOrganizationPolicy","firstValueFrom","SingleOrg","checkForPersonalOwnershipPolicy","nodes","folderCopy","getFolderNested","VaultFilterService","vaultFilter","allVaults","myVault","getVaultFilter","setVaultFilter","filterCipherForSelectedVault","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","RuPay","IconComponent","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","launchCipher","ActionButtonsComponent","onView","launchEvent","showView","userHasPremiumAccess","typeI18nKey","aType","protectedFields","showPasswordPrompt","displayTotpCopyButton","getCode","Cipher_ClientCopiedCardCode","CipherRowComponent","viewCipher","EllipsisPipe","limit","completeWords","ellipsis","openOverlay","selectMyVault","selectOrganization","selectAllVaults","VaultSelectComponent","vaultFilterService","overlay","onVaultSelectionChanged","_selectedVault","BehaviorSubject","isOpen","selectedVault$","enforcePersonalOwnership","overlayPostition","originX","originY","overlayX","overlayY","_destroy","shouldShow","handleKeyboardEvent","organizations$","orgs","firstOrganization","selectedOrganization","viewPortHeight","documentElement","clientHeight","innerHeight","positionStrategy","flexibleConnectedTo","buttonRef","withFlexibleDimensions","withPush","withViewportMargin","withGrowAfterOpen","withPositions","overlayRef","hasBackdrop","maxHeight","backdropClass","scrollStrategy","scrollStrategies","templatePortal","templateRef","attach","outsidePointerEvents","backdropClick","detachments","dispose","changeVaultSelection","selectFolder","selectCollection","CiphersComponent","searchTypeSearch","showOrganizations","noneFolder","showVaultFilter","preventSelected","getBrowserCipherComponentState","folderNode","collectionNode","getNested","setBrowserCipherComponentState","selectedTimeout","updateLastLaunchedDate","showGroupings","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","saveCollectionsWithServer","CollectionsComponent","AutofillService","fillCipher","CurrentTabComponent","autofillService","pageDetails","isLoading","search$","frameId","webExtSender","details","debounceTime","searchVault","totpCode","totpTimeout","doAutoFill","fillNewPassword","closeOnEsc","getTabFromCurrentWindow","loginCiphers","otherTypes","dontShowCards","dontShowIdentities","getAllDecryptedForUrl","cardCiphers","identityCiphers","sortCiphersByLastUsedThenName","decCipher","PasswordHistoryComponent","isChecked","onSharedCipher","allCollections","filterCollections","cipherView","orgName","shareWithServer","canSave","ShareComponent","replaceUrl","BrowserGroupingsComponentState","collectionCounts","folderCounts","favoriteCiphers","noFolderCiphers","selectTrash","VaultFilterComponent","browserStateService","deletedCount","showCollections","noFolderListSize","hasLoadedAllCiphers","allCiphers","showNoFolderCiphers","folderCount","getBrowserGroupingComponentState","replaceState","updateSelectedOrg","loadCollectionsAndFolders","loadCiphers","getCounts","loadFolders","allFolders","filterDeleted","vaultFilterChanged","colId","setBrowserGroupingComponentState","TokenService","tokenService","onEditCipher","onCloneCipher","passwordReprompted","cleanUp","showPremiumRequiredTotp","totpUpdateCode","interval","getTimeInterval","totpTick","totpInterval","setInterval","promptPassword","clone","showPasswordCount","togglePasswordCount","launch","Cipher_ClientCopiedHiddenField","setTextDataOnDrag","dataTransfer","downloadAttachment","clearInterval","half","totpCodeFormatted","intervalSeconds","mod","totpSec","totpDash","totpLow","toggleFieldCount","ColorPasswordCountPipe","colorizedPasswordCount","ViewCustomFieldsComponent","fillCipherAndSave","ViewComponent","loadPageDetailsTimeout","loadPageDetails","doAutofill","loginUri","routes","redirectTo","pathMatch","component","runGuardsAndResolvers","NoRouteReuseStrategy","shouldDetach","store","handle","shouldAttach","retrieve","shouldReuseRoute","future","curr","AppRoutingModule","useClass","useHash","onSameUrlNavigation","queryShown","optional","queryChildRoute","queryTranslate","direction","axis","to","boxShadow","speed","queryTranslateX","queryTranslateY","inSlideLeft","outSlideRight","inSlideUp","outSlideDown","inSlideDown","routerTransition","fromState","toState","AppComponent","sanitizer","lastActivity","clearComponentStates","activeUserId","runOutsideAngular","onmousedown","recordActivity","ontouchstart","onclick","onscroll","onkeypress","bitwardenPopupMainMessageListener","sendResponse","forceWindowReload","reloadExtension","messageListener","urlAfterRedirects","getState","outlet","activatedRouteData","activatedRoute","setLastActive","sanitize","enableHtml","trustedHtml","timeOut","iconClasses","timer","getIsAuthenticated","WINDOW","MEMORY_STORAGE","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","LOG_MAC_FAILURES","AccountService","InternalAccountService","ConfigApiServiceAbstraction","EncryptService","FileUploadService","NotificationsService","ProviderService","SettingsService","StateMigrationService","AbstractStorageService","AbstractCachedStorageService","SyncNotifierService","UserVerificationApiServiceAbstraction","AccountFactory","accountConstructor","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","ServerConfigData","serverConfigResponse","gitHash","server","ThirdPartyServerConfigData","utcDate","EnvironmentServerConfigData","vault","EncryptionPair","encrypted","decrypted","ArrayBuffer","decryptedFromJson","encryptedFromJson","DataEncryptionPair","TemporaryDataEncryption","AccountData","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","cryptoMasterKey","initRecordEncryptionPairsFromJSON","decObj","AccountProfile","environmentUrls","pinProtected","serverConfig","AccountTokens","profile","tokens","StateVersion","WindowState","GlobalState","stateVersion","One","NotificationType","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","AuthRequest","AuthRequestResponse","AuthRequestPushNotification","createHubConnection","anonHubConnection","HubConnectionBuilder","withUrl","skipNegotiation","transport","withHubProtocol","MessagePackHubProtocol","build","on","ProcessNotification","stopHubConnection","notification","authResponsePushNotifiction","DeviceRequest","appId","pushToken","TokenRequest","device","alterIdentityTokenHeaders","headers","setTwoFactor","setPasswordlessAccessCode","passwordlessAuthRequest","toIdentityToken","scope","client_id","deviceName","authRequest","twoFactorToken","twoFactorProvider","twoFactorRemember","ApiTokenRequest","clientSecret","grant_type","client_secret","ApiKeyResponse","apiKey","CardApi","FieldApi","IdentityApi","LoginUriApi","LoginApi","SecureNoteApi","AttachmentResponse","PasswordHistoryResponse","CipherResponse","AttachmentUploadDataResponse","fileUploadType","cipherResponse","cipherMiniResponse","requestDeviceType","requestIpAddress","requestApproved","RegisterResponse","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","hasNoHistory","cardBrand","needsVerification","pdfUrl","paid","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","BillingHistoryResponse","BillingPaymentResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","SelectionReadOnlyResponse","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","DeviceVerificationResponse","isDeviceVerificationSectionEnabled","unknownDeviceVerificationEnabled","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EmergencyAccessGranteeDetailsResponse","granteeId","waitTimeDays","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","EmergencyAccessViewResponse","EventResponse","providerId","groupId","policyId","providerUserId","providerOrganizationId","actingUserId","ipAddress","installationId","systemUser","GroupResponse","accessAll","GroupDetailsResponse","IdentityCaptchaResponse","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","apiUseKeyConnector","IdentityTwoFactorResponse","twoFactorProviders","KeyConnectorUserKeyResponse","ListResponse","dr","continuationToken","OrganizationConnectionResponse","configType","rawConfig","OrganizationExportResponse","OrganizationSponsorshipSyncStatusResponse","lastSyncDate","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","manageScim","OrganizationUserResponse","resetPasswordEnrolled","OrganizationUserUserDetailsResponse","twoFactorEnabled","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","ProfileOrganizationResponse","usePolicies","useGroups","useDirectory","useEvents","use2fa","useApi","useSso","useKeyConnector","useScim","useCustomPermissions","useResetPassword","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","hasPublicAndPrivateKeys","ssoBound","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","keyConnectorEnabled","familySponsorshipLastSyncDateString","familySponsorshipLastSyncDate","familySponsorshipValidUntilString","familySponsorshipValidUntil","familySponsorshipToDelete","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","providerOrganizations","premiumPersonally","premiumFromOrganization","culture","securityStamp","PaymentResponse","userProfile","paymentIntentClientSecret","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","legacyYear","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","PolicyResponse","PreloginResponse","ProviderOrganizationResponse","userCount","plan","ProviderOrganizationOrganizationDetailsResponse","organizationName","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","ProviderResponse","businessName","billingEmail","SendFileApi","SendTextApi","SendAccessResponse","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","SendFileUploadDataResponse","SsoPreValidateResponse","SubscriptionResponse","storageName","storageGb","license","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","sponsoredSubscriptionItem","FolderResponse","SyncResponse","TaxInfoResponse","taxId","taxIdType","line1","line2","TaxRateResponse","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","excludeCredentials","extensions","pubKeyCredParams","rp","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","HtmlStorageLocation","logoutCallback","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","postIdentityToken","Headers","Accept","identityToken","qsStringify","getCredentials","method","responseJson","isJsonResponse","TwoFactorProviders2","clearTwoFactorToken","doAuthRefresh","postAuthRequest","getAuthResponse","getProfile","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postPrelogin","postEmailToken","postEmail","postPassword","postSetKeyConnectorKey","postSecurityStamp","getAccountRevisionDate","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKeys","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","postUserApiKey","postUserRotateApiKey","postConvertToKeyConnector","getUserBillingHistory","getUserBillingPayment","getSend","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getFullCipherDetails","getCipherAdmin","getCiphersOrganization","postCipher","postCipherCreate","postCipherAdmin","putCipher","putPartialCipher","putCipherAdmin","deleteCipherAdmin","deleteManyCiphers","deleteManyCiphersAdmin","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","putCipherCollectionsAdmin","postPurgeCiphers","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteCipherAdmin","putDeleteManyCiphers","putDeleteManyCiphersAdmin","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","deleteCipherAttachmentAdmin","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getOrganizationUser","getOrganizationUserGroups","getOrganizationUsers","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","revokeOrganizationUser","revokeManyOrganizationUsers","restoreOrganizationUser","restoreManyOrganizationUsers","getPlans","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getSync","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","getDeviceVerificationSettings","putDeviceVerificationSettings","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","Authorization","getUserPublicKey","getHibpBreach","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getOrganizationExport","getToken","tokenNeedsRefresh","nativeFetch","postCreateSponsorship","sponsoredOrgId","getSponsorshipSyncStatus","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","decodedToken","decodeToken","tokenResponse","setTokens","deviceRequest","tokenRequest","setToken","authed","hasResponse","alterHeaders","requestUrl","requestInit","FormData","responseType","responseIsJson","tokenError","isTextResponse","Message","typeHeader","storageService","makeAndGetAppId","getAnonymousAppId","existingId","htmlStorageLocation","Local","guid","hashBytes","hashStart","hashEnding","breachedAccounts","throttleKey","descriptor","originalMethod","allThrottles","throttles","getThrottles","argsThrottleKey","queue","exec","onFinally","err","AuthResult","requiresCaptcha","LogInStrategy","startLogIn","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","buildDeviceRequest","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","saveAccountInformation","accountInformation","addAccount","sub","hasPremiumPersonally","kdfType","setTwoFactorToken","createKeyPairForOldAccount","ApiLogInStrategy","getAndSetKey","setApiKeyClientId","setApiKeyClientSecret","PasswordTokenRequest","PasswordLogInStrategy","localHashedPassword","makePreloginKey","PasswordlessLogInStrategy","passwordlessCredentials","decKey","localPasswordHash","SsoTokenRequest","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","PreloginRequest","pushNotificationSubject","logInStrategy","strategy","clearState","Auto","getEverBeenUnlocked","hasKeyInMemory","preloginResponse","getPushNotifcationObs$","startSessionTimeout","clearSessionTimeout","sessionTimeout","sequentialize","cacheKey","caches","getCache","argsCacheKey","AttachmentData","CardData","FieldData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","SecureNoteData","CipherData","Attachment","decryptAttachmentKey","decValue","decryptToBytes","toAttachmentData","toCardData","Field","toFieldData","toIdentityData","LoginUri","toLoginUriData","toLoginData","toPasswordHistoryData","toSecureNoteData","Cipher","model","reduce","promise","decAttachment","decField","decPh","toCipherData","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","lastUsedIndex","lastLaunched","y","valueOf","getNextIndex","CipherBulkDeleteRequest","ids","CipherBulkMoveRequest","CipherBulkRestoreRequest","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CipherWithIdRequest","CipherBulkShareRequest","CipherCollectionsRequest","CipherCreateRequest","CipherPartialRequest","CipherShareRequest","DomainMatchBlacklist","settingsService","fileUploadService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","originalCipher","existingCipher","existingHiddenFields","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encField","encryptField","fieldModel","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","reindexCiphers","hasKey","orgKeys","getOrgKeys","userKey","grouped","agg","decCiphers","groupedCiphers","decryptItems","flat","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","includeOtherTypes","defaultMatch","eqDomainsPromise","settings$","eqDomain","matchingDomains","domainUrlHost","urlHost","getAllFromApiForOrganization","cr","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","setLocalData","decryptedCipherCache","cached","saveNeverDomain","upsert","attachmentPromises","shareAttachmentWithServer","encCipher","shareManyWithServer","encCiphers","unencryptedFile","reader","FileReader","readAsArrayBuffer","onload","evt","cData","onerror","filename","encFileName","dataEncKey","encData","encryptToBytes","adminRequest","uploadDataResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","fd","blob","Blob","filepath","contentType","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","deleteManyWithServer","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","aName","bName","softDelete","setDeletedDate","softDeleteManyWithServer","clearDeletedDate","restoreManyWithServer","restores","attachmentView","attachmentResponse","theObj","modelProp","lastUsed","autofillOnPageLoadDefault","clearSortedCiphers","CollectionData","CollectionView","Collection","setDecryptedCollections","decryptMany","decCollections","getEncryptedCollections","decryptedCollections","getDecryptedCollections","collectionCopy","setEncryptedCollections","ServerConfigResponse","ThirdPartyServerConfigResponse","EnvironmentServerConfigResponse","ServerConfig","serverConfigData","getAgeInMilliseconds","expiresSoon","LogLevelType","ConsoleLogService","timersMap","debug","write","Debug","Info","warning","Warning","level","log","EFFLongWordList","BaseEncryptedOrganizationKey","EncryptedOrganizationKey","ProviderEncryptedOrganizationKey","rsaDecrypt","toData","providerKey","getProviderKey","platformUtilService","setCryptoMasterKey","storeKey","keyHash","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","providerOrgs","encOrgKeyData","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","keySuffix","inMemoryKey","getCryptoMasterKey","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","clearSecretKeyStore","storedKeyHash","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","encOrgKey","fromData","decOrgKey","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearKeys","salt","pbkdf2","protectedKeyCs","getEncryptedPinProtected","makeShareKey","shareKey","randomBytes","keyPair","rsaGenerateKeyPair","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","buildEncKey","plainValue","encValue","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","encString","keyForEnc","encBuffer","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","getBiometricUnlock","getCryptoMasterKeyBiometric","minimumEntropy","entropyPerWord","numWords","hashArr","phrase","hashNumber","remainder","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","EncryptedObject","EncryptServiceImplementation","logMacFailures","plainBuf","encObj","aesEncrypt","macLen","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","macData","compareFast","logMacFailed","aesDecryptFast","encThing","hmac","aesDecrypt","classInitializers","MultithreadEncryptServiceImplementation","clear$","worker","Worker","restartTimeout","fromEvent","jsonItem","defaultIfEmpty","terminate","EventData","EventRequest","checkOnInterval","uploadEvents","uploadImmediately","orgIds","eventCollection","getEventCollection","setEventCollection","req","clearEvents","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","values","CipherWithIdExport","CollectionExport","CollectionWithIdExport","EventExport","humanReadableMessage","appIcon","appName","userName","userEmail","ip","Folder","FolderExport","FolderWithIdExport","FileUploadType","getEncryptedExport","getDecryptedExport","clearText","encKeyValidation","encText","jsonDoc","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","padNumber","getMonth","getHours","getMinutes","getSeconds","decFolders","foldersMap","exportCiphers","buildCommonCipher","exportData","exportPromises","decCol","collectionsMap","orgKey","num","padCharacter","numString","login_uri","login_username","login_password","login_totp","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","toUTCString","searchParams","blobResponse","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","utfBlockId","blockIdList","xml","Version","month","day","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","FolderData","FolderRequest","FolderApiService","postFolder","putFolder","deleteFolder","OrganizationUserType","_folders","_folderViews","activeAccountUnlocked$","unlocked","getEncryptedFolders","updateObservables","getValue","getAllDecryptedFromState","decryptFolders","setEncryptedFolders","updates","cId","decryptFolderPromises","decryptedFolders","SetKeyConnectorKeyRequest","KeyConnectorUserKeyRequest","setUsesKeyConnector","userNeedsMigration","loggedInUsingSso","getIsExternal","requiredByOrganization","userIsNotUsingKeyConnector","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","Admin","Owner","pubKey","privKey","setPasswordRequest","setConvertAccountRequired","setConvertAccountToKeyConnector","getConvertAccountToKeyConnector","_email","_rememberEmail","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","connected","inactive","reconnectTimer","signalrConnection","off","accessTokenFactory","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","reconnectFromActivity","disconnectFromInactivity","isAuthenticated","payloadUserId","UserId","myUserId","syncUpsertCipher","syncDeleteCipher","syncUpsertFolder","syncDeleteFolder","syncUpsertSend","syncDeleteSend","OrganizationApiKeyInformationResponse","keyType","OrganizationAutoEnrollStatusResponse","KeysResponse","OrganizationKeysResponse","OrganizationResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","planType","maxAutoscaleSeats","OrganizationSubscriptionResponse","SsoConfigApi","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","Organization","canAccess","isManager","Manager","isAdmin","isOwner","canAccessEventLogs","canAccessImportExport","canAccessReports","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canViewAllCollections","canEditAssignedCollections","canDeleteAssignedCollections","canViewAssignedCollections","canManageGroups","canManageSso","canManageScim","canManagePolicies","canManageUsers","canManageUsersPassword","isExemptFromPolicies","canManageBilling","hasProvider","_organizations","getOrganizations","organizationsMap","canManageSponsorships","getFromState","getByIdentifier","setOrganizations","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","minNumber","minUppercase","minLowercase","minSpecial","wordSeparator","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","getPasswordGeneratorPolicyOptions","PasswordGenerator","currentPolicy","useUpper","useLower","minNumbers","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decryptHistory","setDecryptedPasswordGenerationHistory","currentHistory","matchesPrevious","unshift","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","userInputs","globalUserInputs","finalUserInputs","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","PolicyData","PolicyApiService","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","mapPoliciesFromToken","putPolicy","Policy","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","_policies","getEncryptedPolicies","decryptedPolicies","getDecryptedPolicies","diskPolicies","setDecryptedPolicies","of","obsPolicies","filteredPolicies","policyType","policyFilter","checkPoliciesThatApplyToUser","newPassword","toLocaleLowerCase","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","ResetPassword","policiesResponse","policyAppliesToUser","setEncryptedPolicies","isExcemptFromPolicies","policiesMap","policySet","Accepted","Provider","isProviderAdmin","canCreateOrganizations","ProviderAdmin","indexing","immediateSearchLocales","defaultSearchableMinLength","searchableMinLength","locale$","registeredPipeline","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","normalizeSearchQuery","builder","Builder","pipeline","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","results","isArray","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","sendsMatched","lowPriorityMatched","joined","protocolIndex","queryIndex","searchableFields","metadata","normalize","SendFileData","SendTextData","SendData","SendFile","SendText","Send","SendRequest","fileLength","setDecryptedSends","fileData","passwordHash","encryptFileData","parseFile","getEncryptedSends","decSends","getDecryptedSends","legacyServerSendFileUpload","setEncryptedSends","StorageLocation","_settings","getSettings","setEquivalentDomains","setSettings","ProviderData","State","globals","accounts","authenticatedAccounts","accountActivity","accountDeserializer","buildAccountMapFromJSON","jsonAccounts","partialKeys","DDG_SHARED_KEY","secureStorageService","memoryStorageService","stateMigrationService","stateFactory","useAccountCache","activeAccountSubject","activeAccountUnlockedSubject","hasBeenInited","isRecoveredSession","accountDiskCache","needsMigration","migrate","setState","createGlobals","initAccountState","updateState","syncAccountFromDisk","storedActiveUser","pushAccounts","diskAccount","getAccountFromDisk","account","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setActiveUser","clearDecryptedDataForActiveUser","clean","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricText","biometricUnlock","getHasPremiumPersonally","getHasPremiumFromOrganization","setHasPremiumPersonally","hasPremiumFromOrganization","setHasPremiumFromOrganization","defaultOnDiskLocalOptions","collapsedGroupings","convertAccountToKeyConnector","nextValue","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","disableAddLoginNotification","disableAutoTotpCopy","disableBadgeCounter","disableChangedPasswordNotification","disableContextMenuItem","getDisableGa","disableGa","setDisableGa","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","getDuckDuckGoSharedKey","setDuckDuckGoSharedKey","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableDuckDuckGoBrowserIntegration","enableDuckDuckGoBrowserIntegration","setEnableDuckDuckGoBrowserIntegration","getEnableFullWidth","enableFullWidth","setEnableFullWidth","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getGlobalEnvironmentUrls","getEquivalentDomains","everBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getLastActive","getLocale","setLocale","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","organizationInvitation","setOrganizationInvitation","passwordGenerationOptions","getUsernameGenerationOptions","usernameGenerationOptions","setUsernameGenerationOptions","setRefreshToken","rememberedEmail","getSecurityStamp","setSecurityStamp","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","ssoState","setTheme","setVaultTimeout","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","setServerConfig","getServerConfig","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","setDiskCache","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deleteDiskCache","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","deserializer","stateUpdater","updatedState","withPrototypeForArrayMembers","memberConstructor","memberConverter","originalResult","getOwnPropertyDescriptors","withPrototypeForObjectValues","valuesConstructor","valuesConverter","decoded","clientIdClientSecret","setClientId","setClientSecret","clearToken","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","email_verified","getName","getIssuer","iss","amr","v1Keys","autoConfirmFingerprints","enableBiometric","encOrgKeys","encPrivate","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","Four","getAuthenticatedAccounts","migratedAccount","migrateAccountFrom4To5","setCurrentStateVersion","Five","migrateAccountFrom5To6","Six","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","legacyEtmKey","authenticationStatus","authenticatedUserIds","encryptedOrgKeys","newVersion","OrganizationData","providerService","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","isEdit","localFolder","remoteFolder","shouldUpdate","localCipher","checkCollections","remoteCipher","localSend","remoteSend","eqDomains","_sync","sync$","B32Chars","SteamChars","period","digits","keyB32","isOtpAuth","isSteamAuth","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","keyBytes","b32ToBytes","sign","offset","otp","fullCode","trunc","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","UserVerificationApiService","postAccountVerifyOTP","postAccountRequestOTP","VerifyOTPRequest","userVerificationApiService","buildRequest","verification","requestClass","alreadyHashed","validateInput","AnonAddyForwarder","generate","anonaddy","redirect","DuckDuckGoForwarder","FastmailForwarder","accountId","getAccountId","using","methodCalls","emailPrefix","fastmail","methodResponses","notCreated","primaryAccounts","FirefoxRelayForwarder","generated_for","full_address","ForwarderOptions","FastmailForwarderOptions","AnonAddyForwarderOptions","SimpleLoginForwarder","Authentication","note","alias","wordCapitalize","wordIncludeNumber","forwardedService","forwardedAnonAddyDomain","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwarder","forwarderOptions","forwardedSimpleLoginApiKey","forwardedAnonAddyApiToken","forwardedFirefoxApiToken","forwardedFastmailApiToken","forwardedDuckDuckGoToken","charSet","lockedCallback","loggedOutCallback","startCheck","checkVaultTimeout","shouldLock","executeTimeoutAction","vaultTimeoutSeconds","currentAction","DecryptParameters","WebCryptoFunctionService","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","okm","md","valueBytes","toByteString","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","putInt32","meta","encKeyByteString","macKeyByteString","parameters","dataBuffer","decipher","finish","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","buf","subscribers","messageCallback","ThemeBuilder","configuredTheme","systemTheme","effectiveTheme","updateSystemTheme","ThemingService","_theme","theme$","monitorThemeChanges","getSystemTheme","monitorConfiguredThemeChanges","monitorSystemThemeChanges","matchMedia","JslibServicesModule","useFactory","deps","language","accountService","deleteAccount","verificationRequest","cryptoFunctionservice","errors","controlErrors","keyError","getBilling","getSubscription","getLicense","createLicense","updatePayment","upgrade","updateSubscription","updateSeats","updateStorage","verifyBank","reinstate","updateLicense","importDirectory","getOrCreateApiKey","getApiKeyInformation","organizationApiKeyType","rotateApiKey","updateTaxInfo","updateKeys","getSso","updateSso","configApiService","_serverConfig","switchMap","E","buildServerConfig","fetchServerConfig","defaultErrorMessage","ContainerService","attachToGlobal","MemoryStorageService","SystemService","reloadCallback","reloadInterval","clearClipboardTimeout","clearClipboardTimeoutFunction","startProcessReload","cancelProcessReload","executeProcessReload","inactiveMoreThanSeconds","seconds","doRefresh","biometricLockedFingerprintValidated","clipboardValue","timeoutMs","clearSeconds","clipboardValueNow","clearPendingClipboard","factory","cachedServices","opts","alwaysInitializeNewService","instanceOrPromise","doNotStoreInitializedService","AbstractChromeStorageService","chromeStorageApi","keyedObj","BrowserLocalStorageService","local","BrowserMemoryStorageService","session","LocalBackedSessionStorageService","keyGenerationService","localStorage","sessionStorage","getBypassCache","getLocalSession","getSessionEncKey","sessionEncKey","localSession","setLocalSession","sessionJson","setSessionEncKey","setEncryptedLocalSession","setDecryptedLocalSession","jsonSession","encSession","storedKey","makeEphemeralKey","cryptoFunctionServiceFactory","cryptoFunctionServiceOptions","logServiceFactory","logServiceOptions","encryptServiceOptions","KeyGenerationService","numBytes","diskStorageServiceFactory","secureStorageServiceFactory","memoryStorageServiceFactory","keyGenerationServiceFactory","appIdServiceFactory","SessionSyncer","subject","metaData","ignoreNUpdates","ctor","initializer","ReplaySubject","_buffer","observe","hasInSessionMemory","sessionKey","listenForUpdates","updateSession","updateMessageCommand","updateFromMessage","itemBuilder","initializeAs","keyValuePair","getFromSessionMemory","setInSessionMemory","browserSession","__syncedItemMetadata","__sessionSyncers","buildSyncer","syncer","sessionSync","buildOptions","AccountSettings","Account","groupings","stateServiceFactory","service","stateMigrationServiceOptions","stateMigrationServiceFactory","stateServiceOptions","environmentServiceFactory","BrowserMessagingService","messagingServiceFactory","platformUtilsServiceFactory","platformUtilsServiceOptions","tokenServiceFactory","apiServiceFactory","apiServiceOptions","BrowserCryptoService","cryptoServiceFactory","systemLanguage","localesDirectory","getLocalesJson","_locale","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","getMessage","i18nServiceFactory","i18nServiceOptions","BrowserOrganizationService","keyConnectorServiceFactory","organizationServiceFactory","keyConnectorServiceOptions","authServiceFactory","twoFactorServiceFactory","BrowserSettingsService","cipherServiceFactory","settingsServiceFactory","fileUploadServiceFactory","cipherServiceOptions","searchServiceFactory","UpdateBadge","badgeAction","getBrowserAction","getSidebarAction","activeInfo","addedTabId","removedTabId","serviceCache","listenedToCommands","initServices","existingServices","getTab","setBadgeBackgroundColor","setLoggedOut","setLocked","setUnlocked","setBadgeIcon","setBadgeText","countText","isOperaSidebar","setActionText","setSideBarText","iconSuffix","setActionIcon","setSidebarActionIcon","setTitle","setIcon","useSyncApiCalls","lastFocusedWindow","existingServiceCache","AutofillScript","documentUUID","script","properties","autosubmit","AutoFillConstants","UsernameFieldNames","PasswordFieldIgnoreList","ExcludedAutofillTypes","CreditCardAutoFillConstants","CardAttributes","CardAttributesExtended","CardHolderFieldNames","CardHolderFieldNameValues","CardNumberFieldNames","CardNumberFieldNameValues","CardExpiryFieldNames","CardExpiryFieldNameValues","ExpiryMonthFieldNames","ExpiryYearFieldNames","CVVFieldNames","CardBrandFieldNames","MonthAbbr","YearAbbrShort","YearAbbrLong","IdentityAutoFillConstants","IdentityAttributes","FullNameFieldNames","FullNameFieldNameValues","TitleFieldNames","FirstnameFieldNames","MiddlenameFieldNames","LastnameFieldNames","EmailFieldNames","AddressFieldNames","AddressFieldNameValues","Address1FieldNames","Address2FieldNames","Address3FieldNames","PostalCodeFieldNames","CityFieldNames","StateFieldNames","CountryFieldNames","PhoneFieldNames","UserNameFieldNames","CompanyFieldNames","IsoCountries","afghanistan","albania","algeria","andorra","angola","anguilla","antarctica","argentina","armenia","aruba","australia","austria","azerbaijan","bahamas","bahrain","bangladesh","barbados","belarus","belgium","belize","benin","bermuda","bhutan","bolivia","botswana","brazil","bulgaria","burundi","cambodia","cameroon","canada","chad","chile","china","colombia","comoros","congo","croatia","cuba","cyprus","denmark","djibouti","dominica","ecuador","egypt","eritrea","estonia","ethiopia","fiji","finland","france","gabon","gambia","georgia","germany","ghana","gibraltar","greece","greenland","grenada","guadeloupe","guam","guatemala","guernsey","guinea","guyana","haiti","honduras","hungary","iceland","india","indonesia","iraq","ireland","israel","italy","jamaica","japan","jersey","jordan","kazakhstan","kenya","kiribati","kuwait","kyrgyzstan","latvia","lebanon","lesotho","liberia","liechtenstein","lithuania","luxembourg","macao","macedonia","madagascar","malawi","malaysia","maldives","mali","malta","martinique","mauritania","mauritius","mayotte","mexico","moldova","monaco","mongolia","montenegro","montserrat","morocco","mozambique","myanmar","namibia","nauru","nepal","netherlands","nicaragua","niger","nigeria","niue","norway","oman","pakistan","palau","panama","paraguay","peru","philippines","pitcairn","poland","portugal","qatar","reunion","romania","rwanda","samoa","senegal","serbia","seychelles","singapore","slovakia","slovenia","somalia","spain","sudan","suriname","swaziland","sweden","switzerland","taiwan","tajikistan","tanzania","thailand","togo","tokelau","tonga","tunisia","turkey","turkmenistan","tuvalu","uganda","ukraine","uruguay","uzbekistan","vanuatu","venezuela","vietnam","yemen","zambia","zimbabwe","IsoStates","alabama","alaska","arizona","arkansas","california","colorado","connecticut","delaware","florida","hawaii","idaho","illinois","indiana","iowa","kansas","kentucky","louisiana","maine","maryland","massachusetts","michigan","minnesota","mississippi","missouri","montana","nebraska","nevada","ohio","oklahoma","oregon","pennsylvania","tennessee","texas","utah","vermont","virginia","washington","wisconsin","wyoming","IsoProvinces","alberta","manitoba","ontario","quebec","saskatchewan","getFormsWithPasswordFields","formData","passwordFields","loadPasswordFields","formKey","forms","formPasswordFields","pf","uf","findUsernameField","passwords","totpPromise","didAutofill","pd","fillScript","generateFillScript","skipUsernameOnlyFill","onlyEmptyFields","onlyVisibleFields","delay_between_operations","skipLastUsed","Cipher_ClientAutofilled","doAutoFillOnTab","fromCommand","lastLaunchedCipher","doAutoFillActiveTab","getActiveTab","filledFields","fieldNames","hasValue","opid","viewable","matchingIndex","findMatchingFieldIndex","matchingField","fillByOpid","generateLoginFillScript","generateCardFillScript","generateIdentityFillScript","usernames","savedUrls","setFillScriptForFocus","passwordFieldsForForm","passField","elementNumber","fieldIsFuzzyMatch","fillFields","forCustomFieldsOnly","isExcludedType","attr","isFieldMatch","makeScriptAction","selectInfo","siOptions","fieldAttrsContain","maxLength","colonIndex","fullMonth","fullYear","partYear","makeScriptActionWithValue","containsVal","doesContain","filledState","stateLower","isoState","filledCountry","countryLower","isoCountry","excludedTypes","containsOptions","checkValueContains","cipherData","dataProp","fieldProp","dataValue","doFill","canBeHidden","canBeReadOnly","mustBeEmpty","isPassword","valueIsLikePassword","cleanedValue","readonly","htmlID","htmlName","placeholder","autoCompleteType","passwordField","withoutForm","usernameField","names","fieldPropertyIsPrefixMatch","fieldPropertyIsMatch","property","separator","sepIndex","fieldVal","regexParts","csvParts","csvVals","fuzzyMatch","lastField","lastPasswordField","BrowserFolderService","BrowserPolicyService","BrowserMessagingPrivateModeBackgroundService","checkSafari","CommandsBackground","main","processCommand","commandToRetry","commands","onCommand","generatePasswordToClipboard","autoFillLogin","openPopup","getTabFromCurrentWindowId","retryMessage","tabSendMessageData","collectPageDetailsForContentScript","ContextMenusBackground","noopCommandSuffix","contextMenus","onClicked","menuItemId","getClickedElement","parentMenuItemId","cipherAction","startAutofillPage","Cipher_ClientCopiedPassword","totpValue","loginToAutoFill","IdleBackground","notificationsService","idleTimer","idleState","idle","idleHandler","newState","onStateChanged","setDetectionInterval","pollIdle","handler","queryState","NativeMessagingBackground","runtimeBackground","resolver","secureSetupResolve","onAdded","connect","port","connecting","connectedCallback","disconnect","sharedSecret","validatingFingerprint","showFingerprintDialog","showWrongUserDialog","onDisconnect","timestamp","encryptMessage","secureCommunication","getResponse","rawMessage","abs","processMessage","sendUnencrypted","NotificationQueueMessageType","NotificationBackground","notificationQueue","cleanupNotificationQueue","getDataForTab","responseCommand","addLogin","changedPassword","removeTabFromNotificationQueue","saveOrUpdateCredentials","saveNever","checkNotificationQueue","doNotificationQueueCheck","currentTab","expires","tabDomain","AddLogin","typeData","isVaultLocked","wasVaultLocked","getCurrentTheme","ChangePassword","loginInfo","loginDomain","normalizedUsername","disabledAddLogin","allowPersonalOwnership","pushAddLoginToQueue","usernameMatches","pushChangePasswordToQueue","changeData","currentPassword","passwordMatches","queueMessage","changePasswordMessage","getDecryptedCipherById","updateCipher","createNewCipher","addLoginMessage","loginModel","newCipher","RuntimeBackground","systemService","pageDetailsToAutoFill","onInstalledReason","lockedVaultPendingNotifications","onInstalled","reason","checkOnInstalled","backgroundMessageListener","popupOnlyContext","bitwardenBackgroundMessageListener","closeLoginTab","focusSpecifiedTab","refreshBadge","refreshMenu","logout","reseedStorage","autofillTimeout","autofillPage","referrer","tabToAutoFill","TabsBackground","notificationBackground","onFocusChanged","focusedWindowId","onActivated","onReplaced","onReplacedRan","onUpdated","changeInfo","onUpdatedRan","WebRequestBackground","pendingAuthRequests","webRequest","onAuthRequired","requestId","resolveAuthCredentials","onCompleted","completeAuthRequest","onErrorOccurred","authCredentials","MainBackground","isPrivateMode","backgroundWindow","menuOptionsLoaded","nativeMessagingBackground","syncNotifierService","that","backgroundMessagingService","containerService","commandsBackground","tabsBackground","contextMenusBackground","idleBackground","webRequestBackground","bootstrap","getPrivateModeWindows","onWindowCreated","forLocked","menuDisabled","contextMenusRemoveAll","buildContextMenu","loadMenuForNoAccessState","contextMenuReady","buildingContextMenu","contextMenusCreate","contexts","parentId","contextMenuEnabled","loadMenu","loadLoginContextMenuOptions","loadNoLoginsContextMenuOptions","loadContextMenuOptions","noLoginsMessage","idSuffix","sanitizeContextMenuTitle","override","syncInternal","lastSyncAgo","scheduleNextSync","syncTimeout","removeAll","actionSetIcon","theAction","suffix","FileDownloadBuilder","_request","fileType","downloadMethod","fileNameLower","endsWith","BrowserFileDownloadService","msSaveOrOpenBlob","msSaveBlob","createObjectURL","BrowserMessagingPrivateModePopupService","InitService","screen","availHeight","htmlEl","platform","screenLeft","screenTop","LockGuardService","PasswordRepromptComponent","PopupSearchService","mainSearchService","consoleLogService","UnauthGuardService","needsBackgroundInit","mainBackground","localBgService","createLocalBgService","bitwardenMain","getBgService","ServicesModule","initService","AppModule","positionClass","bootstrapModule","preserveWhitespaces","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","chunkId","globalThis","Function","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","scripts","baseURI","installedChunks","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}